15
{"last_modification_time":1548168587,"language":2,"import_file":"/home/dark/proj/faust/tools/physicalModeling/mesh2faust/vega/libraries/mesher/delaunayMesher.cpp","args":["clang++","-working-directory=/home/dark/proj/faust/","/home/dark/proj/faust/tools/physicalModeling/mesh2faust/vega/libraries/mesher/delaunayMesher.cpp","-resource-dir=/usr/lib/clang/7.0.1","-Wno-unknown-warning-option","-fparse-all-comments","-isystem/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/8.2.1/../../../../include/c++/8.2.1","-isystem/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/8.2.1/../../../../include/c++/8.2.1/x86_64-pc-linux-gnu","-isystem/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/8.2.1/../../../../include/c++/8.2.1/backward","-isystem/usr/local/include","-isystem/usr/lib/clang/7.0.1/include","-isystem/usr/include"],"includes":[{"line":31,"resolved_path":"/usr/lib/clang/7.0.1/include/stddef.h"},{"line":32,"resolved_path":"/usr/include/c++/8.2.1/cassert"},{"line":33,"resolved_path":"/usr/include/c++/8.2.1/iostream"},{"line":34,"resolved_path":"/usr/include/c++/8.2.1/list"},{"line":35,"resolved_path":"/usr/include/c++/8.2.1/map"},{"line":36,"resolved_path":"/usr/include/c++/8.2.1/set"},{"line":37,"resolved_path":"/usr/include/c++/8.2.1/utility"},{"line":38,"resolved_path":"/usr/include/c++/8.2.1/vector"}],"dependencies":["/home/dark/proj/faust/tools/physicalModeling/mesh2faust/vega/libraries/mesher/delaunayMesher.cpp","/usr/include/c++/8.2.1/algorithm","/usr/include/c++/8.2.1/utility","/usr/include/c++/8.2.1/x86_64-pc-linux-gnu/bits/c++config.h","/usr/include/c++/8.2.1/x86_64-pc-linux-gnu/bits/os_defines.h","/usr/include/features.h","/usr/include/sys/cdefs.h","/usr/include/gnu/stubs.h","/usr/include/c++/8.2.1/bits/stl_pair.h","/usr/include/c++/8.2.1/bits/move.h","/usr/include/c++/8.2.1/bits/concept_check.h","/usr/include/c++/8.2.1/type_traits","/usr/include/c++/8.2.1/initializer_list","/usr/include/c++/8.2.1/bits/stl_algobase.h","/usr/include/c++/8.2.1/bits/functexcept.h","/usr/include/c++/8.2.1/bits/cpp_type_traits.h","/usr/include/c++/8.2.1/ext/type_traits.h","/usr/include/c++/8.2.1/ext/numeric_traits.h","/usr/include/c++/8.2.1/bits/stl_iterator_base_types.h","/usr/include/c++/8.2.1/bits/stl_iterator_base_funcs.h","/usr/include/c++/8.2.1/bits/stl_iterator.h","/usr/include/c++/8.2.1/bits/ptr_traits.h","/usr/include/c++/8.2.1/debug/debug.h","/usr/include/c++/8.2.1/bits/stl_algo.h","/usr/include/c++/8.2.1/cstdlib","/usr/include/stdlib.h","/usr/include/bits/libc-header-start.h","/usr/include/bits/floatn.h","/usr/include/bits/floatn-common.h","/usr/include/bits/types/locale_t.h","/usr/include/sys/types.h","/usr/include/bits/types.h","/usr/include/bits/types/clock_t.h","/usr/include/bits/types/clockid_t.h","/usr/include/bits/types/time_t.h","/usr/include/bits/types/timer_t.h","/usr/include/bits/stdint-intn.h","/usr/include/endian.h","/usr/include/bits/byteswap.h","/usr/include/bits/uintn-identity.h","/usr/include/sys/select.h","/usr/include/bits/select.h","/usr/include/bits/types/sigset_t.h","/usr/include/bits/types/struct_timeval.h","/usr/include/bits/types/struct_timespec.h","/usr/include/bits/pthreadtypes.h","/usr/include/bits/thread-shared-types.h","/usr/include/bits/pthreadtypes-arch.h","/usr/include/alloca.h","/usr/include/c++/8.2.1/bits/std_abs.h","/usr/include/c++/8.2.1/bits/algorithmfwd.h","/usr/include/c++/8.2.1/bits/stl_heap.h","/usr/include/c++/8.2.1/bits/stl_tempbuf.h","/usr/include/c++/8.2.1/bits/stl_construct.h","/usr/include/c++/8.2.1/new","/usr/include/c++/8.2.1/exception","/usr/include/c++/8.2.1/bits/exception.h","/usr/include/c++/8.2.1/bits/exception_ptr.h","/usr/include/c++/8.2.1/bits/cxxabi_init_exception.h","/usr/lib/clang/7.0.1/include/stddef.h","/usr/include/c++/8.2.1/typeinfo","/usr/include/c++/8.2.1/bits/hash_bytes.h","/usr/include/c++/8.2.1/bits/nested_exception.h","/usr/include/c++/8.2.1/ext/alloc_traits.h","/usr/include/c++/8.2.1/bits/alloc_traits.h","/usr/include/c++/8.2.1/bits/memoryfwd.h","/usr/include/c++/8.2.1/bits/uniform_int_dist.h","/usr/include/c++/8.2.1/limits","/usr/include/c++/8.2.1/queue","/usr/include/c++/8.2.1/deque","/usr/include/c++/8.2.1/bits/allocator.h","/usr/include/c++/8.2.1/x86_64-pc-linux-gnu/bits/c++allocator.h","/usr/include/c++/8.2.1/ext/new_allocator.h","/usr/include/c++/8.2.1/bits/stl_uninitialized.h","/usr/include/c++/8.2.1/bits/stl_deque.h","/usr/include/c++/8.2.1/bits/range_access.h","/usr/include/c++/8.2.1/vector","/usr/include/c++/8.2.1/bits/stl_vector.h","/usr/include/c++/8.2.1/bits/stl_bvector.h","/usr/include/c++/8.2.1/bits/functional_hash.h","/usr/include/c++/8.2.1/bits/stl_function.h","/usr/include/c++/8.2.1/bits/stl_queue.h","/usr/include/c++/8.2.1/bits/uses_allocator.h","/usr/include/c++/8.2.1/iostream","/usr/include/c++/8.2.1/ostream","/usr/include/c++/8.2.1/ios","/usr/include/c++/8.2.1/iosfwd","/usr/include/c++/8.2.1/bits/stringfwd.h","/usr/include/c++/8.2.1/bits/postypes.h","/usr/include/c++/8.2.1/cwchar","/usr/include/wchar.h","/usr/include/bits/types/mbstate_t.h","/usr/include/c++/8.2.1/bits/char_traits.h","/usr/include/c++/8.2.1/cstdint","/usr/lib/clang/7.0.1/include/stdint.h","/usr/include/stdint.h","/usr/include/bits/stdint-uintn.h","/usr/include/c++/8.2.1/bits/localefwd.h","/usr/include/c++/8.2.1/x86_64-pc-linux-gnu/bits/c++locale.h","/usr/include/c++/8.2.1/clocale","/usr/include/locale.h","/usr/include/c++/8.2.1/cctype","/usr/include/ctype.h","/usr/include/c++/8.2.1/bits/ios_base.h","/usr/include/c++/8.2.1/ext/atomicity.h","/usr/include/c++/8.2.1/x86_64-pc-linux-gnu/bits/gthr.h","/usr/include/c++/8.2.1/x86_64-pc-linux-gnu/bits/gthr-default.h","/usr/include/pthread.h","/usr/include/sched.h","/usr/include/bits/sched.h","/usr/include/time.h","/usr/include/bits/time.h","/usr/include/bits/timex.h","/usr/include/bits/types/struct_tm.h","/usr/include/bits/types/struct_itimerspec.h","/usr/include/bits/setjmp.h","/usr/include/c++/8.2.1/bits/locale_classes.h","/usr/include/c++/8.2.1/string","/usr/include/c++/8.2.1/bits/ostream_insert.h","/usr/include/c++/8.2.1/bits/basic_string.h","/usr/include/c++/8.2.1/ext/string_conversions.h","/usr/include/c++/8.2.1/cstdio","/usr/include/stdio.h","/usr/include/bits/types/__fpos_t.h","/usr/include/bits/types/__fpos64_t.h","/usr/include/bits/types/struct_FILE.h","/usr/include/bits/types/cookie_io_functions_t.h","/usr/include/c++/8.2.1/cerrno","/usr/include/errno.h","/usr/include/bits/errno.h","/usr/include/linux/errno.h","/usr/include/asm/errno.h","/usr/include/asm-generic/errno.h","/usr/include/c++/8.2.1/bits/basic_string.tcc","/usr/include/c++/8.2.1/system_error","/usr/include/c++/8.2.1/x86_64-pc-linux-gnu/bits/error_constants.h","/usr/include/c++/8.2.1/stdexcept","/usr/include/c++/8.2.1/streambuf","/usr/include/c++/8.2.1/bits/basic_ios.h","/usr/include/c++/8.2.1/bits/locale_facets.h","/usr/include/c++/8.2.1/cwctype","/usr/include/wctype.h","/usr/include/bits/wctype-wchar.h","/usr/include/c++/8.2.1/bits/streambuf_iterator.h","/usr/include/c++/8.2.1/bits/ostream.tcc","/usr/include/c++/8.2.1/istream","/usr/include/c++/8.2.1/bits/istream.tcc","/usr/include/c++/8.2.1/cassert","/usr/include/assert.h","/usr/include/c++/8.2.1/cmath","/usr/include/math.h","/usr/include/bits/math-vector.h","/usr/include/c++/8.2.1/list","/usr/include/c++/8.2.1/bits/stl_list.h","/usr/include/c++/8.2.1/bits/allocated_ptr.h","/usr/include/c++/8.2.1/ext/aligned_buffer.h","/usr/include/c++/8.2.1/map","/usr/include/c++/8.2.1/bits/stl_tree.h","/usr/include/c++/8.2.1/bits/stl_map.h","/usr/include/c++/8.2.1/tuple","/usr/include/c++/8.2.1/array","/usr/include/c++/8.2.1/bits/invoke.h","/usr/include/c++/8.2.1/bits/stl_multimap.h","/usr/include/c++/8.2.1/set","/usr/include/c++/8.2.1/bits/stl_set.h","/usr/include/c++/8.2.1/bits/stl_multiset.h","/usr/include/c++/8.2.1/bits/stl_relops.h","/usr/include/c++/8.2.1/bits/predefined_ops.h","/usr/include/bits/types/__locale_t.h","/usr/include/bits/types/__sigset_t.h","/usr/lib/clang/7.0.1/include/__stddef_max_align_t.h","/usr/include/c++/8.2.1/bits/deque.tcc","/usr/include/c++/8.2.1/bits/vector.tcc","/usr/include/c++/8.2.1/backward/binders.h","/usr/lib/clang/7.0.1/include/stdarg.h","/usr/include/bits/types/wint_t.h","/usr/include/bits/types/__mbstate_t.h","/usr/include/bits/types/__FILE.h","/usr/include/bits/types/FILE.h","/usr/include/bits/types/struct_sched_param.h","/usr/include/bits/cpu-set.h","/usr/include/c++/8.2.1/x86_64-pc-linux-gnu/bits/atomic_word.h","/usr/include/c++/8.2.1/bits/cxxabi_forced.h","/usr/include/bits/sys_errlist.h","/usr/include/bits/types/error_t.h","/usr/include/c++/8.2.1/bits/locale_classes.tcc","/usr/include/c++/8.2.1/bits/streambuf.tcc","/usr/include/c++/8.2.1/x86_64-pc-linux-gnu/bits/ctype_base.h","/usr/include/c++/8.2.1/x86_64-pc-linux-gnu/bits/ctype_inline.h","/usr/include/c++/8.2.1/bits/locale_facets.tcc","/usr/include/c++/8.2.1/bits/basic_ios.tcc","/usr/include/bits/mathcalls-helper-functions.h","/usr/include/bits/mathcalls.h","/usr/include/bits/mathcalls-narrow.h","/usr/include/bits/iscanonical.h","/usr/include/c++/8.2.1/bits/list.tcc","/usr/include/stdc-predef.h","/usr/include/bits/wordsize.h","/usr/include/gnu/stubs-64.h","/usr/include/c++/8.2.1/x86_64-pc-linux-gnu/bits/cpu_defines.h","/usr/include/c++/8.2.1/bits/exception_defines.h","/usr/include/c++/8.2.1/debug/assertions.h","/usr/include/bits/waitflags.h","/usr/include/bits/waitstatus.h","/usr/include/bits/typesizes.h","/usr/include/bits/endian.h","/usr/include/bits/stdlib-float.h","/usr/include/bits/wchar.h","/usr/include/bits/locale.h","/usr/include/bits/stdio_lim.h","/usr/include/asm-generic/errno-base.h","/usr/include/bits/libm-simd-decl-stubs.h","/usr/include/bits/flt-eval-method.h","/usr/include/bits/fp-logb.h","/usr/include/bits/fp-fast.h"],"skipped_by_preprocessor":[],"types":[{"id":0,"usr":10197732303800454747,"detailed_name":"TetMesh","short_name_offset":0,"short_name_size":7,"kind":5,"hover":"","comments":"","declarations":["50:7-50:14|-1|1|1"],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["78:3-78:10|-1|1|4","101:22-101:29|-1|1|4","340:43-340:50|-1|1|4"]},{"id":1,"usr":17593574072614977478,"detailed_name":"VerticesQuery","short_name_offset":0,"short_name_size":13,"kind":5,"hover":"","comments":"","declarations":["51:7-51:20|-1|1|1"],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[37],"uses":["351:3-351:16|-1|1|4"]},{"id":2,"usr":14436079855080336539,"detailed_name":"DelaunayMesher","short_name_offset":0,"short_name_size":14,"kind":5,"hover":"","comments":"","declarations":["56:3-56:17|-1|1|4","57:12-57:26|-1|1|4","246:18-246:32|-1|1|4"],"spell":"53:7-53:21|-1|1|2","extent":"53:1-387:2|-1|1|0","bases":[],"derived":[],"types":[],"funcs":[0,1,2,3,4,5,6,7,8,9,10,11,15,16,18,19,20,21,22,23,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69],"vars":[30,31,32,33,34,35,36,37,38,39,40,2,7,8,41,42,43],"instances":[16],"uses":["56:3-56:17|2|2|4","203:11-203:25|-1|1|4","216:50-216:64|-1|1|4","259:3-259:17|-1|1|4","308:3-308:17|-1|1|4"]},{"id":3,"usr":5778908825573379114,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["82:3-82:9|-1|1|4"]},{"id":4,"usr":17,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[0,4,5,6,12,13,14,17,18,19,20,21,22,23,24,26,27,28,29,31,32,33,38,39,40,41,42],"uses":[]},{"id":5,"usr":3,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[1,2,3,2],"uses":[]},{"id":6,"usr":18282577414915801140,"detailed_name":"DelaunayMesher::VoronoiEdge","short_name_offset":16,"short_name_size":11,"kind":23,"hover":"","comments":"A struct for Voronoi Edge\nA Voronoi Edge is the line connecting two adjacent tet centers in Delaunay, or an infinite line starting at one border tet center,\nand pointing outside perpendicular to a border face on this tet","declarations":["125:5-125:16|-1|1|4","126:5-126:16|-1|1|4"],"spell":"119:10-119:21|2|2|2","extent":"119:3-128:4|2|2|0","bases":[],"derived":[],"types":[],"funcs":[12,13,14],"vars":[3,4,5,6],"instances":[],"uses":["125:5-125:16|6|2|4","126:5-126:16|6|2|4","244:5-244:16|-1|1|4"]},{"id":7,"usr":4511396868733828174,"detailed_name":"DelaunayMesher::VoronoiEdgeMap","short_name_offset":16,"short_name_size":14,"kind":252,"hover":"typedef std::map<UTriKey, VoronoiEdge> DelaunayMesher::VoronoiEdgeMap","comments":"","declarations":[],"spell":"130:42-130:56|2|2|2","extent":"130:3-130:56|2|2|0","alias_of":4,"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[7,8,7,8],"uses":["130:42-130:56|2|2|4","136:9-136:23|-1|1|4","137:9-137:23|-1|1|4","378:3-378:17|-1|1|4","379:3-379:17|-1|1|4"]},{"id":8,"usr":15056562252494237042,"detailed_name":"DelaunayMesher::VEdgeIter","short_name_offset":16,"short_name_size":9,"kind":252,"hover":"typedef VoronoiEdgeMap::iterator DelaunayMesher::VEdgeIter","comments":"","declarations":[],"spell":"131:36-131:45|2|2|2","extent":"131:3-131:45|2|2|0","alias_of":4,"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["131:36-131:45|2|2|4"]},{"id":9,"usr":1565035072933362430,"detailed_name":"DelaunayMesher::VEdgeCIter","short_name_offset":16,"short_name_size":10,"kind":252,"hover":"typedef VoronoiEdgeMap::const_iterator DelaunayMesher::VEdgeCIter","comments":"","declarations":[],"spell":"132:42-132:52|2|2|2","extent":"132:3-132:52|2|2|0","alias_of":4,"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["132:42-132:52|2|2|4"]},{"id":10,"usr":6851051065504227708,"detailed_name":"DelaunayMesher::label_t","short_name_offset":16,"short_name_size":7,"kind":252,"hover":"typedef vegaunsignedlong DelaunayMesher::label_t","comments":"Delaunay Balls are used for representing Delaunay","declarations":[],"spell":"144:28-144:35|2|2|2","extent":"144:3-144:35|2|2|0","alias_of":4,"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[11,11,43],"uses":["144:28-144:35|2|2|4","212:5-212:12|-1|1|4","216:75-216:82|-1|1|4","386:3-386:10|-1|1|4"]},{"id":11,"usr":7646533963568914189,"detailed_name":"DelaunayMesher::DelaunayBall","short_name_offset":16,"short_name_size":12,"kind":23,"hover":"","comments":"There're two kinds of Delaunay Balls: regular and infinite\nRegular ball (constructor input parameter v0 >= 0) is built by four vertices and represent a tetrahedron.\nInfinite ball (constructor input parameter v0 < 0) is a ball with infinite radius representing the half space separated by a border face of the Delaunay\nthe other three vtx indices of one infinite ball give the border face triangle on the convex hull, their orientation points inside the convex hull\nInfinite ball's center is at infinity, on a line perpendicular to the border face and intersecting the face at its circumcenter\nIn short, regular ball represents the space inside one tetrahedron, infinite ball represents the empty space outside one border face on the convex hull","declarations":["145:10-145:22|2|2|1","216:5-216:17|-1|1|4"],"spell":"173:10-173:22|2|2|2","extent":"173:3-250:4|2|2|0","bases":[],"derived":[],"types":[],"funcs":[24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42],"vars":[16,17,15,11],"instances":[9,10,15,15,25],"uses":["148:28-148:40|-1|1|4","148:61-148:73|-1|1|4","197:12-197:24|-1|1|4","210:5-210:17|-1|1|4","216:5-216:17|11|2|4","239:5-239:17|-1|1|4","241:43-241:55|-1|1|4","248:64-248:76|-1|1|4","259:19-259:31|-1|1|4","261:19-261:31|-1|1|4","279:36-279:48|-1|1|4","279:58-279:70|-1|1|4","279:108-279:120|-1|1|4","288:57-288:69|-1|1|4","288:72-288:84|-1|1|4","292:3-292:15|-1|1|4","308:19-308:31|-1|1|4","320:43-320:55|-1|1|4","321:52-321:64|-1|1|4","324:3-324:15|-1|1|4","326:3-326:15|-1|1|4"]},{"id":12,"usr":16098549398403481262,"detailed_name":"DelaunayMesher::DelaunayBallCompare","short_name_offset":16,"short_name_size":19,"kind":23,"hover":"","comments":"","declarations":[],"spell":"146:10-146:29|2|2|2","extent":"146:3-149:4|2|2|0","bases":[],"derived":[],"types":[],"funcs":[17],"vars":[],"instances":[],"uses":[]},{"id":13,"usr":7951989855615605213,"detailed_name":"DelaunayMesher::BallSet","short_name_offset":16,"short_name_size":7,"kind":252,"hover":"typedef std::set<DelaunayBall *, DelaunayBallCompare> DelaunayMesher::BallSet","comments":"","declarations":[],"spell":"151:57-151:64|2|2|2","extent":"151:3-151:64|2|2|0","alias_of":4,"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[34,35,36],"uses":["151:57-151:64|2|2|4","316:39-316:46|-1|1|4","347:3-347:10|-1|1|4","348:3-348:10|-1|1|4","349:3-349:10|-1|1|4"]},{"id":14,"usr":4395011572827622968,"detailed_name":"DelaunayMesher::BallIter","short_name_offset":16,"short_name_size":8,"kind":252,"hover":"typedef BallSet::iterator DelaunayMesher::BallIter","comments":"","declarations":[],"spell":"152:29-152:37|2|2|2","extent":"152:3-152:37|2|2|0","alias_of":4,"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["152:29-152:37|2|2|4"]},{"id":15,"usr":13972399030439089355,"detailed_name":"DelaunayMesher::BallCIter","short_name_offset":16,"short_name_size":9,"kind":252,"hover":"typedef BallSet::const_iterator DelaunayMesher::BallCIter","comments":"","declarations":[],"spell":"153:35-153:44|2|2|2","extent":"153:3-153:44|2|2|0","alias_of":4,"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["153:35-153:44|2|2|4","156:10-156:19|-1|1|4","157:10-157:19|-1|1|4","160:10-160:19|-1|1|4","161:10-161:19|-1|1|4","164:10-164:19|-1|1|4","165:10-165:19|-1|1|4"]},{"id":16,"usr":15342995699754134592,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["248:17-248:24|-1|1|4","248:45-248:52|-1|1|4"]},{"id":17,"usr":5401847601697785946,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["248:12-248:15|11|2|4","248:40-248:43|11|2|4","288:47-288:50|2|2|4"]},{"id":18,"usr":15577868304815570323,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["288:52-288:56|-1|1|4"]},{"id":19,"usr":22,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[30],"uses":[]}],"funcs":[{"id":0,"usr":16320525667200436579,"detailed_name":"DelaunayMesher::DelaunayMesher()","short_name_offset":0,"short_name_size":14,"kind":9,"storage":1,"hover":"","comments":"","declarations":[{"spell":"56:3-56:17|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":1,"usr":14771246590483372560,"detailed_name":"virtual DelaunayMesher::~DelaunayMesher() noexcept","short_name_offset":24,"short_name_size":15,"kind":6,"storage":1,"hover":"","comments":"","declarations":[{"spell":"57:11-57:26|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":2,"usr":553785030700309218,"detailed_name":"bool DelaunayMesher::computeDelaunayTetrahedralization(const int &points, double epsilon = 1.0000000000000001E-9, int queryType = <null expr>)","short_name_offset":21,"short_name_size":33,"kind":6,"storage":1,"hover":"","comments":"\nBasic Functions for Delaunay Tetrahedralization            *\n/\ncompute Delaunay tetrahedralization of a set of input points\nmust have points.size() >= 4\nQuery::Type: choice of precision used in the Delaunay mesher\nDOUBLE: double precision  \nRATIONAL: high-precision arithmetics  \nFILTERED: trade-off between DOUBLE and RATIONAL\nepsilon: internal accuracy parameter for queryType=FILTERED, on [0,1]\nthe larger the value, the more computation will be done in high-precision arithmetics\nepsilon == 0: all computation in double precision\nepsilon == 1: all computation in high-precision\nreturns true upon success, and false upon failure (degeneracy)\nuse getMesh() to get the result","declarations":[{"spell":"74:8-74:41|2|2|1","param_spellings":["74:69-74:75","75:12-75:19","75:40-75:49"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":3,"usr":12073551411495789787,"detailed_name":"TetMesh *DelaunayMesher::getMesh() const","short_name_offset":25,"short_name_size":7,"kind":6,"storage":1,"hover":"","comments":"return the current Delaunay mesh","declarations":[{"spell":"78:13-78:20|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":4,"usr":14818562107536198732,"detailed_name":"bool DelaunayMesher::addOnePoint(const int &p)","short_name_offset":21,"short_name_size":11,"kind":6,"storage":1,"hover":"","comments":"after computeDelaunayTetrahedralization, insert one additional point into the tetrahedralization","declarations":[{"spell":"81:8-81:19|2|2|1","param_spellings":["81:34-81:35"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":5,"usr":220420523180139101,"detailed_name":"size_t DelaunayMesher::getNumVertices() const","short_name_offset":23,"short_name_size":14,"kind":6,"storage":1,"hover":"","comments":"","declarations":[],"spell":"82:10-82:24|2|2|2","extent":"82:3-82:65|2|2|0","declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":6,"usr":4274986679775642723,"detailed_name":"const int &DelaunayMesher::getVertex(int index) const","short_name_offset":27,"short_name_size":9,"kind":6,"storage":1,"hover":"","comments":"","declarations":[],"spell":"83:17-83:26|2|2|2","extent":"83:3-83:76|2|2|0","declaring_type":2,"bases":[],"derived":[],"vars":[0],"uses":[],"callees":[]},{"id":7,"usr":18014595756672718020,"detailed_name":"void DelaunayMesher::clear()","short_name_offset":21,"short_name_size":5,"kind":6,"storage":1,"hover":"","comments":"clear the mesh to empty (one can then call computeDelaunayTetrahedralization on a new input)","declarations":[{"spell":"86:8-86:13|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":8,"usr":1201221845055481207,"detailed_name":"bool DelaunayMesher::initializeCDT(TetMesh *mesh, double epsilon = 9.9999999999999995E-7, int queryType = <null expr>)","short_name_offset":21,"short_name_size":13,"kind":6,"storage":1,"hover":"","comments":"initialize the Constrained Delaunay Tetrahedralization algorithm; to conform to the surface faces of \"mesh\"\nthe tet mesh \"mesh\" must be manifold and free of self-intersections\nfurther calls to this->addOnePoint() will incrementally rebuild the tetrahedralization while preserving the constrained Delaunay property","declarations":[{"spell":"101:8-101:21|2|2|1","param_spellings":["101:32-101:36","101:45-101:52","101:73-101:82"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":9,"usr":18133277560275326950,"detailed_name":"int DelaunayMesher::buildCDT()","short_name_offset":20,"short_name_size":8,"kind":6,"storage":1,"hover":"","comments":"Must do remove outside and all infite balls first","declarations":[{"spell":"104:7-104:15|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":10,"usr":1454567431891900479,"detailed_name":"inline const int *DelaunayMesher::getCDTBoundaryMesh() const","short_name_offset":34,"short_name_size":18,"kind":6,"storage":1,"hover":"","comments":"get the surface mesh of the tet mesh \"mesh\" passed to initializeCDT (used in the Constrained Delaunay Tetrahedralization)","declarations":[],"spell":"106:26-106:44|2|2|2","extent":"106:3-106:77|2|2|0","declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":11,"usr":5516799800944132086,"detailed_name":"void DelaunayMesher::computeVoronoiEdgeModification(bool compute = true)","short_name_offset":21,"short_name_size":30,"kind":6,"storage":1,"hover":"","comments":"if input is true, DelaunayMesher will record Voronoi Edge update information for each subsequent operation (computeDelaunayTetrahedralization or addOnePoint)\nget last Voronoi Edge update by calling getDeletedVoronoiEdges() and getAddedVoronoiEdges","declarations":[],"spell":"114:8-114:38|2|2|2","extent":"114:3-114:99|2|2|0","declaring_type":2,"bases":[],"derived":[],"vars":[1],"uses":[],"callees":[]},{"id":12,"usr":12548423411144469907,"detailed_name":"DelaunayMesher::VoronoiEdge::VoronoiEdge()","short_name_offset":16,"short_name_size":11,"kind":9,"storage":1,"hover":"","comments":"","declarations":[],"spell":"125:5-125:16|6|2|2","extent":"125:5-125:74|6|2|0","declaring_type":6,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":13,"usr":5770957039704768862,"detailed_name":"DelaunayMesher::VoronoiEdge::VoronoiEdge(bool isFinite, const int &start, const int &other)","short_name_offset":16,"short_name_size":11,"kind":9,"storage":1,"hover":"","comments":"","declarations":[{"spell":"126:5-126:16|6|2|1","param_spellings":["126:22-126:30","126:46-126:51","126:67-126:72"]}],"declaring_type":6,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":14,"usr":18172817738905864337,"detailed_name":"bool DelaunayMesher::VoronoiEdge::isFinite() const","short_name_offset":34,"short_name_size":8,"kind":6,"storage":1,"hover":"","comments":"","declarations":[],"spell":"127:10-127:18|6|2|2","extent":"127:5-127:45|6|2|0","declaring_type":6,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":15,"usr":13394786605178304981,"detailed_name":"const DelaunayMesher::VoronoiEdgeMap &DelaunayMesher::getDeletedVoronoiEdges() const","short_name_offset":54,"short_name_size":22,"kind":6,"storage":1,"hover":"","comments":"vEdgeDeleted and vEdgeAdded will hold Voronoi edges only for last operation on Delaunay\ne.g. when addOnePoint() is called, vEdgeDeleted is reset and only stores the edges deleted by the last addOnePoint() call","declarations":[],"spell":"136:26-136:48|2|2|2","extent":"136:3-136:81|2|2|0","declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":16,"usr":390668269207299859,"detailed_name":"const DelaunayMesher::VoronoiEdgeMap &DelaunayMesher::getAddedVoronoiEdges() const","short_name_offset":54,"short_name_size":20,"kind":6,"storage":1,"hover":"","comments":"","declarations":[],"spell":"137:26-137:46|2|2|2","extent":"137:3-137:77|2|2|0","declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":17,"usr":7407340351894657272,"detailed_name":"bool DelaunayMesher::DelaunayBallCompare::operator()(const DelaunayMesher::DelaunayBall *const &p1, const DelaunayMesher::DelaunayBall *const &p2) const","short_name_offset":42,"short_name_size":10,"kind":6,"storage":1,"hover":"","comments":"","declarations":[],"spell":"148:10-148:20|12|2|2","extent":"148:5-148:127|12|2|0","declaring_type":12,"bases":[],"derived":[],"vars":[9,10],"uses":[],"callees":[]},{"id":18,"usr":18347101923039620377,"detailed_name":"inline DelaunayMesher::BallCIter DelaunayMesher::getBallSetBegin() const","short_name_offset":49,"short_name_size":15,"kind":6,"storage":1,"hover":"","comments":"used to traverse all the balls","declarations":[],"spell":"156:20-156:35|2|2|2","extent":"156:3-156:69|2|2|0","declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":19,"usr":2247271894091171801,"detailed_name":"inline DelaunayMesher::BallCIter DelaunayMesher::getBallSetEnd() const","short_name_offset":49,"short_name_size":13,"kind":6,"storage":1,"hover":"","comments":"","declarations":[],"spell":"157:20-157:33|2|2|2","extent":"157:3-157:65|2|2|0","declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":20,"usr":9201905189914170205,"detailed_name":"inline DelaunayMesher::BallCIter DelaunayMesher::getBallToDeleteSetBegin() const","short_name_offset":49,"short_name_size":23,"kind":6,"storage":1,"hover":"","comments":"used to traverse all the ballsToDelete","declarations":[],"spell":"160:20-160:43|2|2|2","extent":"160:3-160:85|2|2|0","declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":21,"usr":14887811230819224616,"detailed_name":"inline DelaunayMesher::BallCIter DelaunayMesher::getBallToDeletelSetEnd() const","short_name_offset":49,"short_name_size":22,"kind":6,"storage":1,"hover":"","comments":"","declarations":[],"spell":"161:20-161:42|2|2|2","extent":"161:3-161:82|2|2|0","declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":22,"usr":13080359836892674078,"detailed_name":"inline DelaunayMesher::BallCIter DelaunayMesher::getBallAddedSetBegin() const","short_name_offset":49,"short_name_size":20,"kind":6,"storage":1,"hover":"","comments":"used to traverse all the ballsAdded","declarations":[],"spell":"164:20-164:40|2|2|2","extent":"164:3-164:79|2|2|0","declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":23,"usr":17302696352544874494,"detailed_name":"inline DelaunayMesher::BallCIter DelaunayMesher::getBallAddedSetEnd() const","short_name_offset":49,"short_name_size":18,"kind":6,"storage":1,"hover":"","comments":"","declarations":[],"spell":"165:20-165:38|2|2|2","extent":"165:3-165:75|2|2|0","declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":24,"usr":11565154636755646388,"detailed_name":"inline int DelaunayMesher::DelaunayBall::getVtx(int ind) const","short_name_offset":41,"short_name_size":6,"kind":6,"storage":1,"hover":"","comments":"get vertex of this ball\nif it's infinite ball, getVtx(0) returns -1","declarations":[],"spell":"177:16-177:22|11|2|2","extent":"177:5-177:56|11|2|0","declaring_type":11,"bases":[],"derived":[],"vars":[12],"uses":[],"callees":[]},{"id":25,"usr":414297412745584676,"detailed_name":"inline const int *DelaunayMesher::DelaunayBall::getVertices() const","short_name_offset":48,"short_name_size":11,"kind":6,"storage":1,"hover":"","comments":"get the array stores the 4 vtx indices","declarations":[],"spell":"179:24-179:35|11|2|2","extent":"179:5-179:55|11|2|0","declaring_type":11,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":26,"usr":8621075222545693245,"detailed_name":"inline int DelaunayMesher::DelaunayBall::getPosition(int ind) const","short_name_offset":41,"short_name_size":11,"kind":6,"storage":1,"hover":"","comments":"get the position of vertices","declarations":[],"spell":"181:18-181:29|11|2|2","extent":"181:5-181:81|11|2|0","declaring_type":11,"bases":[],"derived":[],"vars":[13],"uses":[],"callees":[]},{"id":27,"usr":18018114238078566621,"detailed_name":"inline bool DelaunayMesher::DelaunayBall::isRegular() const","short_name_offset":42,"short_name_size":9,"kind":6,"storage":1,"hover":"","comments":"","declarations":[],"spell":"183:17-183:26|11|2|2","extent":"183:5-183:56|11|2|0","declaring_type":11,"bases":[],"derived":[],"vars":[],"uses":["231:59-231:68|36|3|36"],"callees":[]},{"id":28,"usr":10643877845840391043,"detailed_name":"inline bool DelaunayMesher::DelaunayBall::isInfinite() const","short_name_offset":42,"short_name_size":10,"kind":6,"storage":1,"hover":"","comments":"","declarations":[],"spell":"184:17-184:27|11|2|2","extent":"184:5-184:56|11|2|0","declaring_type":11,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":29,"usr":5006246937487562453,"detailed_name":"inline const int &DelaunayMesher::DelaunayBall::getCenter() const","short_name_offset":48,"short_name_size":9,"kind":6,"storage":1,"hover":"","comments":"get ball center if it's regular ball","declarations":[],"spell":"187:26-187:35|11|2|2","extent":"187:5-187:62|11|2|0","declaring_type":11,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":30,"usr":16452742582833140873,"detailed_name":"int DelaunayMesher::DelaunayBall::contain(const int &p) const","short_name_offset":34,"short_name_size":7,"kind":6,"storage":1,"hover":"","comments":"for regular ball, return >0 for outside, ==0 for on the ball, <0 for inside\nfor infinite ball, return >0 for on the inner side of the border face (or the plane the face lies on), ==0 for on the plane, <0 for on the outside of the border face","declarations":[{"spell":"191:9-191:16|11|2|1","param_spellings":["191:31-191:32"]}],"declaring_type":11,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":31,"usr":13917503094808244699,"detailed_name":"bool DelaunayMesher::DelaunayBall::visibleTo(const int &p) const","short_name_offset":35,"short_name_size":9,"kind":6,"storage":1,"hover":"","comments":"Used only in CDT. Always return false for infinite ball\nFor regular ball, if atleast one of the four ball vtx cannot be seen from p because the CDT boundary mesh obscures the sight, return false. Otherwise return true\nThis can be tested by creating a line segment from p to one ball vtx and test intersection of this line segment with boundary mesh\nNotice that if the ball vtx is a mesh vtx of the boundary mesh, this does not counted as one valid intersection in this case","declarations":[{"spell":"196:10-196:19|11|2|1","param_spellings":["196:34-196:35"]}],"declaring_type":11,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":32,"usr":1393893805746017463,"detailed_name":"inline DelaunayMesher::DelaunayBall *DelaunayMesher::DelaunayBall::getNeighbor(const int ind) const","short_name_offset":67,"short_name_size":11,"kind":6,"storage":1,"hover":"","comments":"","declarations":[],"spell":"197:27-197:38|11|2|2","extent":"197:5-197:80|11|2|0","declaring_type":11,"bases":[],"derived":[],"vars":[14],"uses":[],"callees":[]},{"id":33,"usr":10281383222288705881,"detailed_name":"DelaunayMesher::DelaunayBall::DelaunayBall(int v0, int v1, int v2, int v3, DelaunayMesher *parent, DelaunayMesher::label_t label)","short_name_offset":16,"short_name_size":12,"kind":9,"storage":1,"hover":"","comments":"==================== End Member Vars =============================","declarations":[{"spell":"216:5-216:17|11|2|1","param_spellings":["216:22-216:24","216:30-216:32","216:38-216:40","216:46-216:48","216:67-216:73","216:83-216:88"]}],"declaring_type":11,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":34,"usr":2816570730005657553,"detailed_name":"int DelaunayMesher::DelaunayBall::contains(int vtx) const","short_name_offset":34,"short_name_size":8,"kind":6,"storage":1,"hover":"","comments":"return value:\n1 means point is outside the ball\n0 means point is on the ball\n-1 means point is inside the ball","declarations":[{"spell":"222:9-222:17|11|2|1","param_spellings":["222:22-222:25"]}],"declaring_type":11,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":35,"usr":14031396827643997982,"detailed_name":"static inline bool DelaunayMesher::DelaunayBall::isFaceRegular(const int &f)","short_name_offset":49,"short_name_size":13,"kind":254,"storage":3,"hover":"","comments":"","declarations":[],"spell":"228:24-228:37|11|2|2","extent":"228:5-228:78|11|2|0","declaring_type":11,"bases":[],"derived":[],"vars":[18,19],"uses":[],"callees":[]},{"id":36,"usr":3925488962186138613,"detailed_name":"const int *DelaunayMesher::DelaunayBall::getInfiniteBallTriangle() const","short_name_offset":41,"short_name_size":23,"kind":6,"storage":1,"hover":"","comments":"get the indices forming the infinite ball border face triangle","declarations":[],"spell":"231:17-231:40|11|2|2","extent":"231:5-231:86|11|2|0","declaring_type":11,"bases":[],"derived":[],"vars":[],"uses":[],"callees":["231:59-231:68|27|3|36","231:51-231:71|37|3|36"]},{"id":37,"usr":1643238109005291352,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["231:51-231:71|36|3|36"],"callees":[]},{"id":38,"usr":13689468102862673764,"detailed_name":"int DelaunayMesher::DelaunayBall::getNeighborIndex(const int &key) const","short_name_offset":34,"short_name_size":16,"kind":6,"storage":1,"hover":"","comments":"if oface[i] == key, return i, otherwise return -1","declarations":[{"spell":"234:9-234:25|11|2|1","param_spellings":["234:42-234:45"]},{"spell":"236:9-236:25|11|2|1","param_spellings":["236:42-236:45"]}],"declaring_type":11,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":39,"usr":17059033226289222084,"detailed_name":"inline int DelaunayMesher::DelaunayBall::getVtxOpposeFace(const int &key) const","short_name_offset":41,"short_name_size":16,"kind":6,"storage":1,"hover":"","comments":"","declarations":[],"spell":"238:16-238:32|11|2|2","extent":"238:5-238:96|11|2|0","declaring_type":11,"bases":[],"derived":[],"vars":[20],"uses":[],"callees":[]},{"id":40,"usr":9532305990651311923,"detailed_name":"DelaunayMesher::DelaunayBall *DelaunayMesher::DelaunayBall::getNeighborByFace(const int &key) const","short_name_offset":60,"short_name_size":17,"kind":6,"storage":1,"hover":"","comments":"","declarations":[],"spell":"239:20-239:37|11|2|2","extent":"239:5-239:103|11|2|0","declaring_type":11,"bases":[],"derived":[],"vars":[21],"uses":[],"callees":[]},{"id":41,"usr":1267734443704346260,"detailed_name":"void DelaunayMesher::DelaunayBall::setNeighbor(const int &key, DelaunayMesher::DelaunayBall *nbr)","short_name_offset":35,"short_name_size":11,"kind":6,"storage":1,"hover":"","comments":"if uface[i] == key, set DelaunayBall::nbr[i] to be nbr","declarations":[{"spell":"241:10-241:21|11|2|1","param_spellings":["241:38-241:41","241:58-241:61"]}],"declaring_type":11,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":42,"usr":4137799581369457138,"detailed_name":"DelaunayMesher::VoronoiEdge DelaunayMesher::DelaunayBall::getVoronoiEdge(int nbrIndex) const","short_name_offset":58,"short_name_size":14,"kind":6,"storage":1,"hover":"","comments":"get the Voronoi Edge connecting this Delaunay ball and one neighbor ball at nbr[nbrIndex]","declarations":[{"spell":"244:17-244:31|11|2|1","param_spellings":["244:36-244:44"]}],"declaring_type":11,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":43,"usr":5237036635515358349,"detailed_name":"std::ostream &operator<<(std::ostream &o, const DelaunayMesher::DelaunayBall &ball)","short_name_offset":14,"short_name_size":10,"kind":12,"storage":1,"hover":"","comments":"","declarations":[{"spell":"248:27-248:38|11|2|1","param_spellings":["248:55-248:56","248:79-248:83"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":44,"usr":7678253069703693485,"detailed_name":"int DelaunayMesher::segmentRecoveryUsingFlip(const int &edge, int level)","short_name_offset":20,"short_name_size":24,"kind":6,"storage":1,"hover":"","comments":"recover an edge by flipping, level means the maximal levels of recursion the recover process can have","declarations":[{"spell":"253:7-253:31|2|2|1","param_spellings":["253:49-253:53","253:59-253:64"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":45,"usr":14914195251303043559,"detailed_name":"int DelaunayMesher::segmentRecoveryUsingSteinerPoint(const int &edge)","short_name_offset":20,"short_name_size":32,"kind":6,"storage":1,"hover":"","comments":"recover an edge by adding steiner points","declarations":[{"spell":"255:7-255:39|2|2|1","param_spellings":["255:57-255:61"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":46,"usr":5799922779945366258,"detailed_name":"DelaunayMesher::DelaunayBall *DelaunayMesher::addBall(const int *v)","short_name_offset":46,"short_name_size":7,"kind":6,"storage":1,"hover":"","comments":"simply add a ball for the delaunayMesher, we won't check whether it is still a delaunay mesh\nv is an array of the four indices of the vertices in the delaunay mesh","declarations":[{"spell":"259:34-259:41|2|2|1","param_spellings":["259:54-259:55"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":47,"usr":2755609827718108545,"detailed_name":"void DelaunayMesher::removeBall(DelaunayMesher::DelaunayBall *ball)","short_name_offset":21,"short_name_size":10,"kind":6,"storage":1,"hover":"","comments":"simply remove a ball for the delaunayMesher, a hole may exist","declarations":[{"spell":"261:8-261:18|2|2|1","param_spellings":["261:34-261:38"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":48,"usr":7865690262210030069,"detailed_name":"bool DelaunayMesher::checkDelaunay() const","short_name_offset":21,"short_name_size":13,"kind":6,"storage":1,"hover":"","comments":"check whether each tet satisfyies the Delaunay criterion by looping over every tet-vtx pair\nIt's slow. For debugging purpose.","declarations":[{"spell":"269:8-269:21|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":49,"usr":8671004508806439447,"detailed_name":"int DelaunayMesher::flip23(const int &face, DelaunayMesher::DelaunayBall *ball0, DelaunayMesher::DelaunayBall *ball1, int requestNewBallIdx = -1, DelaunayMesher::DelaunayBall **newBallAroundEdge = __null, int allowFlat = -1)","short_name_offset":20,"short_name_size":6,"kind":6,"storage":1,"hover":"","comments":"Fliping a face, the face is shared by ball0 and ball1\nball0 and ball1 will be removed and three new balls will be added to the delaunay mesh\nIt can return one of the three added balls by setting requestNewBallIdx and newBallAroundEdge\nBy setting allowFlat, sometimes the three added balls may be flat and then removed by the next flip32.","declarations":[{"spell":"279:7-279:13|2|2|1","param_spellings":["279:30-279:34","279:51-279:56","279:73-279:78","279:84-279:101","279:124-279:141","279:154-279:163"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":50,"usr":13684413927692028670,"detailed_name":"int DelaunayMesher::flip32(const int &edge, const int &tetsAroundEdge)","short_name_offset":20,"short_name_size":6,"kind":6,"storage":1,"hover":"","comments":"Fliping a edge, there must be 3 tets around the edge","declarations":[{"spell":"281:7-281:13|2|2|1","param_spellings":["281:31-281:35","281:59-281:73"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":51,"usr":474266412865346589,"detailed_name":"int DelaunayMesher::segmentRemovalUsingFlip(const int &edge, int level = 1)","short_name_offset":20,"short_name_size":23,"kind":6,"storage":1,"hover":"","comments":"remove an edge by flipping, level means the maximal levels of recursion","declarations":[{"spell":"284:7-284:30|2|2|1","param_spellings":["284:48-284:52","284:58-284:63"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":52,"usr":4923199358223561927,"detailed_name":"int DelaunayMesher::getTwoBallsByFace(const int &face, std::pair<DelaunayBall *, DelaunayBall *> &twoBalls)","short_name_offset":20,"short_name_size":17,"kind":6,"storage":1,"hover":"","comments":"Find two delaunay balls that have the face","declarations":[{"spell":"288:7-288:24|2|2|1","param_spellings":["288:41-288:45","288:90-288:98"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":53,"usr":13183895310899983543,"detailed_name":"DelaunayMesher::DelaunayBall *DelaunayMesher::getOneBallByFace(const int &face)","short_name_offset":46,"short_name_size":16,"kind":6,"storage":1,"hover":"","comments":"Find one delaunay ball that has the face","declarations":[{"spell":"292:18-292:34|2|2|1","param_spellings":["292:51-292:55"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":54,"usr":16539525407070182495,"detailed_name":"int DelaunayMesher::getTetsAroundEdge(const int &edge, int &tetsAroundEdge)","short_name_offset":20,"short_name_size":17,"kind":6,"storage":1,"hover":"","comments":"Find tets that have the edge","declarations":[{"spell":"295:7-295:24|2|2|1","param_spellings":["295:42-295:46","295:64-295:78"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":55,"usr":3162351846544204425,"detailed_name":"int DelaunayMesher::clearCounter(const int &tetsAroundEdge)","short_name_offset":20,"short_name_size":12,"kind":6,"storage":1,"hover":"","comments":"Clear the counter of some tets","declarations":[{"spell":"298:7-298:19|2|2|1","param_spellings":["298:58-298:72"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":56,"usr":16162307971929355261,"detailed_name":"int DelaunayMesher::getOneBallBySegment(const int start, const int end)","short_name_offset":20,"short_name_size":19,"kind":6,"storage":1,"hover":"","comments":"The origin of the return ball should be start","declarations":[{"spell":"301:7-301:26|2|2|1","param_spellings":["301:37-301:42","301:54-301:57"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":57,"usr":7184417180978165997,"detailed_name":"DelaunayMesher::DelaunayBall *DelaunayMesher::addBall(const int v0, const int v1, const int v2, const int v3)","short_name_offset":46,"short_name_size":7,"kind":6,"storage":1,"hover":"","comments":" double getCheckContainingTime() const { return checkContainingWatch.getElapsedTime(); }\n double getUpdateTime() const { return updateWatch.getElapsedTime(); }","declarations":[{"spell":"308:34-308:41|2|2|1","param_spellings":["308:52-308:54","308:66-308:68","308:80-308:82","308:94-308:96"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":58,"usr":3725665085040256576,"detailed_name":"void DelaunayMesher::buildQuery()","short_name_offset":21,"short_name_size":10,"kind":6,"storage":1,"hover":"","comments":"build geometry query object","declarations":[{"spell":"310:8-310:18|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":59,"usr":1366438359617051500,"detailed_name":"static int DelaunayMesher::circumcenter(const int &a, const int &b, const int &c, const int &d)","short_name_offset":27,"short_name_size":12,"kind":254,"storage":3,"hover":"","comments":"compute circumcenter of a tet","declarations":[{"spell":"313:16-313:28|2|2|1","param_spellings":["313:43-313:44","313:60-313:61","313:77-313:78","313:94-313:95"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":60,"usr":8408555570623671909,"detailed_name":"void DelaunayMesher::getBallsContainingPoint(int i, DelaunayMesher::BallSet &balls)","short_name_offset":21,"short_name_size":23,"kind":6,"storage":1,"hover":"","comments":"get all the Delaunay balls containing the point getDelaunayVtx(i)","declarations":[{"spell":"316:8-316:31|2|2|1","param_spellings":["316:36-316:37","316:49-316:54"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":61,"usr":12936770488672361166,"detailed_name":"int DelaunayMesher::buildNeighbor(const int &face, DelaunayMesher::DelaunayBall *ball, int &neighboringStructure)","short_name_offset":20,"short_name_size":13,"kind":6,"storage":1,"hover":"","comments":"used to construct neighboring information for new Delaunay balls\nsearch face in neighboringStructure. If face is found, ball is neighbor to neighboringStructure[face], build related neighboring data","declarations":[{"spell":"320:7-320:20|2|2|1","param_spellings":["320:37-320:41","320:58-320:62","320:100-320:120"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":62,"usr":11554012925374161918,"detailed_name":"inline int DelaunayMesher::buildNeighbor(int v0, int v1, int v2, DelaunayMesher::DelaunayBall *ball, int &neighboringStructure)","short_name_offset":27,"short_name_size":13,"kind":6,"storage":1,"hover":"","comments":"","declarations":[],"spell":"321:14-321:27|2|2|2","extent":"321:3-321:204|2|2|0","declaring_type":2,"bases":[],"derived":[],"vars":[22,23,24,25,26],"uses":[],"callees":[]},{"id":63,"usr":16899911945109232418,"detailed_name":"DelaunayMesher::DelaunayBall *DelaunayMesher::getOneBallContainingPoint(int i)","short_name_offset":46,"short_name_size":25,"kind":6,"storage":1,"hover":"","comments":"get only one ball containing the point getDelaunayVtx(i)","declarations":[{"spell":"324:18-324:43|2|2|1","param_spellings":["324:48-324:49"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":64,"usr":8228011048210327842,"detailed_name":"DelaunayMesher::DelaunayBall *DelaunayMesher::createBall(int v0, int v1, int v2, int v3)","short_name_offset":46,"short_name_size":10,"kind":6,"storage":1,"hover":"","comments":"","declarations":[{"spell":"326:18-326:28|2|2|1","param_spellings":["326:33-326:35","326:41-326:43","326:49-326:51","326:57-326:59"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":65,"usr":11244159152429295005,"detailed_name":"bool DelaunayMesher::initialize(int a, int b, int c, int d)","short_name_offset":21,"short_name_size":10,"kind":6,"storage":1,"hover":"","comments":"initialize the first four vertices for Delaunay \nreturn false if failed","declarations":[{"spell":"332:8-332:18|2|2|1","param_spellings":["332:23-332:24","332:30-332:31","332:37-332:38","332:44-332:45"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":66,"usr":7596225224713551668,"detailed_name":"bool DelaunayMesher::update(int i)","short_name_offset":21,"short_name_size":6,"kind":6,"storage":1,"hover":"","comments":"","declarations":[{"spell":"334:8-334:14|2|2|1","param_spellings":["334:19-334:20"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":67,"usr":2615707744232541571,"detailed_name":"int DelaunayMesher::getFaceNormal(const int &face) const","short_name_offset":20,"short_name_size":13,"kind":6,"storage":1,"hover":"","comments":"","declarations":[{"spell":"336:9-336:22|2|2|1","param_spellings":["336:39-336:43"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":68,"usr":13604127508226980936,"detailed_name":"static inline double DelaunayMesher::det(const int &a, const int &b, const int &c)","short_name_offset":37,"short_name_size":3,"kind":254,"storage":3,"hover":"","comments":"","declarations":[],"spell":"338:24-338:27|2|2|2","extent":"338:3-338:110|2|2|0","declaring_type":2,"bases":[],"derived":[],"vars":[27,28,29],"uses":[],"callees":[]},{"id":69,"usr":1447612933701279747,"detailed_name":"static bool DelaunayMesher::isTetMeshFaceManifold(const TetMesh *tetMesh)","short_name_offset":28,"short_name_size":21,"kind":254,"storage":3,"hover":"","comments":"","declarations":[{"spell":"340:15-340:36|2|2|1","param_spellings":["340:53-340:60"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]}],"vars":[{"id":0,"usr":10391145542791528222,"detailed_name":"int index","short_name_offset":4,"short_name_size":5,"hover":"","comments":"","declarations":[],"spell":"83:31-83:36|6|3|2","extent":"83:27-83:36|6|3|0","type":4,"uses":[],"kind":253,"storage":1},{"id":1,"usr":15057404728645425272,"detailed_name":"bool compute","short_name_offset":5,"short_name_size":7,"hover":"bool compute = true","comments":"","declarations":[],"spell":"114:44-114:51|11|3|2","extent":"114:39-114:58|11|3|0","type":5,"uses":["114:89-114:96|11|3|12"],"kind":253,"storage":1},{"id":2,"usr":7548271660941330930,"detailed_name":"bool DelaunayMesher::computeVEdgeModification","short_name_offset":21,"short_name_size":24,"hover":"","comments":"============ DEBUG CODE ====================\n typedef std::map<label_t, DelaunayBall *> BallMap;\n typedef BallMap::iterator BallMapIter;\n typedef BallMap::const_iterator BallMapCIter;\n BallMap ballMap;\n/  std::map<label_t, label_t> ballConnections;\n\n struct Operation {\n   std::vector<label_t> deletedBalls;\n   std::vector<label_t> addedBalls;\n };\n\n std::vector<Operation> opStack;\n TetMeshManifold tetManifold;\n============ END DEBUG CODE ==================","declarations":[],"spell":"377:8-377:32|2|2|2","extent":"377:3-377:32|2|2|0","type":5,"uses":["114:62-114:86|11|3|20"],"kind":8,"storage":0},{"id":3,"usr":15164858133672451156,"detailed_name":"bool DelaunayMesher::VoronoiEdge::finite","short_name_offset":34,"short_name_size":6,"hover":"","comments":"whether this edge has finite length","declarations":[],"spell":"121:10-121:16|6|2|2","extent":"121:5-121:16|6|2|0","type":5,"uses":["125:21-125:27|12|3|20","127:36-127:42|14|3|12"],"kind":8,"storage":0},{"id":4,"usr":18163364375520046966,"detailed_name":"int DelaunayMesher::VoronoiEdge::start","short_name_offset":33,"short_name_size":5,"hover":"","comments":"start point of the edge","declarations":[],"spell":"122:11-122:16|6|2|2","extent":"122:5-122:16|6|2|0","type":4,"uses":[],"kind":8,"storage":0},{"id":5,"usr":6502863346747229434,"detailed_name":"int DelaunayMesher::VoronoiEdge::end","short_name_offset":33,"short_name_size":3,"hover":"","comments":"end point if it's not infinite, otherwise undefined","declarations":[],"spell":"123:11-123:14|6|2|2","extent":"123:5-123:14|6|2|0","type":4,"uses":[],"kind":8,"storage":0},{"id":6,"usr":16905269182206030153,"detailed_name":"int DelaunayMesher::VoronoiEdge::direction","short_name_offset":33,"short_name_size":9,"hover":"","comments":"direction of the edge if it's infinite, otherwise undefined","declarations":[],"spell":"124:11-124:20|6|2|2","extent":"124:5-124:20|6|2|0","type":4,"uses":[],"kind":8,"storage":0},{"id":7,"usr":6737588568276548537,"detailed_name":"DelaunayMesher::VoronoiEdgeMap DelaunayMesher::vEdgeDeleted","short_name_offset":47,"short_name_size":12,"hover":"","comments":"","declarations":[],"spell":"378:18-378:30|2|2|2","extent":"378:3-378:30|2|2|0","type":7,"uses":["136:66-136:78|15|3|4"],"kind":8,"storage":0},{"id":8,"usr":6115324524463708099,"detailed_name":"DelaunayMesher::VoronoiEdgeMap DelaunayMesher::vEdgeAdded","short_name_offset":47,"short_name_size":10,"hover":"","comments":"","declarations":[],"spell":"379:18-379:28|2|2|2","extent":"379:3-379:28|2|2|0","type":7,"uses":["137:64-137:74|16|3|4"],"kind":8,"storage":0},{"id":9,"usr":9584827278650674678,"detailed_name":"const DelaunayMesher::DelaunayBall *const &p1","short_name_offset":43,"short_name_size":2,"hover":"","comments":"","declarations":[],"spell":"148:51-148:53|17|3|2","extent":"148:22-148:53|17|3|0","type":11,"uses":["148:103-148:105|17|3|12"],"kind":253,"storage":1},{"id":10,"usr":908184934722705365,"detailed_name":"const DelaunayMesher::DelaunayBall *const &p2","short_name_offset":43,"short_name_size":2,"hover":"","comments":"","declarations":[],"spell":"148:84-148:86|17|3|2","extent":"148:55-148:86|17|3|0","type":11,"uses":["148:115-148:117|17|3|12"],"kind":253,"storage":1},{"id":11,"usr":4658798392361126539,"detailed_name":"DelaunayMesher::label_t DelaunayMesher::DelaunayBall::label","short_name_offset":54,"short_name_size":5,"hover":"","comments":"label unique to every Delaunay Ball","declarations":[],"spell":"212:13-212:18|11|2|2","extent":"212:5-212:18|11|2|0","type":10,"uses":["148:107-148:112|17|3|12","148:119-148:124|17|3|12"],"kind":8,"storage":0},{"id":12,"usr":2067125056789161281,"detailed_name":"int ind","short_name_offset":4,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"177:27-177:30|24|3|2","extent":"177:23-177:30|24|3|0","type":4,"uses":[],"kind":253,"storage":1},{"id":13,"usr":5260039378508651471,"detailed_name":"int ind","short_name_offset":4,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"181:34-181:37|26|3|2","extent":"181:30-181:37|26|3|0","type":4,"uses":[],"kind":253,"storage":1},{"id":14,"usr":16810127466530780531,"detailed_name":"const int ind","short_name_offset":10,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"197:49-197:52|32|3|2","extent":"197:39-197:52|32|3|0","type":4,"uses":["197:73-197:76|32|3|12"],"kind":253,"storage":1},{"id":15,"usr":2295303161356531020,"detailed_name":"DelaunayMesher::DelaunayBall *[4] DelaunayMesher::DelaunayBall::nbr","short_name_offset":64,"short_name_size":3,"hover":"","comments":"neighboring balls to this ball; there are always four neighbors\nregular ball: for every face of this tet, there is a neighboring tet across that face (may be an infinite ball)\ninfinite ball: the border face (triangle) has three neighbors, one for each face edge; neighbors of the ball are the regular ball across the triangle, and the three infintie balls corresponding to the convex hull neighboring triangles","declarations":[],"spell":"210:20-210:23|11|2|2","extent":"210:5-210:26|11|2|0","type":11,"uses":["197:69-197:72|32|3|4"],"kind":8,"storage":0},{"id":16,"usr":3710277363184798085,"detailed_name":"const DelaunayMesher &DelaunayMesher::DelaunayBall::parent","short_name_offset":52,"short_name_size":6,"hover":"","comments":"pointer to DelaunayMesher","declarations":[],"spell":"203:28-203:34|11|2|2","extent":"203:5-203:34|11|2|0","type":2,"uses":[],"kind":8,"storage":0},{"id":17,"usr":7797908244881308804,"detailed_name":"int DelaunayMesher::DelaunayBall::center","short_name_offset":34,"short_name_size":6,"hover":"","comments":"for regular ball, the center","declarations":[],"spell":"205:11-205:17|11|2|2","extent":"205:5-205:17|11|2|0","type":4,"uses":[],"kind":8,"storage":0},{"id":18,"usr":4603575540349095135,"detailed_name":"const int &f","short_name_offset":11,"short_name_size":1,"hover":"","comments":"","declarations":[],"spell":"227:54-227:55|35|3|2","extent":"227:38-227:55|35|3|0","type":4,"uses":[],"kind":253,"storage":1},{"id":19,"usr":18120730655613143049,"detailed_name":"const int &f","short_name_offset":11,"short_name_size":1,"hover":"","comments":"","declarations":[],"spell":"228:54-228:55|35|3|2","extent":"228:38-228:55|35|3|0","type":4,"uses":[],"kind":253,"storage":1},{"id":20,"usr":10598377669336812121,"detailed_name":"const int &key","short_name_offset":11,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"238:49-238:52|39|3|2","extent":"238:33-238:52|39|3|0","type":4,"uses":[],"kind":253,"storage":1},{"id":21,"usr":14346992244998878055,"detailed_name":"const int &key","short_name_offset":11,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"239:54-239:57|40|3|2","extent":"239:38-239:57|40|3|0","type":4,"uses":[],"kind":253,"storage":1},{"id":22,"usr":7833712869427759754,"detailed_name":"int v0","short_name_offset":4,"short_name_size":2,"hover":"","comments":"","declarations":[],"spell":"321:32-321:34|62|3|2","extent":"321:28-321:34|62|3|0","type":4,"uses":[],"kind":253,"storage":1},{"id":23,"usr":3375058889939538720,"detailed_name":"int v1","short_name_offset":4,"short_name_size":2,"hover":"","comments":"","declarations":[],"spell":"321:40-321:42|62|3|2","extent":"321:36-321:42|62|3|0","type":4,"uses":[],"kind":253,"storage":1},{"id":24,"usr":12933028339962536824,"detailed_name":"int v2","short_name_offset":4,"short_name_size":2,"hover":"","comments":"","declarations":[],"spell":"321:48-321:50|62|3|2","extent":"321:44-321:50|62|3|0","type":4,"uses":[],"kind":253,"storage":1},{"id":25,"usr":16145969047929914870,"detailed_name":"DelaunayMesher::DelaunayBall *ball","short_name_offset":30,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"321:67-321:71|62|3|2","extent":"321:52-321:71|62|3|0","type":11,"uses":[],"kind":253,"storage":1},{"id":26,"usr":11733425150928386191,"detailed_name":"int &neighboringStructure","short_name_offset":5,"short_name_size":20,"hover":"","comments":"","declarations":[],"spell":"321:109-321:129|62|3|2","extent":"321:73-321:129|62|3|0","type":4,"uses":[],"kind":253,"storage":1},{"id":27,"usr":6007173853211795699,"detailed_name":"const int &a","short_name_offset":11,"short_name_size":1,"hover":"","comments":"","declarations":[],"spell":"338:42-338:43|68|3|2","extent":"338:28-338:43|68|3|0","type":4,"uses":[],"kind":253,"storage":1},{"id":28,"usr":4583690212554532506,"detailed_name":"const int &b","short_name_offset":11,"short_name_size":1,"hover":"","comments":"","declarations":[],"spell":"338:59-338:60|68|3|2","extent":"338:45-338:60|68|3|0","type":4,"uses":[],"kind":253,"storage":1},{"id":29,"usr":5697783363479160738,"detailed_name":"const int &c","short_name_offset":11,"short_name_size":1,"hover":"","comments":"","declarations":[],"spell":"338:76-338:77|68|3|2","extent":"338:62-338:77|68|3|0","type":4,"uses":[],"kind":253,"storage":1},{"id":30,"usr":8317329943171735691,"detailed_name":"double DelaunayMesher::epsilon","short_name_offset":23,"short_name_size":7,"hover":"","comments":"","declarations":[],"spell":"342:10-342:17|2|2|2","extent":"342:3-342:17|2|2|0","type":19,"uses":[],"kind":8,"storage":0},{"id":31,"usr":7538467367461700953,"detailed_name":"int DelaunayMesher::queryType","short_name_offset":20,"short_name_size":9,"hover":"","comments":"","declarations":[],"spell":"343:15-343:24|2|2|2","extent":"343:3-343:24|2|2|0","type":4,"uses":[],"kind":8,"storage":0},{"id":32,"usr":1981739623560116059,"detailed_name":"int DelaunayMesher::inputVertices","short_name_offset":20,"short_name_size":13,"hover":"","comments":"","declarations":[],"spell":"344:22-344:35|2|2|2","extent":"344:22-344:35|2|2|0","type":4,"uses":[],"kind":8,"storage":0},{"id":33,"usr":15003243789516802753,"detailed_name":"int DelaunayMesher::verticesSet","short_name_offset":20,"short_name_size":11,"hover":"","comments":"","declarations":[],"spell":"345:19-345:30|2|2|2","extent":"345:19-345:30|2|2|0","type":4,"uses":[],"kind":8,"storage":0},{"id":34,"usr":3672386143031443419,"detailed_name":"DelaunayMesher::BallSet DelaunayMesher::balls","short_name_offset":40,"short_name_size":5,"hover":"","comments":"","declarations":[],"spell":"347:11-347:16|2|2|2","extent":"347:3-347:16|2|2|0","type":13,"uses":[],"kind":8,"storage":0},{"id":35,"usr":18424970365015576072,"detailed_name":"DelaunayMesher::BallSet DelaunayMesher::ballsToDelete","short_name_offset":40,"short_name_size":13,"hover":"","comments":"","declarations":[],"spell":"348:11-348:24|2|2|2","extent":"348:3-348:24|2|2|0","type":13,"uses":[],"kind":8,"storage":0},{"id":36,"usr":14614787090794163409,"detailed_name":"DelaunayMesher::BallSet DelaunayMesher::ballsAdded","short_name_offset":40,"short_name_size":10,"hover":"","comments":"","declarations":[],"spell":"349:11-349:21|2|2|2","extent":"349:3-349:21|2|2|0","type":13,"uses":[],"kind":8,"storage":0},{"id":37,"usr":2620301368349900986,"detailed_name":"VerticesQuery *DelaunayMesher::query","short_name_offset":31,"short_name_size":5,"hover":"","comments":"","declarations":[],"spell":"351:19-351:24|2|2|2","extent":"351:3-351:24|2|2|0","type":1,"uses":[],"kind":8,"storage":0},{"id":38,"usr":13712258707430523087,"detailed_name":"int DelaunayMesher::neighboringStructure","short_name_offset":20,"short_name_size":20,"hover":"","comments":"Used for modifying balls","declarations":[],"spell":"354:37-354:57|2|2|2","extent":"354:37-354:57|2|2|0","type":4,"uses":[],"kind":8,"storage":0},{"id":39,"usr":8765048994687754283,"detailed_name":"int DelaunayMesher::vertex2ball","short_name_offset":20,"short_name_size":11,"hover":"","comments":"Look up by the index of the vertex, only return one of the balls that contains the vertex","declarations":[],"spell":"357:31-357:42|2|2|2","extent":"357:3-357:42|2|2|0","type":4,"uses":[],"kind":8,"storage":0},{"id":40,"usr":7943823251651592183,"detailed_name":"int DelaunayMesher::recoveredEdge","short_name_offset":20,"short_name_size":13,"hover":"","comments":"","declarations":[],"spell":"359:23-359:36|2|2|2","extent":"359:23-359:36|2|2|0","type":4,"uses":[],"kind":8,"storage":0},{"id":41,"usr":1922354570708320861,"detailed_name":"int *DelaunayMesher::boundaryMesh","short_name_offset":21,"short_name_size":12,"hover":"","comments":"data for CDT","declarations":[],"spell":"382:13-382:25|2|2|2","extent":"382:3-382:25|2|2|0","type":4,"uses":[],"kind":8,"storage":0},{"id":42,"usr":2221365551094980086,"detailed_name":"int *DelaunayMesher::boundaryOctree","short_name_offset":21,"short_name_size":14,"hover":"","comments":"std::vector<UTriKey> boundaryTriangles;","declarations":[],"spell":"384:34-384:48|2|2|2","extent":"384:3-384:48|2|2|0","type":4,"uses":[],"kind":8,"storage":0},{"id":43,"usr":13578614975335342558,"detailed_name":"DelaunayMesher::label_t DelaunayMesher::nextBallLabel","short_name_offset":40,"short_name_size":13,"hover":"","comments":"","declarations":[],"spell":"386:11-386:24|2|2|2","extent":"386:3-386:24|2|2|0","type":10,"uses":[],"kind":8,"storage":0},{"id":44,"usr":15753566066187506721,"detailed_name":"_DELAUNAYMESHER_H_","short_name_offset":0,"short_name_size":18,"hover":"#define _DELAUNAYMESHER_H_","comments":"","declarations":[],"spell":"30:9-30:27|-1|1|2","extent":"30:9-30:27|-1|1|0","uses":[],"kind":255,"storage":0},{"id":45,"usr":16750262945382601971,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["231:51-231:57|-1|1|4"],"kind":0,"storage":0},{"id":46,"usr":291038054068649371,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["279:144-279:148|-1|1|4"],"kind":0,"storage":0}]}