15
{"last_modification_time":1548168587,"language":2,"import_file":"/home/dark/proj/faust/tools/physicalModeling/mesh2faust/vega/libraries/volumetricMesh/generateSurfaceMesh.cpp","args":["clang++","-working-directory=/home/dark/proj/faust/","/home/dark/proj/faust/tools/physicalModeling/mesh2faust/vega/libraries/volumetricMesh/generateSurfaceMesh.cpp","-resource-dir=/usr/lib/clang/7.0.1","-Wno-unknown-warning-option","-fparse-all-comments","-isystem/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/8.2.1/../../../../include/c++/8.2.1","-isystem/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/8.2.1/../../../../include/c++/8.2.1/x86_64-pc-linux-gnu","-isystem/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/8.2.1/../../../../include/c++/8.2.1/backward","-isystem/usr/local/include","-isystem/usr/lib/clang/7.0.1/include","-isystem/usr/include"],"includes":[{"line":38,"resolved_path":"/usr/include/c++/8.2.1/stdlib.h"},{"line":39,"resolved_path":"/usr/include/stdio.h"},{"line":40,"resolved_path":"/usr/include/c++/8.2.1/math.h"},{"line":41,"resolved_path":"/home/dark/proj/faust/tools/physicalModeling/mesh2faust/vega/libraries/volumetricMesh/volumetricMesh.h"}],"dependencies":["/home/dark/proj/faust/tools/physicalModeling/mesh2faust/vega/libraries/volumetricMesh/generateSurfaceMesh.cpp","/usr/lib/clang/7.0.1/include/float.h"],"skipped_by_preprocessor":[],"types":[{"id":0,"usr":6258791986765226249,"detailed_name":"GenerateSurfaceMesh","short_name_offset":0,"short_name_size":19,"kind":5,"hover":"","comments":"","declarations":[],"spell":"46:7-46:26|-1|1|2","extent":"46:1-55:2|-1|1|0","bases":[],"derived":[],"types":[],"funcs":[0,1],"vars":[],"instances":[],"uses":[]}],"funcs":[{"id":0,"usr":2911394807225235694,"detailed_name":"static int *GenerateSurfaceMesh::ComputeMesh(const int *volumetricMesh, bool triangulateOutputMesh = false)","short_name_offset":33,"short_name_size":11,"kind":254,"storage":3,"hover":"","comments":"The output surface mesh is usually a triangle mesh, but can also be a quad mesh for cubic meshes.\nThe last argument specifies whether output mesh should be quads or triangles (in the case of cubic volumetric meshes).\nAll vertices of the volumetric mesh are included in the output surface mesh, even if they don't touch any surface triangle (e.g., vertices in the interior of the volumetric mesh).","declarations":[{"spell":"52:20-52:31|0|2|1","param_spellings":["52:55-52:69","52:76-52:97"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":1,"usr":3726978550884803900,"detailed_name":"static int *GenerateSurfaceMesh::ComputeMesh(const int *volumetricMesh, const int *superMesh, bool triangulateOutputMesh = false)","short_name_offset":33,"short_name_size":11,"kind":254,"storage":3,"hover":"","comments":"","declarations":[{"spell":"54:20-54:31|0|2|1","param_spellings":["54:55-54:69","54:87-54:96","54:103-54:124"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]}],"vars":[{"id":0,"usr":9030330144109290909,"detailed_name":"_GENERATESURFACEMESH_H_","short_name_offset":0,"short_name_size":23,"hover":"#define _GENERATESURFACEMESH_H_","comments":"","declarations":[],"spell":"37:9-37:32|-1|1|2","extent":"37:9-37:32|-1|1|0","uses":[],"kind":255,"storage":0}]}