15
{"last_modification_time":1548168587,"language":2,"import_file":"/home/dark/proj/faust/tools/physicalModeling/mesh2faust/vega/libraries/volumetricMesh/tetMesh.cpp","args":["clang++","-working-directory=/home/dark/proj/faust/","/home/dark/proj/faust/tools/physicalModeling/mesh2faust/vega/libraries/volumetricMesh/tetMesh.cpp","-resource-dir=/usr/lib/clang/7.0.1","-Wno-unknown-warning-option","-fparse-all-comments","-isystem/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/8.2.1/../../../../include/c++/8.2.1","-isystem/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/8.2.1/../../../../include/c++/8.2.1/x86_64-pc-linux-gnu","-isystem/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/8.2.1/../../../../include/c++/8.2.1/backward","-isystem/usr/local/include","-isystem/usr/lib/clang/7.0.1/include","-isystem/usr/include"],"includes":[{"line":37,"resolved_path":"/home/dark/proj/faust/tools/physicalModeling/mesh2faust/vega/libraries/volumetricMesh/volumetricMesh.h"}],"dependencies":["/home/dark/proj/faust/tools/physicalModeling/mesh2faust/vega/libraries/volumetricMesh/tetMesh.cpp","/home/dark/proj/faust/tools/physicalModeling/mesh2faust/vega/libraries/volumetricMesh/volumetricMesh.h","/usr/include/stdio.h","/usr/include/bits/libc-header-start.h","/usr/include/features.h","/usr/include/sys/cdefs.h","/usr/include/gnu/stubs.h","/usr/include/bits/types.h","/usr/include/bits/types/__fpos_t.h","/usr/include/bits/types/__fpos64_t.h","/usr/include/bits/types/struct_FILE.h","/usr/include/bits/types/cookie_io_functions_t.h","/usr/include/c++/8.2.1/stdlib.h","/usr/include/c++/8.2.1/cstdlib","/usr/include/c++/8.2.1/x86_64-pc-linux-gnu/bits/c++config.h","/usr/include/c++/8.2.1/x86_64-pc-linux-gnu/bits/os_defines.h","/usr/include/stdlib.h","/usr/include/bits/floatn.h","/usr/include/bits/floatn-common.h","/usr/include/bits/types/locale_t.h","/usr/include/sys/types.h","/usr/include/bits/types/clock_t.h","/usr/include/bits/types/clockid_t.h","/usr/include/bits/types/time_t.h","/usr/include/bits/types/timer_t.h","/usr/include/bits/stdint-intn.h","/usr/include/endian.h","/usr/include/bits/byteswap.h","/usr/include/bits/uintn-identity.h","/usr/include/sys/select.h","/usr/include/bits/select.h","/usr/include/bits/types/sigset_t.h","/usr/include/bits/types/struct_timeval.h","/usr/include/bits/types/struct_timespec.h","/usr/include/bits/pthreadtypes.h","/usr/include/bits/thread-shared-types.h","/usr/include/bits/pthreadtypes-arch.h","/usr/include/alloca.h","/usr/include/c++/8.2.1/bits/std_abs.h","/usr/include/string.h","/usr/include/strings.h","/usr/include/c++/8.2.1/vector","/usr/include/c++/8.2.1/bits/stl_algobase.h","/usr/include/c++/8.2.1/bits/functexcept.h","/usr/include/c++/8.2.1/bits/cpp_type_traits.h","/usr/include/c++/8.2.1/ext/type_traits.h","/usr/include/c++/8.2.1/ext/numeric_traits.h","/usr/include/c++/8.2.1/bits/stl_pair.h","/usr/include/c++/8.2.1/bits/move.h","/usr/include/c++/8.2.1/bits/concept_check.h","/usr/include/c++/8.2.1/type_traits","/usr/include/c++/8.2.1/bits/stl_iterator_base_types.h","/usr/include/c++/8.2.1/bits/stl_iterator_base_funcs.h","/usr/include/c++/8.2.1/bits/stl_iterator.h","/usr/include/c++/8.2.1/bits/ptr_traits.h","/usr/include/c++/8.2.1/debug/debug.h","/usr/include/c++/8.2.1/bits/allocator.h","/usr/include/c++/8.2.1/x86_64-pc-linux-gnu/bits/c++allocator.h","/usr/include/c++/8.2.1/ext/new_allocator.h","/usr/include/c++/8.2.1/new","/usr/include/c++/8.2.1/exception","/usr/include/c++/8.2.1/bits/exception.h","/usr/include/c++/8.2.1/bits/exception_ptr.h","/usr/include/c++/8.2.1/bits/cxxabi_init_exception.h","/usr/lib/clang/7.0.1/include/stddef.h","/usr/include/c++/8.2.1/typeinfo","/usr/include/c++/8.2.1/bits/hash_bytes.h","/usr/include/c++/8.2.1/bits/nested_exception.h","/usr/include/c++/8.2.1/bits/memoryfwd.h","/usr/include/c++/8.2.1/bits/stl_construct.h","/usr/include/c++/8.2.1/ext/alloc_traits.h","/usr/include/c++/8.2.1/bits/alloc_traits.h","/usr/include/c++/8.2.1/bits/stl_uninitialized.h","/usr/include/c++/8.2.1/bits/stl_vector.h","/usr/include/c++/8.2.1/initializer_list","/usr/include/c++/8.2.1/bits/stl_bvector.h","/usr/include/c++/8.2.1/bits/functional_hash.h","/usr/include/c++/8.2.1/bits/range_access.h","/usr/include/c++/8.2.1/set","/usr/include/c++/8.2.1/bits/stl_tree.h","/usr/include/c++/8.2.1/bits/stl_function.h","/usr/include/c++/8.2.1/ext/aligned_buffer.h","/usr/include/c++/8.2.1/bits/stl_set.h","/usr/include/c++/8.2.1/bits/stl_multiset.h","/usr/include/c++/8.2.1/string","/usr/include/c++/8.2.1/bits/stringfwd.h","/usr/include/c++/8.2.1/bits/char_traits.h","/usr/include/c++/8.2.1/bits/postypes.h","/usr/include/c++/8.2.1/cwchar","/usr/include/wchar.h","/usr/include/bits/types/mbstate_t.h","/usr/include/c++/8.2.1/cstdint","/usr/lib/clang/7.0.1/include/stdint.h","/usr/include/stdint.h","/usr/include/bits/stdint-uintn.h","/usr/include/c++/8.2.1/bits/localefwd.h","/usr/include/c++/8.2.1/x86_64-pc-linux-gnu/bits/c++locale.h","/usr/include/c++/8.2.1/clocale","/usr/include/locale.h","/usr/include/c++/8.2.1/iosfwd","/usr/include/c++/8.2.1/cctype","/usr/include/ctype.h","/usr/include/c++/8.2.1/bits/ostream_insert.h","/usr/include/c++/8.2.1/bits/basic_string.h","/usr/include/c++/8.2.1/ext/atomicity.h","/usr/include/c++/8.2.1/x86_64-pc-linux-gnu/bits/gthr.h","/usr/include/c++/8.2.1/x86_64-pc-linux-gnu/bits/gthr-default.h","/usr/include/pthread.h","/usr/include/sched.h","/usr/include/bits/sched.h","/usr/include/time.h","/usr/include/bits/time.h","/usr/include/bits/timex.h","/usr/include/bits/types/struct_tm.h","/usr/include/bits/types/struct_itimerspec.h","/usr/include/bits/setjmp.h","/usr/include/c++/8.2.1/ext/string_conversions.h","/usr/include/c++/8.2.1/cstdio","/usr/include/c++/8.2.1/cerrno","/usr/include/errno.h","/usr/include/bits/errno.h","/usr/include/linux/errno.h","/usr/include/asm/errno.h","/usr/include/asm-generic/errno.h","/usr/include/c++/8.2.1/bits/basic_string.tcc","/usr/include/c++/8.2.1/map","/usr/include/c++/8.2.1/bits/stl_map.h","/usr/include/c++/8.2.1/tuple","/usr/include/c++/8.2.1/utility","/usr/include/c++/8.2.1/array","/usr/include/c++/8.2.1/stdexcept","/usr/include/c++/8.2.1/bits/uses_allocator.h","/usr/include/c++/8.2.1/bits/invoke.h","/usr/include/c++/8.2.1/bits/stl_multimap.h","/usr/lib/clang/7.0.1/include/stdarg.h","/usr/include/bits/types/__mbstate_t.h","/usr/include/bits/types/__FILE.h","/usr/include/bits/types/FILE.h","/usr/include/bits/sys_errlist.h","/usr/include/bits/types/__locale_t.h","/usr/include/bits/types/__sigset_t.h","/usr/include/c++/8.2.1/bits/predefined_ops.h","/usr/lib/clang/7.0.1/include/__stddef_max_align_t.h","/usr/include/c++/8.2.1/bits/vector.tcc","/usr/include/c++/8.2.1/backward/binders.h","/usr/include/bits/types/wint_t.h","/usr/include/c++/8.2.1/bits/cxxabi_forced.h","/usr/include/bits/types/struct_sched_param.h","/usr/include/bits/cpu-set.h","/usr/include/c++/8.2.1/x86_64-pc-linux-gnu/bits/atomic_word.h","/usr/include/bits/types/error_t.h","/usr/include/c++/8.2.1/bits/stl_relops.h","/usr/include/stdc-predef.h","/usr/include/bits/wordsize.h","/usr/include/gnu/stubs-64.h","/usr/include/bits/typesizes.h","/usr/include/bits/stdio_lim.h","/usr/include/c++/8.2.1/x86_64-pc-linux-gnu/bits/cpu_defines.h","/usr/include/bits/waitflags.h","/usr/include/bits/waitstatus.h","/usr/include/bits/endian.h","/usr/include/bits/stdlib-float.h","/usr/include/c++/8.2.1/bits/exception_defines.h","/usr/include/c++/8.2.1/debug/assertions.h","/usr/include/bits/wchar.h","/usr/include/bits/locale.h","/usr/include/asm-generic/errno-base.h"],"skipped_by_preprocessor":[],"types":[{"id":0,"usr":10197732303800454747,"detailed_name":"TetMesh","short_name_offset":0,"short_name_size":7,"kind":5,"hover":"","comments":"see also volumetricMesh.h for a description of the routines","declarations":["48:3-48:10|-1|1|4","52:3-52:10|-1|1|4","58:3-58:10|-1|1|4","68:3-68:10|-1|1|4","80:3-80:10|-1|1|4","83:3-83:10|-1|1|4","85:3-85:10|-1|1|4","87:12-87:19|-1|1|4","127:3-127:10|-1|1|4"],"spell":"42:7-42:14|-1|1|2","extent":"42:1-130:2|-1|1|0","bases":[1],"derived":[],"types":[],"funcs":[0,1,2,3,4,5,6,7,9,11,13,15,17,18,20,21,22,24,25,27,28,30,32,33,34,35,36,37],"vars":[],"instances":[],"uses":["48:3-48:10|0|2|4","52:3-52:10|0|2|4","58:3-58:10|0|2|4","68:3-68:10|0|2|4","80:3-80:10|0|2|4","83:3-83:10|0|2|4","83:17-83:24|-1|1|4","85:3-85:10|0|2|4","85:17-85:24|-1|1|4","127:3-127:10|0|2|4"]},{"id":1,"usr":13254383881040800599,"detailed_name":"VolumetricMesh","short_name_offset":0,"short_name_size":14,"kind":0,"hover":"","comments":"","declarations":["42:24-42:38|-1|1|4"],"bases":[],"derived":[0],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["42:24-42:38|-1|1|4","86:11-86:25|-1|1|4","98:10-98:24|-1|1|4","99:11-99:25|-1|1|4","126:16-126:30|-1|1|4","127:36-127:50|-1|1|4"]},{"id":2,"usr":6452970833977951007,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["48:34-48:48|-1|1|4"]},{"id":3,"usr":6523739416730091428,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["70:28-70:36|-1|1|4"]},{"id":4,"usr":11670709523018807195,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["71:23-71:26|-1|1|4"]},{"id":5,"usr":3476891218940017344,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["72:26-72:32|-1|1|4"]},{"id":6,"usr":17530214843340823407,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["94:28-94:32|-1|1|4"]},{"id":7,"usr":9338545533713239102,"detailed_name":"VolumetricMesh::elementType","short_name_offset":16,"short_name_size":11,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[1,1],"uses":["98:26-98:37|-1|1|4","99:27-99:38|-1|1|4","126:32-126:43|-1|1|4"]},{"id":8,"usr":17,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[2],"uses":[]},{"id":9,"usr":16508570864431269473,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":["129:16-129:40|-1|1|4"],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":[]}],"funcs":[{"id":0,"usr":2744616799372790376,"detailed_name":"TetMesh::TetMesh(const char *filename, VolumetricMesh::fileFormatType fileFormat = ASCII, int verbose = 1)","short_name_offset":0,"short_name_size":7,"kind":9,"storage":1,"hover":"","comments":"loads the mesh from a file \nASCII: .veg text input format, see documentation and the provided examples\nBINARY: .vegb binary input format","declarations":[{"spell":"48:3-48:10|0|2|1","param_spellings":["48:24-48:32","48:49-48:59","48:73-48:80"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":1,"usr":1275918424009493852,"detailed_name":"TetMesh::TetMesh(void *binaryStream, int memoryLoad = 0)","short_name_offset":0,"short_name_size":7,"kind":9,"storage":1,"hover":"","comments":"load from a stream\nif memoryLoad is 0, binaryStream is FILE* (load from a file), otherwise, it is char* (load from a memory buffer)","declarations":[{"spell":"52:3-52:10|0|2|1","param_spellings":["52:18-52:30","52:36-52:46"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":2,"usr":11614203904605299140,"detailed_name":"TetMesh::TetMesh(int numVertices, double *vertices, int numElements, int *elements, double E = 1.0E+6, double nu = 0.45000000000000001, double density = 1000)","short_name_offset":0,"short_name_size":7,"kind":9,"storage":1,"hover":"","comments":"constructs a tet mesh from the given vertices and elements, \nwith a single region and material (\"E, nu\" material)\n\"vertices\" is double-precision array of length 3 x numVertices .\n\"elements\" is an integer array of length 4 x numElements","declarations":[{"spell":"58:3-58:10|0|2|1","param_spellings":["58:15-58:26","58:37-58:45","59:14-59:25","59:33-59:41","60:17-60:18","60:31-60:33","60:47-60:54"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":3,"usr":10438530851085899264,"detailed_name":"TetMesh::TetMesh(int numVertices, double *vertices, int numElements, int *elements, int numMaterials, VolumetricMesh::Material **materials, int numSets, VolumetricMesh::Set **sets, int numRegions, VolumetricMesh::Region **regions)","short_name_offset":0,"short_name_size":7,"kind":9,"storage":1,"hover":"","comments":"constructs a tet mesh from the given vertices and elements, \nwith an arbitrary number of sets, regions and materials\n\"vertices\" is double-precision array of length 3 x numVertices \n\"elements\" is an integer array of length 4 x numElements\n\"materials\", \"sets\" and \"regions\" will be copied internally (deep copy), so you\ncan release them after calling this constructor","declarations":[{"spell":"68:3-68:10|0|2|1","param_spellings":["68:15-68:26","68:37-68:45","69:14-69:25","69:33-69:41","70:14-70:26","70:40-70:49","71:14-71:21","71:30-71:34","72:14-72:24","72:36-72:43"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":4,"usr":12641976142933995618,"detailed_name":"TetMesh::TetMesh(const char *filename, int specialFileType, int verbose)","short_name_offset":0,"short_name_size":7,"kind":9,"storage":1,"hover":"","comments":"loads a file of a \"special\" (not .veg) type\ncurrently one such special format is supported:\nspecialFileType=0: \n  the \".ele\" and \".node\" format, used by TetGen, \n  \"filename\" is the basename, e.g., passing \"mesh\" will load the mesh from \"mesh.ele\" and \"mesh.node\" \ndefault material parameters will be used","declarations":[{"spell":"80:3-80:10|0|2|1","param_spellings":["80:24-80:32","80:38-80:53","80:59-80:66"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":5,"usr":7758289367747151418,"detailed_name":"TetMesh::TetMesh(const TetMesh &mesh, int numElements, int *elements, int *vertexMap = __null)","short_name_offset":0,"short_name_size":7,"kind":9,"storage":1,"hover":"","comments":"creates a mesh consisting of the specified element subset of the given TetMesh","declarations":[{"spell":"83:3-83:10|0|2|1","param_spellings":["83:27-83:31","83:37-83:48","83:56-83:64","83:86-83:95"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":6,"usr":6833133485897932317,"detailed_name":"TetMesh::TetMesh(const TetMesh &tetMesh)","short_name_offset":0,"short_name_size":7,"kind":9,"storage":1,"hover":"","comments":"","declarations":[{"spell":"85:3-85:10|0|2|1","param_spellings":["85:27-85:34"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":7,"usr":15644811274171306258,"detailed_name":"virtual VolumetricMesh *TetMesh::clone()","short_name_offset":33,"short_name_size":5,"kind":6,"storage":1,"hover":"","comments":"","declarations":[{"spell":"86:28-86:33|0|2|1","param_spellings":[]}],"declaring_type":0,"bases":[8],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":8,"usr":5789708012432074957,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[7],"vars":[],"uses":[],"callees":[]},{"id":9,"usr":5824230298857639335,"detailed_name":"virtual TetMesh::~TetMesh() noexcept","short_name_offset":17,"short_name_size":8,"kind":6,"storage":1,"hover":"","comments":"","declarations":[{"spell":"87:11-87:19|0|2|1","param_spellings":[]}],"declaring_type":0,"bases":[10],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":10,"usr":977862231372417989,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[9],"vars":[],"uses":[],"callees":[]},{"id":11,"usr":941843420530945773,"detailed_name":"virtual int TetMesh::saveToAscii(const char *filename) const","short_name_offset":21,"short_name_size":11,"kind":6,"storage":1,"hover":"","comments":"","declarations":[{"spell":"89:15-89:26|0|2|1","param_spellings":["89:40-89:48"]}],"declaring_type":0,"bases":[12],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":12,"usr":3802407123097088353,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[11],"vars":[],"uses":[],"callees":[]},{"id":13,"usr":9636093095572687576,"detailed_name":"virtual int TetMesh::saveToBinary(const char *filename, unsigned int *bytesWritten = __null) const","short_name_offset":21,"short_name_size":12,"kind":6,"storage":1,"hover":"","comments":"saves the mesh to binary format\nreturns: 0 = success, non-zero = error\noutput: if bytesWritten is non-NULL, it will contain the number of bytes written","declarations":[{"spell":"93:15-93:27|0|2|1","param_spellings":["93:41-93:49","93:66-93:78"]}],"declaring_type":0,"bases":[14],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":14,"usr":4779524934507786368,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[13],"vars":[],"uses":[],"callees":[]},{"id":15,"usr":4828076648669422726,"detailed_name":"virtual int TetMesh::saveToBinary(FILE *binaryOutputStream, unsigned int *bytesWritten = __null, bool countBytesOnly = false) const","short_name_offset":21,"short_name_size":12,"kind":6,"storage":1,"hover":"","comments":"","declarations":[{"spell":"94:15-94:27|0|2|1","param_spellings":["94:35-94:53","94:70-94:82","94:96-94:110"]}],"declaring_type":0,"bases":[16],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":16,"usr":13478017806923436553,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[15],"vars":[],"uses":[],"callees":[]},{"id":17,"usr":4430674586417345162,"detailed_name":"static VolumetricMesh::elementType TetMesh::elementType()","short_name_offset":23,"short_name_size":11,"kind":254,"storage":3,"hover":"","comments":"=== misc queries ===","declarations":[],"spell":"98:38-98:49|0|2|2","extent":"98:3-98:76|0|2|0","declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":["99:71-99:82|18|3|36"],"callees":[]},{"id":18,"usr":5420172224784795806,"detailed_name":"virtual VolumetricMesh::elementType TetMesh::getElementType() const","short_name_offset":45,"short_name_size":14,"kind":6,"storage":1,"hover":"","comments":"","declarations":[],"spell":"99:39-99:53|0|2|2","extent":"99:3-99:87|0|2|0","declaring_type":0,"bases":[19],"derived":[],"vars":[],"uses":[],"callees":["99:71-99:82|17|3|36"]},{"id":19,"usr":3808529572280549777,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[18],"vars":[],"uses":[],"callees":[]},{"id":20,"usr":17392898045276846339,"detailed_name":"static double TetMesh::getTetVolume(const int &a, const int &b, const int &c, const int &d)","short_name_offset":23,"short_name_size":12,"kind":254,"storage":3,"hover":"","comments":"","declarations":[{"spell":"101:17-101:29|0|2|1","param_spellings":["101:44-101:45","101:61-101:62","101:78-101:79","101:95-101:96"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":21,"usr":4758450754331300366,"detailed_name":"static double TetMesh::getTetDeterminant(const int &a, const int &b, const int &c, const int &d)","short_name_offset":23,"short_name_size":17,"kind":254,"storage":3,"hover":"","comments":"","declarations":[{"spell":"102:17-102:34|0|2|1","param_spellings":["102:49-102:50","102:66-102:67","102:83-102:84","102:100-102:101"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":22,"usr":14072645139575536481,"detailed_name":"virtual double TetMesh::getElementVolume(int el) const","short_name_offset":24,"short_name_size":16,"kind":6,"storage":1,"hover":"","comments":"","declarations":[{"spell":"104:18-104:34|0|2|1","param_spellings":["104:39-104:41"]}],"declaring_type":0,"bases":[23],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":23,"usr":7449606707413777339,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[22],"vars":[],"uses":[],"callees":[]},{"id":24,"usr":17029740790144430135,"detailed_name":"virtual void TetMesh::getElementInertiaTensor(int el, int &inertiaTensor) const","short_name_offset":22,"short_name_size":23,"kind":6,"storage":1,"hover":"","comments":"","declarations":[{"spell":"105:16-105:39|0|2|1","param_spellings":["105:44-105:46","105:56-105:69"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":25,"usr":6507341355022075867,"detailed_name":"virtual void TetMesh::computeElementMassMatrix(int element, double *massMatrix) const","short_name_offset":22,"short_name_size":24,"kind":6,"storage":1,"hover":"","comments":"","declarations":[{"spell":"106:16-106:40|0|2|1","param_spellings":["106:45-106:52","106:63-106:73"]}],"declaring_type":0,"bases":[26],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":26,"usr":9890119378399949434,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[25],"vars":[],"uses":[],"callees":[]},{"id":27,"usr":7263324947676395166,"detailed_name":"virtual bool TetMesh::containsVertex(int element, int pos) const","short_name_offset":22,"short_name_size":14,"kind":6,"storage":1,"hover":"","comments":"","declarations":[{"spell":"108:16-108:30|0|2|1","param_spellings":["108:35-108:42","108:50-108:53"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":28,"usr":720689549344479490,"detailed_name":"virtual int TetMesh::getNumElementEdges() const","short_name_offset":21,"short_name_size":18,"kind":6,"storage":1,"hover":"","comments":"edge queries","declarations":[{"spell":"111:15-111:33|0|2|1","param_spellings":[]}],"declaring_type":0,"bases":[29],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":29,"usr":7125507881319006858,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[28],"vars":[],"uses":[],"callees":[]},{"id":30,"usr":7494222992492101923,"detailed_name":"virtual void TetMesh::getElementEdges(int el, int *edgeBuffer) const","short_name_offset":22,"short_name_size":15,"kind":6,"storage":1,"hover":"","comments":"","declarations":[{"spell":"112:16-112:31|0|2|1","param_spellings":["112:36-112:38","112:46-112:56"]}],"declaring_type":0,"bases":[31],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":31,"usr":13260311294822452649,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[30],"vars":[],"uses":[],"callees":[]},{"id":32,"usr":9132901389013462994,"detailed_name":"static void TetMesh::computeBarycentricWeights(const int vertexPos[4], const int &pos, double *weights)","short_name_offset":21,"short_name_size":25,"kind":254,"storage":3,"hover":"","comments":"=== interpolation ===","declarations":[{"spell":"116:15-116:40|0|2|1","param_spellings":["116:53-116:62","116:81-116:84","116:95-116:102"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":33,"usr":15876413837532928575,"detailed_name":"virtual void TetMesh::computeBarycentricWeights(int el, const int &pos, double *weights) const","short_name_offset":22,"short_name_size":25,"kind":6,"storage":1,"hover":"","comments":"","declarations":[{"spell":"117:16-117:41|0|2|1","param_spellings":["117:46-117:48","117:64-117:67","117:78-117:85"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":34,"usr":9495301268704226062,"detailed_name":"void TetMesh::computeGradient(int element, const double *U, int numFields, double *grad) const","short_name_offset":14,"short_name_size":15,"kind":6,"storage":1,"hover":"","comments":"","declarations":[{"spell":"118:8-118:23|0|2|1","param_spellings":["118:28-118:35","118:52-118:53","118:59-118:68","118:79-118:83"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":35,"usr":1655993199051612303,"detailed_name":"virtual void TetMesh::interpolateGradient(int element, const double *U, int numFields, int pos, double *grad) const","short_name_offset":22,"short_name_size":19,"kind":6,"storage":1,"hover":"","comments":"","declarations":[{"spell":"119:16-119:35|0|2|1","param_spellings":["119:40-119:47","119:64-119:65","119:71-119:80","119:88-119:91","119:102-119:106"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":36,"usr":7639349774124801521,"detailed_name":"void TetMesh::orient()","short_name_offset":14,"short_name_size":6,"kind":6,"storage":1,"hover":"","comments":"=== misc ===","declarations":[{"spell":"123:8-123:14|0|2|1","param_spellings":[]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":37,"usr":18004648327511702934,"detailed_name":"TetMesh::TetMesh(int numElementVertices)","short_name_offset":0,"short_name_size":7,"kind":9,"storage":1,"hover":"","comments":"","declarations":[],"spell":"127:3-127:10|0|2|2","extent":"127:3-127:73|0|2|0","declaring_type":0,"bases":[],"derived":[],"vars":[2],"uses":[],"callees":["127:36-127:70|38|3|292"]},{"id":38,"usr":8821835650383318366,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["127:36-127:70|37|3|292"],"callees":[]}],"vars":[{"id":0,"usr":15639331645577008064,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["48:62-48:67|0|2|4"],"kind":0,"storage":0},{"id":1,"usr":12568974171543181765,"detailed_name":"const VolumetricMesh::elementType TetMesh::elementType_","short_name_offset":43,"short_name_size":12,"hover":"","comments":"","declarations":["126:44-126:56|0|2|1"],"spell":"126:44-126:56|17|3|2","extent":"126:3-126:56|17|3|0","type":7,"uses":["98:61-98:73|17|3|12"],"kind":8,"storage":3},{"id":2,"usr":9964212227136336221,"detailed_name":"int numElementVertices","short_name_offset":4,"short_name_size":18,"hover":"","comments":"","declarations":[],"spell":"127:15-127:33|37|3|2","extent":"127:11-127:33|37|3|0","type":8,"uses":["127:51-127:69|37|3|12"],"kind":253,"storage":1},{"id":3,"usr":1222791877189950010,"detailed_name":"_TETMESH_H_","short_name_offset":0,"short_name_size":11,"hover":"#define _TETMESH_H_","comments":"","declarations":[],"spell":"36:9-36:20|-1|1|2","extent":"36:9-36:20|-1|1|0","uses":[],"kind":255,"storage":0},{"id":4,"usr":291038054068649371,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["83:98-83:102|-1|1|4","93:81-93:85|-1|1|4","94:85-94:89|-1|1|4"],"kind":0,"storage":0}]}