15
{"last_modification_time":1548168587,"language":2,"import_file":"/home/dark/proj/faust/tools/physicalModeling/mesh2faust/vega/libraries/objMesh/objMeshOrientable.cpp","args":["clang++","-working-directory=/home/dark/proj/faust/","/home/dark/proj/faust/tools/physicalModeling/mesh2faust/vega/libraries/objMesh/objMeshOrientable.cpp","-resource-dir=/usr/lib/clang/7.0.1","-Wno-unknown-warning-option","-fparse-all-comments","-isystem/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/8.2.1/../../../../include/c++/8.2.1","-isystem/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/8.2.1/../../../../include/c++/8.2.1/x86_64-pc-linux-gnu","-isystem/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/8.2.1/../../../../include/c++/8.2.1/backward","-isystem/usr/local/include","-isystem/usr/lib/clang/7.0.1/include","-isystem/usr/include"],"includes":[{"line":34,"resolved_path":"/usr/lib/clang/7.0.1/include/float.h"},{"line":35,"resolved_path":"/usr/include/c++/8.2.1/vector"},{"line":36,"resolved_path":"/usr/include/c++/8.2.1/set"},{"line":37,"resolved_path":"/usr/include/c++/8.2.1/string"},{"line":38,"resolved_path":"/usr/include/c++/8.2.1/map"},{"line":39,"resolved_path":"/usr/include/c++/8.2.1/fstream"},{"line":40,"resolved_path":"/usr/include/c++/8.2.1/sstream"},{"line":41,"resolved_path":"/usr/include/c++/8.2.1/algorithm"},{"line":42,"resolved_path":"/usr/include/assert.h"},{"line":44,"resolved_path":"/home/dark/proj/faust/tools/physicalModeling/mesh2faust/vega/libraries/objMesh/objMeshOrientable.h"}],"dependencies":["/usr/include/c++/8.2.1/vector","/usr/include/c++/8.2.1/bits/stl_algobase.h","/usr/include/c++/8.2.1/x86_64-pc-linux-gnu/bits/c++config.h","/usr/include/c++/8.2.1/x86_64-pc-linux-gnu/bits/os_defines.h","/usr/include/features.h","/usr/include/sys/cdefs.h","/usr/include/gnu/stubs.h","/usr/include/c++/8.2.1/bits/functexcept.h","/usr/include/c++/8.2.1/bits/cpp_type_traits.h","/usr/include/c++/8.2.1/ext/type_traits.h","/usr/include/c++/8.2.1/ext/numeric_traits.h","/usr/include/c++/8.2.1/bits/stl_pair.h","/usr/include/c++/8.2.1/bits/move.h","/usr/include/c++/8.2.1/bits/concept_check.h","/usr/include/c++/8.2.1/type_traits","/usr/include/c++/8.2.1/bits/stl_iterator_base_types.h","/usr/include/c++/8.2.1/bits/stl_iterator_base_funcs.h","/usr/include/c++/8.2.1/bits/stl_iterator.h","/usr/include/c++/8.2.1/bits/ptr_traits.h","/usr/include/c++/8.2.1/debug/debug.h","/usr/include/c++/8.2.1/bits/allocator.h","/usr/include/c++/8.2.1/x86_64-pc-linux-gnu/bits/c++allocator.h","/usr/include/c++/8.2.1/ext/new_allocator.h","/usr/include/c++/8.2.1/new","/usr/include/c++/8.2.1/exception","/usr/include/c++/8.2.1/bits/exception.h","/usr/include/c++/8.2.1/bits/exception_ptr.h","/usr/include/c++/8.2.1/bits/cxxabi_init_exception.h","/usr/lib/clang/7.0.1/include/stddef.h","/usr/include/c++/8.2.1/typeinfo","/usr/include/c++/8.2.1/bits/hash_bytes.h","/usr/include/c++/8.2.1/bits/nested_exception.h","/usr/include/c++/8.2.1/bits/memoryfwd.h","/usr/include/c++/8.2.1/bits/stl_construct.h","/usr/include/c++/8.2.1/ext/alloc_traits.h","/usr/include/c++/8.2.1/bits/alloc_traits.h","/usr/include/c++/8.2.1/bits/stl_uninitialized.h","/usr/include/c++/8.2.1/bits/stl_vector.h","/usr/include/c++/8.2.1/initializer_list","/usr/include/c++/8.2.1/bits/stl_bvector.h","/usr/include/c++/8.2.1/bits/functional_hash.h","/usr/include/c++/8.2.1/bits/range_access.h","/usr/include/c++/8.2.1/set","/usr/include/c++/8.2.1/bits/stl_tree.h","/usr/include/c++/8.2.1/bits/stl_function.h","/usr/include/c++/8.2.1/ext/aligned_buffer.h","/usr/include/c++/8.2.1/bits/stl_set.h","/usr/include/c++/8.2.1/bits/stl_multiset.h","/usr/include/c++/8.2.1/string","/usr/include/c++/8.2.1/bits/stringfwd.h","/usr/include/c++/8.2.1/bits/char_traits.h","/usr/include/c++/8.2.1/bits/postypes.h","/usr/include/c++/8.2.1/cwchar","/usr/include/wchar.h","/usr/include/bits/libc-header-start.h","/usr/include/bits/floatn.h","/usr/include/bits/floatn-common.h","/usr/include/bits/types/mbstate_t.h","/usr/include/bits/types/locale_t.h","/usr/include/c++/8.2.1/cstdint","/usr/lib/clang/7.0.1/include/stdint.h","/usr/include/stdint.h","/usr/include/bits/types.h","/usr/include/bits/stdint-intn.h","/usr/include/bits/stdint-uintn.h","/usr/include/c++/8.2.1/bits/localefwd.h","/usr/include/c++/8.2.1/x86_64-pc-linux-gnu/bits/c++locale.h","/usr/include/c++/8.2.1/clocale","/usr/include/locale.h","/usr/include/c++/8.2.1/iosfwd","/usr/include/c++/8.2.1/cctype","/usr/include/ctype.h","/usr/include/endian.h","/usr/include/bits/byteswap.h","/usr/include/bits/uintn-identity.h","/usr/include/c++/8.2.1/bits/ostream_insert.h","/usr/include/c++/8.2.1/bits/basic_string.h","/usr/include/c++/8.2.1/ext/atomicity.h","/usr/include/c++/8.2.1/x86_64-pc-linux-gnu/bits/gthr.h","/usr/include/c++/8.2.1/x86_64-pc-linux-gnu/bits/gthr-default.h","/usr/include/pthread.h","/usr/include/sched.h","/usr/include/bits/types/time_t.h","/usr/include/bits/types/struct_timespec.h","/usr/include/bits/sched.h","/usr/include/time.h","/usr/include/bits/time.h","/usr/include/bits/timex.h","/usr/include/bits/types/struct_timeval.h","/usr/include/bits/types/clock_t.h","/usr/include/bits/types/struct_tm.h","/usr/include/bits/types/clockid_t.h","/usr/include/bits/types/timer_t.h","/usr/include/bits/types/struct_itimerspec.h","/usr/include/bits/pthreadtypes.h","/usr/include/bits/thread-shared-types.h","/usr/include/bits/pthreadtypes-arch.h","/usr/include/bits/setjmp.h","/usr/include/c++/8.2.1/ext/string_conversions.h","/usr/include/c++/8.2.1/cstdlib","/usr/include/stdlib.h","/usr/include/sys/types.h","/usr/include/sys/select.h","/usr/include/bits/select.h","/usr/include/bits/types/sigset_t.h","/usr/include/alloca.h","/usr/include/c++/8.2.1/bits/std_abs.h","/usr/include/c++/8.2.1/cstdio","/usr/include/stdio.h","/usr/include/bits/types/__fpos_t.h","/usr/include/bits/types/__fpos64_t.h","/usr/include/bits/types/struct_FILE.h","/usr/include/bits/types/cookie_io_functions_t.h","/usr/include/c++/8.2.1/cerrno","/usr/include/errno.h","/usr/include/bits/errno.h","/usr/include/linux/errno.h","/usr/include/asm/errno.h","/usr/include/asm-generic/errno.h","/usr/include/c++/8.2.1/bits/basic_string.tcc","/usr/include/c++/8.2.1/map","/usr/include/c++/8.2.1/bits/stl_map.h","/usr/include/c++/8.2.1/tuple","/usr/include/c++/8.2.1/utility","/usr/include/c++/8.2.1/array","/usr/include/c++/8.2.1/stdexcept","/usr/include/c++/8.2.1/bits/uses_allocator.h","/usr/include/c++/8.2.1/bits/invoke.h","/usr/include/c++/8.2.1/bits/stl_multimap.h","/usr/include/c++/8.2.1/fstream","/usr/include/c++/8.2.1/istream","/usr/include/c++/8.2.1/ios","/usr/include/c++/8.2.1/bits/ios_base.h","/usr/include/c++/8.2.1/bits/locale_classes.h","/usr/include/c++/8.2.1/system_error","/usr/include/c++/8.2.1/x86_64-pc-linux-gnu/bits/error_constants.h","/usr/include/c++/8.2.1/streambuf","/usr/include/c++/8.2.1/bits/basic_ios.h","/usr/include/c++/8.2.1/bits/locale_facets.h","/usr/include/c++/8.2.1/cwctype","/usr/include/wctype.h","/usr/include/bits/wctype-wchar.h","/usr/include/c++/8.2.1/bits/streambuf_iterator.h","/usr/include/c++/8.2.1/ostream","/usr/include/c++/8.2.1/bits/ostream.tcc","/usr/include/c++/8.2.1/bits/istream.tcc","/usr/include/c++/8.2.1/x86_64-pc-linux-gnu/bits/basic_file.h","/usr/include/c++/8.2.1/x86_64-pc-linux-gnu/bits/c++io.h","/usr/include/c++/8.2.1/bits/fstream.tcc","/usr/include/c++/8.2.1/sstream","/usr/include/c++/8.2.1/algorithm","/usr/include/c++/8.2.1/bits/stl_algo.h","/usr/include/c++/8.2.1/bits/algorithmfwd.h","/usr/include/c++/8.2.1/bits/stl_heap.h","/usr/include/c++/8.2.1/bits/stl_tempbuf.h","/usr/include/c++/8.2.1/bits/uniform_int_dist.h","/usr/include/c++/8.2.1/limits","/usr/include/assert.h","/home/dark/proj/faust/tools/physicalModeling/mesh2faust/vega/libraries/objMesh/objMeshOrientable.h","/home/dark/proj/faust/tools/physicalModeling/mesh2faust/vega/libraries/objMesh/objMesh.h","/usr/include/c++/8.2.1/math.h","/usr/include/c++/8.2.1/cmath","/usr/include/math.h","/usr/include/bits/math-vector.h","/usr/include/c++/8.2.1/list","/usr/include/c++/8.2.1/bits/stl_list.h","/usr/include/c++/8.2.1/bits/allocated_ptr.h","/usr/include/c++/8.2.1/iostream","/usr/include/c++/8.2.1/bits/predefined_ops.h","/usr/lib/clang/7.0.1/include/__stddef_max_align_t.h","/usr/include/c++/8.2.1/bits/vector.tcc","/usr/include/c++/8.2.1/backward/binders.h","/usr/lib/clang/7.0.1/include/stdarg.h","/usr/include/bits/types/wint_t.h","/usr/include/bits/types/__mbstate_t.h","/usr/include/bits/types/__FILE.h","/usr/include/bits/types/FILE.h","/usr/include/bits/types/__locale_t.h","/usr/include/c++/8.2.1/bits/cxxabi_forced.h","/usr/include/bits/types/struct_sched_param.h","/usr/include/bits/cpu-set.h","/usr/include/c++/8.2.1/x86_64-pc-linux-gnu/bits/atomic_word.h","/usr/include/bits/types/__sigset_t.h","/usr/include/bits/sys_errlist.h","/usr/include/bits/types/error_t.h","/usr/include/c++/8.2.1/bits/stl_relops.h","/usr/include/c++/8.2.1/bits/locale_classes.tcc","/usr/include/c++/8.2.1/bits/streambuf.tcc","/usr/include/c++/8.2.1/x86_64-pc-linux-gnu/bits/ctype_base.h","/usr/include/c++/8.2.1/x86_64-pc-linux-gnu/bits/ctype_inline.h","/usr/include/c++/8.2.1/bits/locale_facets.tcc","/usr/include/c++/8.2.1/bits/basic_ios.tcc","/usr/include/c++/8.2.1/bits/codecvt.h","/usr/include/c++/8.2.1/bits/sstream.tcc","/usr/include/bits/mathcalls-helper-functions.h","/usr/include/bits/mathcalls.h","/usr/include/bits/mathcalls-narrow.h","/usr/include/bits/iscanonical.h","/usr/include/c++/8.2.1/bits/list.tcc","/usr/lib/clang/7.0.1/include/float.h","/usr/include/stdc-predef.h","/usr/include/bits/wordsize.h","/usr/include/gnu/stubs-64.h","/usr/include/c++/8.2.1/x86_64-pc-linux-gnu/bits/cpu_defines.h","/usr/include/c++/8.2.1/bits/exception_defines.h","/usr/include/c++/8.2.1/debug/assertions.h","/usr/include/bits/wchar.h","/usr/include/bits/typesizes.h","/usr/include/bits/locale.h","/usr/include/bits/endian.h","/usr/include/bits/waitflags.h","/usr/include/bits/waitstatus.h","/usr/include/bits/stdlib-float.h","/usr/include/bits/stdio_lim.h","/usr/include/asm-generic/errno-base.h","/usr/include/bits/libm-simd-decl-stubs.h","/usr/include/bits/flt-eval-method.h","/usr/include/bits/fp-logb.h","/usr/include/bits/fp-fast.h"],"skipped_by_preprocessor":["29:1-33:7"],"types":[{"id":0,"usr":5401847601697785946,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["44:17-44:20|-1|1|4","65:44-65:47|-1|1|4","144:11-144:14|6|3|4","192:5-192:8|6|3|4"]},{"id":1,"usr":2951990115159655316,"detailed_name":"ObjMeshOrientable::HalfEdge","short_name_offset":19,"short_name_size":8,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[0],"vars":[],"instances":[28,37,38,46,47,48,49,51,52,53,61],"uses":["52:25-52:33|-1|1|4","161:9-161:17|-1|1|4","492:5-492:13|-1|1|4","493:5-493:13|-1|1|4","600:20-600:28|-1|1|4","600:65-600:73|-1|1|4","602:3-602:11|-1|1|4","606:3-606:11|-1|1|4","616:20-616:28|-1|1|4","616:61-616:69|-1|1|4","618:3-618:11|-1|1|4","625:5-625:13|-1|1|4","633:5-633:13|-1|1|4","679:7-679:15|-1|1|4"]},{"id":2,"usr":13412245685901903283,"detailed_name":"ObjMeshOrientable","short_name_offset":0,"short_name_size":17,"kind":0,"hover":"","comments":"","declarations":["59:21-59:38|-1|1|4","65:20-65:37|-1|1|4","72:20-72:37|-1|1|4"],"bases":[],"derived":[],"types":[],"funcs":[1,2,5,4,7,6,23,28,26,29,30],"vars":[],"instances":[55],"uses":["52:6-52:23|-1|1|4","59:1-59:18|-1|1|4","65:20-65:37|-1|1|4","65:1-65:18|-1|1|4","72:20-72:37|-1|1|4","72:1-72:18|-1|1|4","79:6-79:23|-1|1|4","94:6-94:23|-1|1|4","112:5-112:22|-1|1|4","600:1-600:18|-1|1|4","600:31-600:48|-1|1|4","616:1-616:18|-1|1|4","616:31-616:48|-1|1|4","638:6-638:23|-1|1|4","652:50-652:67|-1|1|4","652:6-652:23|-1|1|4","663:11-663:28|-1|1|4"]},{"id":3,"usr":17,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[0,6,7,8,11,12,13,14,15,16,17,18,19,27,30,31,33,35,41,50],"uses":[]},{"id":4,"usr":4160338041907786,"detailed_name":"std::__cxx11::string","short_name_offset":14,"short_name_size":6,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[5],"uses":["65:49-65:55|-1|1|4"]},{"id":5,"usr":10780671366287487260,"detailed_name":"ObjMesh","short_name_offset":0,"short_name_size":7,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[10,56],"uses":["68:17-68:24|-1|1|4","68:35-68:42|-1|1|4","72:38-72:45|-1|1|4","129:11-129:18|-1|1|4","139:7-139:14|-1|1|4","515:11-515:18|-1|1|4","530:11-530:18|-1|1|4","663:1-663:8|-1|1|4","665:3-665:10|-1|1|4","665:33-665:40|-1|1|4","669:5-669:12|-1|1|4","669:37-669:44|-1|1|4","672:13-672:20|-1|1|4"]},{"id":6,"usr":9,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[20,22,25,26,34,36,39,42,43,45,57,59,62],"uses":[]},{"id":7,"usr":9029142744416049326,"detailed_name":"ObjMesh::Group","short_name_offset":9,"short_name_size":5,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[21,40,44,58],"uses":["129:20-129:25|-1|1|4","515:20-515:25|-1|1|4","530:20-530:25|-1|1|4","669:14-669:19|-1|1|4","669:46-669:51|-1|1|4"]},{"id":8,"usr":5661524084500754075,"detailed_name":"ObjMesh::Face","short_name_offset":9,"short_name_size":4,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[23,60],"uses":["139:16-139:20|-1|1|4","672:22-672:26|-1|1|4"]},{"id":9,"usr":12173568176978414939,"detailed_name":"BinaryTree","short_name_offset":0,"short_name_size":10,"kind":252,"hover":"typedef std::multimap<std::pair< unsigned int, unsigned int > , unsigned int> BinaryTree","comments":"insert all edges into a binary tree","declarations":[],"spell":"197:81-197:91|6|3|2","extent":"197:3-197:91|6|3|0","alias_of":3,"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[29],"uses":["197:81-197:91|6|3|4","198:3-198:13|-1|1|4"]}],"funcs":[{"id":0,"usr":4035870180372119871,"detailed_name":"void ObjMeshOrientable::HalfEdge::flipOrientation()","short_name_offset":34,"short_name_size":15,"kind":6,"storage":1,"hover":"","comments":"\nGenerates a half edge datastructure, assuming tha the given obj mesh is orientable.\nAuthor: Jernej Barbic, 2004","declarations":[],"spell":"52:35-52:50|1|2|2","extent":"52:1-57:2|-1|1|0","declaring_type":1,"bases":[],"derived":[],"vars":[0],"uses":[],"callees":[]},{"id":1,"usr":18363048285656799796,"detailed_name":"ObjMeshOrientable::~ObjMeshOrientable() noexcept","short_name_offset":19,"short_name_size":18,"kind":6,"storage":1,"hover":"","comments":"","declarations":[],"spell":"59:20-59:38|2|2|2","extent":"59:1-63:2|-1|1|0","declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":2,"usr":487311864712620690,"detailed_name":"ObjMeshOrientable::ObjMeshOrientable(const std::string &filename, int generateHalfEdges = 1, int *numOrientationFlips_ = __null, int verbose = 0)","short_name_offset":0,"short_name_size":17,"kind":9,"storage":1,"hover":"","comments":"generates the half-edge datastructure\nif generateHalfEdges flag is 1 (default), it also generates the half edges (otherwise class is not fully initialized)\nif numOrientationFlips is not NULL, returns the number of edges that were flipped to orient the surface coherently\nif the mesh is non-orientable, throws an exception","declarations":[],"spell":"65:20-65:37|2|2|2","extent":"65:1-70:2|-1|1|0","declaring_type":2,"bases":[],"derived":[],"vars":[5,6,7,8],"uses":[],"callees":["68:17-68:59|3|3|292","69:3-69:7|4|3|36"]},{"id":3,"usr":14075647482220633256,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["68:17-68:59|2|3|292"],"callees":[]},{"id":4,"usr":11882946936432944132,"detailed_name":"void ObjMeshOrientable::Init(int generateHalfEdges, int *numOrientationFlips_, int verbose)","short_name_offset":24,"short_name_size":4,"kind":6,"storage":1,"hover":"","comments":"","declarations":[],"spell":"79:25-79:29|2|2|2","extent":"79:1-92:2|-1|1|0","declaring_type":2,"bases":[],"derived":[],"vars":[14,15,16,17],"uses":["69:3-69:7|2|3|36","76:3-76:7|5|3|36"],"callees":["84:31-84:60|6|3|36","84:31-84:60|6|3|36"]},{"id":5,"usr":5639912024833212086,"detailed_name":"ObjMeshOrientable::ObjMeshOrientable(ObjMesh *objMesh, int generateHalfEdges = 1, int *numOrientationFlips_ = __null, int verbose = 0)","short_name_offset":0,"short_name_size":17,"kind":9,"storage":1,"hover":"","comments":"","declarations":[],"spell":"72:20-72:37|2|2|2","extent":"72:1-77:2|-1|1|0","declaring_type":2,"bases":[],"derived":[],"vars":[10,11,12,13],"uses":[],"callees":["76:3-76:7|4|3|36"]},{"id":6,"usr":14410573536703423064,"detailed_name":"int ObjMeshOrientable::GenerateHalfEdgeDataStructure(int verbose = 0)","short_name_offset":23,"short_name_size":29,"kind":6,"storage":1,"hover":"","comments":"this function is mostly called internally, but can sometimes also be called from the outside\nreturns the number of edges that were flipped to orient the surface coherently\n(which will be zero if the input mesh already is oriented coherently)\nif the data structure cannot be generated (non-manifold geometry), returns -1","declarations":[],"spell":"112:24-112:53|2|2|2","extent":"112:1-596:2|-1|1|0","declaring_type":2,"bases":[],"derived":[],"vars":[18,19,20,21,22,23,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45],"uses":["84:31-84:60|4|3|36"],"callees":["127:40-127:52|8|3|36","129:52-129:66|9|3|36","129:52-129:66|9|3|36","137:56-137:67|10|3|36","139:42-139:49|11|3|36","139:42-139:49|11|3|36","144:21-144:23|12|3|36","144:29-144:43|13|3|36","150:16-150:18|14|3|36","156:54-156:68|13|3|36","160:59-160:73|13|3|36","160:59-160:73|13|3|36","161:18-161:238|15|3|292","161:73-161:89|16|3|36","161:54-161:63|17|3|36","161:147-161:163|16|3|36","161:98-161:107|17|3|36","161:129-161:143|13|3|36","161:197-161:211|13|3|36","161:18-161:238|15|3|292","161:73-161:89|16|3|36","161:54-161:63|17|3|36","161:147-161:163|16|3|36","161:98-161:107|17|3|36","161:129-161:143|13|3|36","161:197-161:211|13|3|36","192:15-192:17|14|3|36","462:5-462:11|18|3|36","485:39-485:53|19|3|36","487:9-487:25|20|3|36","492:24-492:36|21|3|36","492:24-492:36|21|3|36","496:17-496:27|22|3|36","502:15-502:27|23|3|36","502:28-502:40|24|3|36","504:18-504:20|25|3|36","510:7-510:13|18|3|36","513:39-513:51|8|3|36","515:52-515:66|9|3|36","515:52-515:66|9|3|36","518:46-518:57|10|3|36","528:39-528:51|8|3|36","530:52-530:66|9|3|36","530:52-530:66|9|3|36","531:46-531:57|10|3|36","539:3-539:32|26|3|36"]},{"id":7,"usr":14822404317268951527,"detailed_name":"void ObjMeshOrientable::PrintHalfEdges()","short_name_offset":24,"short_name_size":14,"kind":6,"storage":1,"hover":"","comments":"","declarations":[],"spell":"94:25-94:39|2|2|2","extent":"94:1-109:2|-1|1|0","declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":8,"usr":6231431696733110173,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["127:40-127:52|6|3|36","513:39-513:51|6|3|36","528:39-528:51|6|3|36","667:44-667:56|30|3|36"],"callees":[]},{"id":9,"usr":7967747257228204884,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["129:52-129:66|6|3|36","515:52-515:66|6|3|36","530:52-530:66|6|3|36","669:69-669:83|30|3|36"],"callees":[]},{"id":10,"usr":3676478484443865979,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["137:56-137:67|6|3|36","518:46-518:57|6|3|36","531:46-531:57|6|3|36","670:45-670:56|30|3|36"],"callees":[]},{"id":11,"usr":14373345020040954334,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["139:42-139:49|6|3|36"],"callees":[]},{"id":12,"usr":14445426177906055665,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["144:21-144:23|6|3|36"],"callees":[]},{"id":13,"usr":7334274772963588384,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["144:29-144:43|6|3|36","156:54-156:68|6|3|36","160:59-160:73|6|3|36","161:129-161:143|6|3|36","161:197-161:211|6|3|36","673:17-673:31|30|3|36"],"callees":[]},{"id":14,"usr":14363705308894165651,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["150:16-150:18|6|3|36","192:15-192:17|6|3|36"],"callees":[]},{"id":15,"usr":8715139269179841532,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["161:18-161:238|6|3|292"],"callees":[]},{"id":16,"usr":6588815995840310551,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["161:73-161:89|6|3|36","161:147-161:163|6|3|36","682:55-682:71|30|3|36","683:36-683:52|30|3|36","687:31-687:47|30|3|36","687:72-687:88|30|3|36"],"callees":[]},{"id":17,"usr":6024023935376952073,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["161:54-161:63|6|3|36","161:98-161:107|6|3|36","682:42-682:51|30|3|36","687:59-687:68|30|3|36"],"callees":[]},{"id":18,"usr":18381016531371734093,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["462:5-462:11|6|3|36","510:7-510:13|6|3|36","675:9-675:15|30|3|36"],"callees":[]},{"id":19,"usr":17544567972762924342,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["485:39-485:53|6|3|36"],"callees":[]},{"id":20,"usr":12904436854439018188,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["487:9-487:25|6|3|36"],"callees":[]},{"id":21,"usr":4254291290664174952,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["492:24-492:36|6|3|36"],"callees":[]},{"id":22,"usr":6670082043623767747,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["496:17-496:27|6|3|36","621:13-621:23|28|3|36"],"callees":[]},{"id":23,"usr":3004578531202731782,"detailed_name":"ObjMeshOrientable::HalfEdge &ObjMeshOrientable::edgePrevious(ObjMeshOrientable::HalfEdge &halfedge)","short_name_offset":48,"short_name_size":12,"kind":6,"storage":1,"hover":"","comments":"returns the previous halfedge to the given half-edge\ndoes so by looping around the face (pointers to previous edges are not explicitly stored), so this is slower than edgeNext","declarations":[],"spell":"600:50-600:62|2|2|2","extent":"600:1-609:2|-1|1|0","declaring_type":2,"bases":[],"derived":[],"vars":[46,47,48],"uses":["502:15-502:27|6|3|36"],"callees":["603:26-603:28|25|3|36","603:10-603:18|27|3|36","604:14-604:22|27|3|36"]},{"id":24,"usr":7681636660211995731,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["502:28-502:40|6|3|36","631:14-631:26|28|3|36"],"callees":[]},{"id":25,"usr":10008945288164769512,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["504:18-504:20|6|3|36","603:26-603:28|23|3|36"],"callees":[]},{"id":26,"usr":8144806679629723560,"detailed_name":"void ObjMeshOrientable::determineIfSurfaceHasBoundary()","short_name_offset":24,"short_name_size":29,"kind":6,"storage":1,"hover":"","comments":"","declarations":[],"spell":"638:25-638:54|2|2|2","extent":"638:1-650:2|-1|1|0","declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":["539:3-539:32|6|3|36"],"callees":[]},{"id":27,"usr":15673609972782355794,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["603:10-603:18|23|3|36","604:14-604:22|23|3|36","619:12-619:20|28|3|36","684:16-684:24|30|3|36"],"callees":[]},{"id":28,"usr":2716750454707360763,"detailed_name":"ObjMeshOrientable::HalfEdge &ObjMeshOrientable::loopVertex(ObjMeshOrientable::HalfEdge &halfedge, int &flag)","short_name_offset":48,"short_name_size":10,"kind":6,"storage":1,"hover":"","comments":"loops around the vertex (vertex is defined as the ending position of the halfedge)\nconsists of taking the next edge, then taking the opposite edge\nif boundary edge encountered, can't take the opposite edge; it this case flag=1 is returned and the edge returned is the boundary edge pointing away from the vertex\nif taking the opposite edge is possible, the returned edge points into the vertex and flag is set to 0\nthis is effectively looping in the clockwise (negative) orientation","declarations":[],"spell":"616:50-616:60|2|2|2","extent":"616:1-636:2|-1|1|0","declaring_type":2,"bases":[],"derived":[],"vars":[49,50,51,52,53],"uses":[],"callees":["619:12-619:20|27|3|36","621:13-621:23|22|3|36","631:14-631:26|24|3|36"]},{"id":29,"usr":6202911173130149259,"detailed_name":"void ObjMeshOrientable::CopyHalfEdgeTopologyFrom(ObjMeshOrientable *source)","short_name_offset":24,"short_name_size":24,"kind":6,"storage":1,"hover":"","comments":"","declarations":[],"spell":"652:25-652:49|2|2|2","extent":"652:1-661:2|-1|1|0","declaring_type":2,"bases":[],"derived":[],"vars":[55],"uses":[],"callees":[]},{"id":30,"usr":16881762891147221103,"detailed_name":"ObjMesh *ObjMeshOrientable::GenerateOrientedMesh()","short_name_offset":28,"short_name_size":20,"kind":6,"storage":1,"hover":"","comments":"","declarations":[],"spell":"663:30-663:50|2|2|2","extent":"663:1-693:2|-1|1|0","declaring_type":2,"bases":[],"derived":[],"vars":[56,57,58,59,60,61,62],"uses":[],"callees":["665:33-665:50|31|3|292","665:33-665:50|31|3|292","667:44-667:56|8|3|36","669:69-669:83|9|3|36","669:69-669:83|9|3|36","670:45-670:56|10|3|36","672:49-672:62|32|3|36","672:49-672:62|32|3|36","673:17-673:31|13|3|36","675:9-675:15|18|3|36","679:23-679:33|33|3|36","679:23-679:33|33|3|36","682:55-682:71|16|3|36","682:42-682:51|17|3|36","682:55-682:71|16|3|36","682:42-682:51|17|3|36","683:36-683:52|16|3|36","683:14-683:29|34|3|36","684:16-684:24|27|3|36","687:31-687:47|16|3|36","687:11-687:24|35|3|36","687:72-687:88|16|3|36","687:59-687:68|17|3|36","688:22-688:33|36|3|36"]},{"id":31,"usr":18039209559323311046,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["665:33-665:50|30|3|292"],"callees":[]},{"id":32,"usr":12244306151904628066,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["672:49-672:62|30|3|36"],"callees":[]},{"id":33,"usr":11554077499888022977,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["679:23-679:33|30|3|36"],"callees":[]},{"id":34,"usr":9267728219885785516,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["683:14-683:29|30|3|36"],"callees":[]},{"id":35,"usr":16618785098858019316,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["687:11-687:24|30|3|36"],"callees":[]},{"id":36,"usr":5304648334462027246,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["688:22-688:33|30|3|36"],"callees":[]}],"vars":[{"id":0,"usr":4786841427747055738,"detailed_name":"int buffer","short_name_offset":4,"short_name_size":6,"hover":"int buffer = startVertex_","comments":"","declarations":[],"spell":"54:7-54:13|0|3|2","extent":"54:3-54:28|0|3|0","type":3,"uses":["56:16-56:22|0|3|12"],"kind":13,"storage":1},{"id":1,"usr":17159890401613153385,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["54:16-54:28|0|3|12","55:3-55:15|0|3|20"],"kind":0,"storage":0},{"id":2,"usr":3879034622736481161,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["55:18-55:28|0|3|12","56:3-56:13|0|3|20"],"kind":0,"storage":0},{"id":3,"usr":16164075987488859769,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["61:7-61:25|1|3|12","67:3-67:21|2|3|20","74:3-74:21|5|3|20"],"kind":0,"storage":0},{"id":4,"usr":17792525124006105850,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["62:12-62:19|1|3|12","68:3-68:10|2|3|20","75:9-75:16|5|3|20","127:31-127:38|6|3|12","129:43-129:50|6|3|12","485:30-485:37|6|3|12","513:30-513:37|6|3|12","515:43-515:50|6|3|12","528:30-528:37|6|3|12","530:43-530:50|6|3|12","665:42-665:49|30|3|12"],"kind":0,"storage":0},{"id":5,"usr":9634991994465541350,"detailed_name":"const std::string &filename","short_name_offset":19,"short_name_size":8,"hover":"","comments":"","declarations":[],"spell":"65:58-65:66|2|3|2","extent":"65:38-65:66|2|3|0","type":4,"uses":["68:25-68:33|2|3|4"],"kind":253,"storage":1},{"id":6,"usr":10560971518668646525,"detailed_name":"int generateHalfEdges","short_name_offset":4,"short_name_size":17,"hover":"","comments":"","declarations":[],"spell":"65:72-65:89|2|3|2","extent":"65:68-65:89|2|3|0","type":3,"uses":["69:8-69:25|2|3|12"],"kind":253,"storage":1},{"id":7,"usr":15756769739936734392,"detailed_name":"int *numOrientationFlips_","short_name_offset":5,"short_name_size":20,"hover":"","comments":"","declarations":[],"spell":"65:97-65:117|2|3|2","extent":"65:91-65:117|2|3|0","type":3,"uses":["69:27-69:47|2|3|12"],"kind":253,"storage":1},{"id":8,"usr":17006451995434762204,"detailed_name":"int verbose","short_name_offset":4,"short_name_size":7,"hover":"","comments":"","declarations":[],"spell":"65:123-65:130|2|3|2","extent":"65:119-65:130|2|3|0","type":3,"uses":["68:51-68:58|2|3|12","69:49-69:56|2|3|12"],"kind":253,"storage":1},{"id":9,"usr":18022059812286155124,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["68:44-68:49|2|3|4"],"kind":0,"storage":0},{"id":10,"usr":510753827871175078,"detailed_name":"ObjMesh *objMesh","short_name_offset":9,"short_name_size":7,"hover":"","comments":"","declarations":[],"spell":"72:48-72:55|5|3|2","extent":"72:38-72:55|5|3|0","type":5,"uses":["75:19-75:26|5|3|12"],"kind":253,"storage":1},{"id":11,"usr":7971985586419177261,"detailed_name":"int generateHalfEdges","short_name_offset":4,"short_name_size":17,"hover":"","comments":"","declarations":[],"spell":"72:61-72:78|5|3|2","extent":"72:57-72:78|5|3|0","type":3,"uses":["76:8-76:25|5|3|12"],"kind":253,"storage":1},{"id":12,"usr":2541203062341755150,"detailed_name":"int *numOrientationFlips_","short_name_offset":5,"short_name_size":20,"hover":"","comments":"","declarations":[],"spell":"72:86-72:106|5|3|2","extent":"72:80-72:106|5|3|0","type":3,"uses":["76:27-76:47|5|3|12"],"kind":253,"storage":1},{"id":13,"usr":16006515081365743318,"detailed_name":"int verbose","short_name_offset":4,"short_name_size":7,"hover":"","comments":"","declarations":[],"spell":"72:112-72:119|5|3|2","extent":"72:108-72:119|5|3|0","type":3,"uses":["76:49-76:56|5|3|12"],"kind":253,"storage":1},{"id":14,"usr":5419762352873395152,"detailed_name":"int generateHalfEdges","short_name_offset":4,"short_name_size":17,"hover":"","comments":"","declarations":[],"spell":"79:34-79:51|4|3|2","extent":"79:30-79:51|4|3|0","type":3,"uses":["81:7-81:24|4|3|12"],"kind":253,"storage":1},{"id":15,"usr":12983229326084239639,"detailed_name":"int *numOrientationFlips_","short_name_offset":5,"short_name_size":20,"hover":"","comments":"","declarations":[],"spell":"79:59-79:79|4|3|2","extent":"79:53-79:79|4|3|0","type":3,"uses":["86:9-86:29|4|3|12","87:8-87:28|4|3|12"],"kind":253,"storage":1},{"id":16,"usr":1053202570369630942,"detailed_name":"int verbose","short_name_offset":4,"short_name_size":7,"hover":"","comments":"","declarations":[],"spell":"79:85-79:92|4|3|2","extent":"79:81-79:92|4|3|0","type":3,"uses":["84:61-84:68|4|3|12"],"kind":253,"storage":1},{"id":17,"usr":5915811256764775528,"detailed_name":"int numOrientationFlips","short_name_offset":4,"short_name_size":19,"hover":"int numOrientationFlips = GenerateHalfEdgeDataStructure(verbose)","comments":"TODO: culprit","declarations":[],"spell":"84:9-84:28|4|3|2","extent":"84:5-84:69|4|3|0","type":3,"uses":["87:31-87:50|4|3|12","89:9-89:28|4|3|12"],"kind":13,"storage":1},{"id":18,"usr":4324786125775030666,"detailed_name":"int verbose","short_name_offset":4,"short_name_size":7,"hover":"","comments":"","declarations":[],"spell":"112:58-112:65|6|3|2","extent":"112:54-112:65|6|3|0","type":3,"uses":["131:9-131:16|6|3|12","143:13-143:20|6|3|12","149:13-149:20|6|3|12","189:7-189:14|6|3|12","461:7-461:14|6|3|12","467:7-467:14|6|3|12","509:9-509:16|6|3|12","586:7-586:14|6|3|12"],"kind":253,"storage":1},{"id":19,"usr":3538009227229349391,"detailed_name":"int coutCounter","short_name_offset":4,"short_name_size":11,"hover":"int coutCounter = 0","comments":"typedef std::vector<ObjMesh::Group> SGroup;","declarations":[],"spell":"125:7-125:18|6|3|2","extent":"125:3-125:22|6|3|0","type":3,"uses":["141:11-141:22|6|3|12","145:9-145:20|6|3|28","147:11-147:22|6|3|12","151:9-151:20|6|3|28"],"kind":13,"storage":1},{"id":20,"usr":18270546961061311570,"detailed_name":"unsigned int i","short_name_offset":13,"short_name_size":1,"hover":"unsigned int i = 0","comments":"","declarations":[],"spell":"127:20-127:21|6|3|2","extent":"127:7-127:25|6|3|0","type":6,"uses":["127:27-127:28|6|3|12","127:56-127:57|6|3|28","129:67-129:68|-1|1|4","161:215-161:216|-1|1|4"],"kind":13,"storage":1},{"id":21,"usr":10626498025401174887,"detailed_name":"const ObjMesh::Group *currentGroup","short_name_offset":22,"short_name_size":12,"hover":"const ObjMesh::Group *currentGroup = objMesh->getGroupHandle(i)","comments":"","declarations":[],"spell":"129:28-129:40|6|3|2","extent":"129:5-129:69|6|3|0","type":7,"uses":["137:42-137:54|6|3|12","139:28-139:40|-1|1|4"],"kind":13,"storage":1},{"id":22,"usr":1611782560361365207,"detailed_name":"unsigned int iFace","short_name_offset":13,"short_name_size":5,"hover":"unsigned int iFace = 0","comments":"","declarations":[],"spell":"137:23-137:28|6|3|2","extent":"137:10-137:32|6|3|0","type":6,"uses":["137:34-137:39|6|3|12","137:73-137:78|6|3|28","139:50-139:55|-1|1|4","161:218-161:223|-1|1|4"],"kind":13,"storage":1},{"id":23,"usr":11659480990133404867,"detailed_name":"ObjMesh::Face face","short_name_offset":14,"short_name_size":4,"hover":"ObjMesh::Face face = currentGroup->getFace(iFace)","comments":"get face whose number is iFace","declarations":[],"spell":"139:21-139:25|6|3|2","extent":"139:7-139:56|6|3|0","type":8,"uses":["144:24-144:28|6|3|4","156:49-156:53|6|3|4","160:54-160:58|-1|1|4","161:49-161:53|-1|1|4","161:93-161:97|-1|1|4","161:124-161:128|-1|1|4","161:192-161:196|-1|1|4"],"kind":13,"storage":1},{"id":24,"usr":17375545165413019582,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["144:16-144:20|6|3|4","150:11-150:15|6|3|4","192:10-192:14|6|3|4"],"kind":0,"storage":0},{"id":25,"usr":13606089325887835774,"detailed_name":"unsigned int edgesSoFar","short_name_offset":13,"short_name_size":10,"hover":"","comments":"","declarations":[],"spell":"154:20-154:30|6|3|2","extent":"154:7-154:30|6|3|0","type":6,"uses":["160:24-160:34|-1|1|4","161:27-161:37|-1|1|4"],"kind":13,"storage":1},{"id":26,"usr":17029977878637621656,"detailed_name":"unsigned int iVertex","short_name_offset":13,"short_name_size":7,"hover":"unsigned int iVertex = 0","comments":"","declarations":[],"spell":"156:26-156:33|6|3|2","extent":"156:13-156:37|6|3|0","type":6,"uses":["156:39-156:46|6|3|12","156:74-156:81|6|3|28","160:39-160:46|-1|1|4","161:40-161:47|-1|1|4","161:64-161:71|-1|1|4","161:109-161:116|-1|1|4","161:167-161:174|-1|1|4","161:177-161:184|-1|1|4"],"kind":13,"storage":1},{"id":27,"usr":5564444303522408856,"detailed_name":"int nextEdge","short_name_offset":4,"short_name_size":8,"hover":"int nextEdge = edgesSoFar + ((iVertex + 1) % face.getNumVertices())","comments":"create a half edge for each edge, store -1 for half-edge adjacent edge for now\nindex vertices starting from 0","declarations":[],"spell":"160:13-160:21|6|3|2","extent":"160:9-160:76|6|3|0","type":3,"uses":["161:229-161:237|-1|1|4"],"kind":13,"storage":1},{"id":28,"usr":13649394175795064600,"detailed_name":"ObjMeshOrientable::HalfEdge halfEdge","short_name_offset":28,"short_name_size":8,"hover":"ObjMeshOrientable::HalfEdge halfEdge(edgesSoFar + iVertex, face.getVertex(iVertex).getPositionIndex(), face.getVertex((iVertex + 1) % face.getNumVertices()).getPositionIndex(), iVertex, (iVertex + 1) % face.getNumVertices(), i, iFace, -1, nextEdge)","comments":"","declarations":[],"spell":"161:18-161:26|6|3|2","extent":"161:9-161:238|6|3|0","type":1,"uses":[],"kind":13,"storage":1},{"id":29,"usr":2089146024560713899,"detailed_name":"BinaryTree edges","short_name_offset":11,"short_name_size":5,"hover":"","comments":"","declarations":[],"spell":"198:14-198:19|6|3|2","extent":"198:3-198:19|6|3|0","type":9,"uses":[],"kind":13,"storage":1},{"id":30,"usr":1137833281321047963,"detailed_name":"int marks","short_name_offset":4,"short_name_size":5,"hover":"","comments":"generate marks for all the edges","declarations":[],"spell":"306:20-306:25|6|3|2","extent":"306:3-306:25|6|3|0","type":3,"uses":[],"kind":13,"storage":1},{"id":31,"usr":2991292536876656385,"detailed_name":"int queue","short_name_offset":4,"short_name_size":5,"hover":"","comments":"initialize queue","declarations":[],"spell":"309:17-309:22|6|3|2","extent":"309:3-309:22|6|3|0","type":3,"uses":[],"kind":13,"storage":1},{"id":32,"usr":17174337887074734603,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["311:3-311:22|6|3|20","332:7-332:26|6|3|28","657:3-657:22|29|3|20","657:33-657:52|29|3|12"],"kind":0,"storage":0},{"id":33,"usr":10413447093089374079,"detailed_name":"int numOrientationFlips","short_name_offset":4,"short_name_size":19,"hover":"int numOrientationFlips = 0","comments":"","declarations":[],"spell":"312:7-312:26|6|3|2","extent":"312:3-312:30|6|3|0","type":3,"uses":["462:83-462:102|6|3|12","595:10-595:29|6|3|12"],"kind":13,"storage":1},{"id":34,"usr":15830552845491897011,"detailed_name":"unsigned int unmarkedEdge","short_name_offset":13,"short_name_size":12,"hover":"","comments":"find the first un-marked edge and queue it","declarations":[],"spell":"317:18-317:30|6|3|2","extent":"317:5-317:30|6|3|0","type":6,"uses":[],"kind":13,"storage":1},{"id":35,"usr":1764873172493500973,"detailed_name":"int numIsolatedVertices","short_name_offset":4,"short_name_size":19,"hover":"int numIsolatedVertices = 0","comments":"if vertex is on the boundary, rotate the edge until it is an incoming boundary edge\nrotate edge until it is either on the boundary, or we come around to the same edge","declarations":[],"spell":"484:7-484:26|6|3|2","extent":"484:3-484:30|6|3|0","type":3,"uses":["489:7-489:26|6|3|28","508:7-508:26|6|3|12","510:59-510:78|6|3|12"],"kind":13,"storage":1},{"id":36,"usr":13603085413765714543,"detailed_name":"unsigned int i","short_name_offset":13,"short_name_size":1,"hover":"unsigned int i=0","comments":"","declarations":[],"spell":"485:21-485:22|6|3|2","extent":"485:8-485:24|6|3|0","type":6,"uses":["485:26-485:27|6|3|12","485:57-485:58|6|3|28","487:26-487:27|6|3|12","492:37-492:38|-1|1|4"],"kind":13,"storage":1},{"id":37,"usr":14548222360493379824,"detailed_name":"ObjMeshOrientable::HalfEdge *loop","short_name_offset":29,"short_name_size":4,"hover":"ObjMeshOrientable::HalfEdge *loop = &edgeAtVertex(i)","comments":"","declarations":[],"spell":"492:16-492:20|6|3|2","extent":"492:5-492:39|6|3|0","type":1,"uses":["493:24-493:28|-1|1|4","496:11-496:15|6|3|12","502:7-502:11|6|3|20","502:42-502:46|6|3|12","504:13-504:17|6|3|12"],"kind":13,"storage":1},{"id":38,"usr":4059597517486021659,"detailed_name":"ObjMeshOrientable::HalfEdge *start","short_name_offset":29,"short_name_size":5,"hover":"ObjMeshOrientable::HalfEdge *start = loop","comments":"","declarations":[],"spell":"493:16-493:21|6|3|2","extent":"493:5-493:28|6|3|0","type":1,"uses":["504:22-504:27|6|3|12"],"kind":13,"storage":1},{"id":39,"usr":16342209398191577796,"detailed_name":"unsigned int i","short_name_offset":13,"short_name_size":1,"hover":"unsigned int i=0","comments":"build the cache for faces, first reset to -1","declarations":[],"spell":"513:21-513:22|6|3|2","extent":"513:8-513:24|6|3|0","type":6,"uses":["513:26-513:27|6|3|12","513:55-513:56|6|3|28","515:67-515:68|-1|1|4"],"kind":13,"storage":1},{"id":40,"usr":10489742965179747042,"detailed_name":"const ObjMesh::Group *currentGroup","short_name_offset":22,"short_name_size":12,"hover":"const ObjMesh::Group *currentGroup = objMesh->getGroupHandle(i)","comments":"","declarations":[],"spell":"515:28-515:40|6|3|2","extent":"515:5-515:69|6|3|0","type":7,"uses":["518:32-518:44|6|3|12"],"kind":13,"storage":1},{"id":41,"usr":3447519632481754671,"detailed_name":"int dataForThisGroup","short_name_offset":4,"short_name_size":16,"hover":"","comments":"","declarations":[],"spell":"516:22-516:38|6|3|2","extent":"516:5-516:38|6|3|0","type":3,"uses":[],"kind":13,"storage":1},{"id":42,"usr":3273006901632060608,"detailed_name":"unsigned int j","short_name_offset":13,"short_name_size":1,"hover":"unsigned int j=0","comments":"","declarations":[],"spell":"518:23-518:24|6|3|2","extent":"518:10-518:26|6|3|0","type":6,"uses":["518:28-518:29|6|3|12","518:61-518:62|6|3|28"],"kind":13,"storage":1},{"id":43,"usr":7859181581751806877,"detailed_name":"unsigned int i","short_name_offset":13,"short_name_size":1,"hover":"unsigned int i=0","comments":"sanity check: none of the face entries should be -1","declarations":[],"spell":"528:21-528:22|6|3|2","extent":"528:8-528:24|6|3|0","type":6,"uses":["528:26-528:27|6|3|12","528:55-528:56|6|3|28","530:67-530:68|-1|1|4"],"kind":13,"storage":1},{"id":44,"usr":16764961909945582888,"detailed_name":"const ObjMesh::Group *currentGroup","short_name_offset":22,"short_name_size":12,"hover":"const ObjMesh::Group *currentGroup = objMesh->getGroupHandle(i)","comments":"","declarations":[],"spell":"530:28-530:40|6|3|2","extent":"530:5-530:69|6|3|0","type":7,"uses":["531:32-531:44|6|3|12"],"kind":13,"storage":1},{"id":45,"usr":499595073015147395,"detailed_name":"unsigned int j","short_name_offset":13,"short_name_size":1,"hover":"unsigned int j=0","comments":"","declarations":[],"spell":"531:23-531:24|6|3|2","extent":"531:10-531:26|6|3|0","type":6,"uses":["531:28-531:29|6|3|12","531:61-531:62|6|3|28"],"kind":13,"storage":1},{"id":46,"usr":15005505544851988335,"detailed_name":"ObjMeshOrientable::HalfEdge &halfedge","short_name_offset":29,"short_name_size":8,"hover":"","comments":"","declarations":[],"spell":"600:76-600:84|23|3|2","extent":"600:65-600:84|23|3|0","type":1,"uses":["602:22-602:30|23|3|132","603:29-603:37|23|3|4"],"kind":253,"storage":1},{"id":47,"usr":10786858974081733324,"detailed_name":"ObjMeshOrientable::HalfEdge *loop","short_name_offset":29,"short_name_size":4,"hover":"ObjMeshOrientable::HalfEdge *loop = &halfedge","comments":"","declarations":[],"spell":"602:14-602:18|23|3|2","extent":"602:3-602:30|23|3|0","type":1,"uses":["603:20-603:24|23|3|12","604:5-604:9|23|3|20","604:24-604:28|23|3|12","606:26-606:30|-1|1|4"],"kind":13,"storage":1},{"id":48,"usr":6297813013557092515,"detailed_name":"ObjMeshOrientable::HalfEdge &prevEdge","short_name_offset":29,"short_name_size":8,"hover":"ObjMeshOrientable::HalfEdge &prevEdge = *loop","comments":"","declarations":[],"spell":"606:14-606:22|23|3|2","extent":"606:3-606:30|23|3|0","type":1,"uses":["608:10-608:18|23|3|4"],"kind":13,"storage":1},{"id":49,"usr":4782666807855045326,"detailed_name":"ObjMeshOrientable::HalfEdge &halfedge","short_name_offset":29,"short_name_size":8,"hover":"","comments":"","declarations":[],"spell":"616:72-616:80|28|3|2","extent":"616:61-616:80|28|3|0","type":1,"uses":["618:22-618:30|28|3|132"],"kind":253,"storage":1},{"id":50,"usr":2193749742833295486,"detailed_name":"int &flag","short_name_offset":5,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"616:88-616:92|28|3|2","extent":"616:82-616:92|28|3|0","type":3,"uses":["623:5-623:9|28|3|20","630:5-630:9|28|3|20"],"kind":253,"storage":1},{"id":51,"usr":8208938625833164199,"detailed_name":"ObjMeshOrientable::HalfEdge *loop","short_name_offset":29,"short_name_size":4,"hover":"ObjMeshOrientable::HalfEdge *loop = &halfedge","comments":"","declarations":[],"spell":"618:14-618:18|28|3|2","extent":"618:3-618:30|28|3|0","type":1,"uses":["619:3-619:7|28|3|20","619:22-619:26|28|3|12","621:7-621:11|28|3|12","625:26-625:30|-1|1|4","631:5-631:9|28|3|20","631:28-631:32|28|3|12","633:26-633:30|-1|1|4"],"kind":13,"storage":1},{"id":52,"usr":10999470290354740655,"detailed_name":"ObjMeshOrientable::HalfEdge &result","short_name_offset":29,"short_name_size":6,"hover":"ObjMeshOrientable::HalfEdge &result = *loop","comments":"return boundary edge pointing away from the vertex (there is no corresponding edge pointing into the vertex)","declarations":[],"spell":"625:16-625:22|28|3|2","extent":"625:5-625:30|28|3|0","type":1,"uses":["626:12-626:18|28|3|4"],"kind":13,"storage":1},{"id":53,"usr":7432770101151549143,"detailed_name":"ObjMeshOrientable::HalfEdge &result","short_name_offset":29,"short_name_size":6,"hover":"ObjMeshOrientable::HalfEdge &result = *loop","comments":"return edge pointing into the vertex","declarations":[],"spell":"633:16-633:22|28|3|2","extent":"633:5-633:30|28|3|0","type":1,"uses":["634:12-634:18|28|3|4"],"kind":13,"storage":1},{"id":54,"usr":648255660822231611,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["649:3-649:15|26|3|20","660:3-660:15|29|3|20","660:26-660:38|29|3|12"],"kind":0,"storage":0},{"id":55,"usr":17563800300465806213,"detailed_name":"ObjMeshOrientable *source","short_name_offset":19,"short_name_size":6,"hover":"","comments":"","declarations":[],"spell":"652:70-652:76|29|3|2","extent":"652:50-652:76|29|3|0","type":2,"uses":["657:25-657:31|29|3|12","660:18-660:24|29|3|12"],"kind":253,"storage":1},{"id":56,"usr":8210860397655563231,"detailed_name":"ObjMesh *outputObjMesh","short_name_offset":9,"short_name_size":13,"hover":"ObjMesh *outputObjMesh = new ObjMesh(*objMesh)","comments":"","declarations":[],"spell":"665:13-665:26|30|3|2","extent":"665:3-665:50|30|3|0","type":5,"uses":["667:29-667:42|30|3|12","669:54-669:67|-1|1|4","692:10-692:23|30|3|12"],"kind":13,"storage":1},{"id":57,"usr":5480410090937335407,"detailed_name":"unsigned int i","short_name_offset":13,"short_name_size":1,"hover":"unsigned int i=0","comments":"over all groups","declarations":[],"spell":"667:20-667:21|30|3|2","extent":"667:7-667:23|30|3|0","type":6,"uses":["667:25-667:26|30|3|12","667:60-667:61|30|3|28","669:84-669:85|-1|1|4","679:34-679:35|-1|1|4"],"kind":13,"storage":1},{"id":58,"usr":3922460294586751486,"detailed_name":"ObjMesh::Group *groupHandle","short_name_offset":16,"short_name_size":11,"hover":"ObjMesh::Group *groupHandle = (ObjMesh::Group*) outputObjMesh->getGroupHandle(i)","comments":"","declarations":[],"spell":"669:22-669:33|30|3|2","extent":"669:5-669:86|30|3|0","type":7,"uses":["670:32-670:43|30|3|12","672:36-672:47|-1|1|4","688:9-688:20|30|3|12"],"kind":13,"storage":1},{"id":59,"usr":17948393741324765078,"detailed_name":"unsigned int j","short_name_offset":13,"short_name_size":1,"hover":"unsigned int j=0","comments":"over all faces","declarations":[],"spell":"670:23-670:24|30|3|2","extent":"670:10-670:26|30|3|0","type":6,"uses":["670:28-670:29|30|3|12","670:60-670:61|30|3|28","672:63-672:64|-1|1|4","679:37-679:38|-1|1|4","688:34-688:35|30|3|12"],"kind":13,"storage":1},{"id":60,"usr":7188421043619342736,"detailed_name":"const ObjMesh::Face *face","short_name_offset":21,"short_name_size":4,"hover":"const ObjMesh::Face *face = groupHandle->getFaceHandle(j)","comments":"","declarations":[],"spell":"672:29-672:33|30|3|2","extent":"672:7-672:65|30|3|0","type":8,"uses":["673:11-673:15|30|3|12","682:36-682:40|-1|1|4","687:53-687:57|30|3|12"],"kind":13,"storage":1},{"id":61,"usr":11864373595836698216,"detailed_name":"ObjMeshOrientable::HalfEdge edge","short_name_offset":28,"short_name_size":4,"hover":"ObjMeshOrientable::HalfEdge edge = edgeAtFace(i, j)","comments":"","declarations":[],"spell":"679:16-679:20|30|3|2","extent":"679:7-679:39|30|3|0","type":1,"uses":["683:30-683:34|30|3|4","684:9-684:13|30|3|20","684:25-684:29|30|3|4","687:25-687:29|30|3|4"],"kind":13,"storage":1},{"id":62,"usr":16454934187031072355,"detailed_name":"unsigned int startPosition","short_name_offset":13,"short_name_size":13,"hover":"unsigned int startPosition = face->getVertex(0).getPositionIndex()","comments":"loop until edge is first edge","declarations":[],"spell":"682:20-682:33|30|3|2","extent":"682:7-682:73|30|3|0","type":6,"uses":["683:58-683:71|30|3|12"],"kind":13,"storage":1},{"id":63,"usr":291038054068649371,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["86:33-86:37|-1|1|4"],"kind":0,"storage":0}]}