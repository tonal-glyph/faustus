15
{"last_modification_time":1548168586,"language":2,"import_file":"/home/dark/proj/faust/architecture/api/DspFaust.cpp","args":["clang++","-working-directory=/home/dark/proj/faust/","/home/dark/proj/faust/architecture/api/DspFaust.cpp","-resource-dir=/usr/lib/clang/7.0.1","-Wno-unknown-warning-option","-fparse-all-comments","-isystem/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/8.2.1/../../../../include/c++/8.2.1","-isystem/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/8.2.1/../../../../include/c++/8.2.1/x86_64-pc-linux-gnu","-isystem/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/8.2.1/../../../../include/c++/8.2.1/backward","-isystem/usr/local/include","-isystem/usr/lib/clang/7.0.1/include","-isystem/usr/include"],"includes":[{"line":19,"resolved_path":"/usr/include/c++/8.2.1/cmath"},{"line":20,"resolved_path":"/usr/include/c++/8.2.1/cstring"},{"line":22,"resolved_path":"/usr/local/include/faust/misc.h"},{"line":23,"resolved_path":"/usr/local/include/faust/gui/UI.h"},{"line":24,"resolved_path":"/usr/local/include/faust/gui/JSONUIDecoder.h"},{"line":25,"resolved_path":"/usr/local/include/faust/dsp/dsp.h"},{"line":26,"resolved_path":"/usr/local/include/faust/dsp/dsp-adapter.h"},{"line":27,"resolved_path":"/usr/local/include/faust/gui/meta.h"},{"line":59,"resolved_path":"/usr/local/include/faust/dsp/faust-poly-engine.h"},{"line":119,"resolved_path":"/home/dark/proj/faust/architecture/api/DspFaust.h"}],"dependencies":["/usr/include/c++/8.2.1/cmath","/usr/include/c++/8.2.1/x86_64-pc-linux-gnu/bits/c++config.h","/usr/include/c++/8.2.1/x86_64-pc-linux-gnu/bits/os_defines.h","/usr/include/features.h","/usr/include/sys/cdefs.h","/usr/include/gnu/stubs.h","/usr/include/c++/8.2.1/bits/cpp_type_traits.h","/usr/include/c++/8.2.1/ext/type_traits.h","/usr/include/math.h","/usr/include/bits/libc-header-start.h","/usr/include/bits/types.h","/usr/include/bits/math-vector.h","/usr/include/bits/floatn.h","/usr/include/bits/floatn-common.h","/usr/include/c++/8.2.1/bits/std_abs.h","/usr/include/stdlib.h","/usr/include/bits/types/locale_t.h","/usr/include/sys/types.h","/usr/include/bits/types/clock_t.h","/usr/include/bits/types/clockid_t.h","/usr/include/bits/types/time_t.h","/usr/include/bits/types/timer_t.h","/usr/include/bits/stdint-intn.h","/usr/include/endian.h","/usr/include/bits/byteswap.h","/usr/include/bits/uintn-identity.h","/usr/include/sys/select.h","/usr/include/bits/select.h","/usr/include/bits/types/sigset_t.h","/usr/include/bits/types/struct_timeval.h","/usr/include/bits/types/struct_timespec.h","/usr/include/bits/pthreadtypes.h","/usr/include/bits/thread-shared-types.h","/usr/include/bits/pthreadtypes-arch.h","/usr/include/alloca.h","/usr/include/c++/8.2.1/cstring","/usr/include/string.h","/usr/include/strings.h","/usr/local/include/faust/misc.h","/usr/include/c++/8.2.1/algorithm","/usr/include/c++/8.2.1/utility","/usr/include/c++/8.2.1/bits/stl_pair.h","/usr/include/c++/8.2.1/bits/move.h","/usr/include/c++/8.2.1/bits/concept_check.h","/usr/include/c++/8.2.1/type_traits","/usr/include/c++/8.2.1/initializer_list","/usr/include/c++/8.2.1/bits/stl_algobase.h","/usr/include/c++/8.2.1/bits/functexcept.h","/usr/include/c++/8.2.1/ext/numeric_traits.h","/usr/include/c++/8.2.1/bits/stl_iterator_base_types.h","/usr/include/c++/8.2.1/bits/stl_iterator_base_funcs.h","/usr/include/c++/8.2.1/bits/stl_iterator.h","/usr/include/c++/8.2.1/bits/ptr_traits.h","/usr/include/c++/8.2.1/debug/debug.h","/usr/include/c++/8.2.1/bits/stl_algo.h","/usr/include/c++/8.2.1/cstdlib","/usr/include/c++/8.2.1/bits/algorithmfwd.h","/usr/include/c++/8.2.1/bits/stl_heap.h","/usr/include/c++/8.2.1/bits/stl_tempbuf.h","/usr/include/c++/8.2.1/bits/stl_construct.h","/usr/include/c++/8.2.1/new","/usr/include/c++/8.2.1/exception","/usr/include/c++/8.2.1/bits/exception.h","/usr/include/c++/8.2.1/bits/exception_ptr.h","/usr/include/c++/8.2.1/bits/cxxabi_init_exception.h","/usr/lib/clang/7.0.1/include/stddef.h","/usr/include/c++/8.2.1/typeinfo","/usr/include/c++/8.2.1/bits/hash_bytes.h","/usr/include/c++/8.2.1/bits/nested_exception.h","/usr/include/c++/8.2.1/ext/alloc_traits.h","/usr/include/c++/8.2.1/bits/alloc_traits.h","/usr/include/c++/8.2.1/bits/memoryfwd.h","/usr/include/c++/8.2.1/bits/uniform_int_dist.h","/usr/include/c++/8.2.1/limits","/usr/include/c++/8.2.1/map","/usr/include/c++/8.2.1/bits/stl_tree.h","/usr/include/c++/8.2.1/bits/allocator.h","/usr/include/c++/8.2.1/x86_64-pc-linux-gnu/bits/c++allocator.h","/usr/include/c++/8.2.1/ext/new_allocator.h","/usr/include/c++/8.2.1/bits/stl_function.h","/usr/include/c++/8.2.1/ext/aligned_buffer.h","/usr/include/c++/8.2.1/bits/stl_map.h","/usr/include/c++/8.2.1/tuple","/usr/include/c++/8.2.1/array","/usr/include/c++/8.2.1/stdexcept","/usr/include/c++/8.2.1/string","/usr/include/c++/8.2.1/bits/stringfwd.h","/usr/include/c++/8.2.1/bits/char_traits.h","/usr/include/c++/8.2.1/bits/postypes.h","/usr/include/c++/8.2.1/cwchar","/usr/include/wchar.h","/usr/include/bits/types/mbstate_t.h","/usr/include/c++/8.2.1/cstdint","/usr/lib/clang/7.0.1/include/stdint.h","/usr/include/stdint.h","/usr/include/bits/stdint-uintn.h","/usr/include/c++/8.2.1/bits/localefwd.h","/usr/include/c++/8.2.1/x86_64-pc-linux-gnu/bits/c++locale.h","/usr/include/c++/8.2.1/clocale","/usr/include/locale.h","/usr/include/c++/8.2.1/iosfwd","/usr/include/c++/8.2.1/cctype","/usr/include/ctype.h","/usr/include/c++/8.2.1/bits/ostream_insert.h","/usr/include/c++/8.2.1/bits/range_access.h","/usr/include/c++/8.2.1/bits/basic_string.h","/usr/include/c++/8.2.1/ext/atomicity.h","/usr/include/c++/8.2.1/x86_64-pc-linux-gnu/bits/gthr.h","/usr/include/c++/8.2.1/x86_64-pc-linux-gnu/bits/gthr-default.h","/usr/include/pthread.h","/usr/include/sched.h","/usr/include/bits/sched.h","/usr/include/time.h","/usr/include/bits/time.h","/usr/include/bits/timex.h","/usr/include/bits/types/struct_tm.h","/usr/include/bits/types/struct_itimerspec.h","/usr/include/bits/setjmp.h","/usr/include/c++/8.2.1/ext/string_conversions.h","/usr/include/c++/8.2.1/cstdio","/usr/include/stdio.h","/usr/include/bits/types/__fpos_t.h","/usr/include/bits/types/__fpos64_t.h","/usr/include/bits/types/struct_FILE.h","/usr/include/bits/types/cookie_io_functions_t.h","/usr/include/c++/8.2.1/cerrno","/usr/include/errno.h","/usr/include/bits/errno.h","/usr/include/linux/errno.h","/usr/include/asm/errno.h","/usr/include/asm-generic/errno.h","/usr/include/c++/8.2.1/bits/functional_hash.h","/usr/include/c++/8.2.1/bits/basic_string.tcc","/usr/include/c++/8.2.1/bits/uses_allocator.h","/usr/include/c++/8.2.1/bits/invoke.h","/usr/include/c++/8.2.1/bits/stl_multimap.h","/usr/local/include/faust/gui/JSONUIDecoder.h","/usr/include/c++/8.2.1/vector","/usr/include/c++/8.2.1/bits/stl_uninitialized.h","/usr/include/c++/8.2.1/bits/stl_vector.h","/usr/include/c++/8.2.1/bits/stl_bvector.h","/usr/include/c++/8.2.1/sstream","/usr/include/c++/8.2.1/istream","/usr/include/c++/8.2.1/ios","/usr/include/c++/8.2.1/bits/ios_base.h","/usr/include/c++/8.2.1/bits/locale_classes.h","/usr/include/c++/8.2.1/system_error","/usr/include/c++/8.2.1/x86_64-pc-linux-gnu/bits/error_constants.h","/usr/include/c++/8.2.1/streambuf","/usr/include/c++/8.2.1/bits/basic_ios.h","/usr/include/c++/8.2.1/bits/locale_facets.h","/usr/include/c++/8.2.1/cwctype","/usr/include/wctype.h","/usr/include/bits/wctype-wchar.h","/usr/include/c++/8.2.1/bits/streambuf_iterator.h","/usr/include/c++/8.2.1/ostream","/usr/include/c++/8.2.1/bits/ostream.tcc","/usr/include/c++/8.2.1/bits/istream.tcc","/usr/local/include/faust/gui/SimpleParser.h","/usr/include/c++/8.2.1/fstream","/usr/include/c++/8.2.1/x86_64-pc-linux-gnu/bits/basic_file.h","/usr/include/c++/8.2.1/x86_64-pc-linux-gnu/bits/c++io.h","/usr/include/c++/8.2.1/bits/fstream.tcc","/usr/include/c++/8.2.1/iostream","/usr/local/include/faust/dsp/dsp.h","/usr/lib/clang/7.0.1/include/xmmintrin.h","/usr/lib/clang/7.0.1/include/mm_malloc.h","/usr/include/c++/8.2.1/stdlib.h","/usr/lib/clang/7.0.1/include/emmintrin.h","/usr/local/include/faust/dsp/dsp-adapter.h","/usr/local/include/faust/dsp/faust-poly-engine.h","/usr/include/c++/8.2.1/math.h","/usr/local/include/faust/audio/audio.h","/usr/include/c++/8.2.1/set","/usr/include/c++/8.2.1/bits/stl_set.h","/usr/include/c++/8.2.1/bits/stl_multiset.h","/usr/local/include/faust/gui/JSONUI.h","/usr/local/include/faust/gui/PathBuilder.h","/usr/local/include/faust/gui/APIUI.h","/usr/local/include/faust/gui/ValueConverter.h","/usr/include/assert.h","/usr/local/include/faust/gui/MidiUI.h","/usr/local/include/faust/gui/GUI.h","/usr/include/c++/8.2.1/list","/usr/include/c++/8.2.1/bits/stl_list.h","/usr/include/c++/8.2.1/bits/allocated_ptr.h","/usr/local/include/faust/gui/ring-buffer.h","/usr/local/include/faust/midi/midi.h","/usr/local/include/faust/dsp/poly-dsp.h","/usr/lib/clang/7.0.1/include/limits.h","/usr/include/limits.h","/usr/include/bits/posix1_lim.h","/usr/include/bits/local_lim.h","/usr/include/bits/xopen_lim.h","/usr/local/include/faust/dsp/dsp-combiner.h","/usr/local/include/faust/gui/MapUI.h","/usr/local/include/faust/dsp/proxy-dsp.h","/usr/include/bits/mathcalls-helper-functions.h","/usr/include/bits/mathcalls.h","/usr/include/bits/mathcalls-narrow.h","/usr/include/bits/iscanonical.h","/usr/include/bits/types/__locale_t.h","/usr/include/bits/types/__sigset_t.h","/usr/include/c++/8.2.1/bits/stl_relops.h","/usr/include/c++/8.2.1/bits/predefined_ops.h","/usr/lib/clang/7.0.1/include/__stddef_max_align_t.h","/usr/include/c++/8.2.1/backward/binders.h","/usr/lib/clang/7.0.1/include/stdarg.h","/usr/include/bits/types/wint_t.h","/usr/include/bits/types/__mbstate_t.h","/usr/include/bits/types/__FILE.h","/usr/include/bits/types/FILE.h","/usr/include/c++/8.2.1/bits/cxxabi_forced.h","/usr/include/bits/types/struct_sched_param.h","/usr/include/bits/cpu-set.h","/usr/include/c++/8.2.1/x86_64-pc-linux-gnu/bits/atomic_word.h","/usr/include/bits/sys_errlist.h","/usr/include/bits/types/error_t.h","/usr/local/include/faust/gui/meta.h","/usr/local/include/faust/gui/UI.h","/usr/include/c++/8.2.1/bits/vector.tcc","/usr/include/c++/8.2.1/bits/locale_classes.tcc","/usr/include/c++/8.2.1/bits/streambuf.tcc","/usr/include/c++/8.2.1/x86_64-pc-linux-gnu/bits/ctype_base.h","/usr/include/c++/8.2.1/x86_64-pc-linux-gnu/bits/ctype_inline.h","/usr/include/c++/8.2.1/bits/locale_facets.tcc","/usr/include/c++/8.2.1/bits/basic_ios.tcc","/usr/include/c++/8.2.1/bits/sstream.tcc","/usr/include/c++/8.2.1/bits/codecvt.h","/usr/lib/clang/7.0.1/include/mmintrin.h","/usr/include/c++/8.2.1/bits/list.tcc","/usr/local/include/faust/dsp/faust-engine.h","/home/dark/proj/faust/architecture/api/DspFaust.h","/usr/include/stdc-predef.h","/usr/include/bits/wordsize.h","/usr/include/gnu/stubs-64.h","/usr/include/c++/8.2.1/x86_64-pc-linux-gnu/bits/cpu_defines.h","/usr/include/bits/typesizes.h","/usr/include/bits/libm-simd-decl-stubs.h","/usr/include/bits/flt-eval-method.h","/usr/include/bits/fp-logb.h","/usr/include/bits/fp-fast.h","/usr/include/bits/waitflags.h","/usr/include/bits/waitstatus.h","/usr/include/bits/endian.h","/usr/include/bits/stdlib-float.h","/usr/include/c++/8.2.1/bits/exception_defines.h","/usr/include/c++/8.2.1/debug/assertions.h","/usr/include/bits/wchar.h","/usr/include/bits/locale.h","/usr/include/bits/stdio_lim.h","/usr/include/asm-generic/errno-base.h","/usr/lib/clang/7.0.1/include/float.h","/usr/include/linux/limits.h","/usr/include/bits/posix2_lim.h","/usr/include/bits/uio_lim.h"],"skipped_by_preprocessor":["36:1-38:7","66:1-87:7","93:1-102:7","104:1-114:7","116:1-118:7","128:1-138:6","150:1-174:7","178:1-206:7","212:1-226:6","230:1-250:7","252:1-265:7","270:1-272:7","273:1-275:7","276:1-278:7","280:1-282:7","287:1-289:7","290:1-294:7","300:1-302:7","303:1-305:7","311:1-327:6","502:1-520:7"],"types":[{"id":0,"usr":12165724529085397294,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[0,1],"instances":[],"uses":["122:11-122:14|-1|1|4","122:17-122:20|-1|1|4","123:11-123:14|-1|1|4"]},{"id":1,"usr":16829913665195702766,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["122:6-122:10|-1|1|4"]},{"id":2,"usr":5401847601697785946,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["122:1-122:4|-1|1|4","139:5-139:8|2|3|4","140:11-140:14|2|3|4"]},{"id":3,"usr":3587906309895659470,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["123:1-123:10|-1|1|4"]},{"id":4,"usr":3490980061013170351,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":["125:11-125:19|-1|1|4","145:11-145:19|-1|1|4","268:12-268:20|-1|1|4"],"bases":[],"derived":[],"types":[],"funcs":[2,6,7,5,9,10,12,14,15,17,19,21,23,25,27,29,31,33,35,37,39,41,43,45,47,49,51,53,55,57,59,61,63,65,67,69,71,73,75,77,79,81],"vars":[],"instances":[],"uses":["125:11-125:19|-1|1|4","125:1-125:9|-1|1|4","145:11-145:19|-1|1|4","145:1-145:9|-1|1|4","176:8-176:16|-1|1|4","210:6-210:14|-1|1|4","268:1-268:9|-1|1|4","285:6-285:14|-1|1|4","298:6-298:14|-1|1|4","309:6-309:14|-1|1|4","332:6-332:14|-1|1|4","337:15-337:23|-1|1|4","342:5-342:13|-1|1|4","347:15-347:23|-1|1|4","352:5-352:13|-1|1|4","357:6-357:14|-1|1|4","362:6-362:14|-1|1|4","367:13-367:21|-1|1|4","372:13-372:21|-1|1|4","377:5-377:13|-1|1|4","382:6-382:14|-1|1|4","387:6-387:14|-1|1|4","392:7-392:15|-1|1|4","397:7-397:15|-1|1|4","402:6-402:14|-1|1|4","407:6-407:14|-1|1|4","412:7-412:15|-1|1|4","417:7-417:15|-1|1|4","422:13-422:21|-1|1|4","427:13-427:21|-1|1|4","432:7-432:15|-1|1|4","437:7-437:15|-1|1|4","442:7-442:15|-1|1|4","447:7-447:15|-1|1|4","452:7-452:15|-1|1|4","457:7-457:15|-1|1|4","462:13-462:21|-1|1|4","467:13-467:21|-1|1|4","472:6-472:14|-1|1|4","477:6-477:14|-1|1|4","482:6-482:14|-1|1|4","487:6-487:14|-1|1|4","492:7-492:15|-1|1|4","497:5-497:13|-1|1|4"]},{"id":5,"usr":4283351316868325195,"detailed_name":"audio","short_name_offset":0,"short_name_size":5,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[2,9],"uses":["127:5-127:10|-1|1|4","176:1-176:6|-1|1|4","210:36-210:41|-1|1|4"]},{"id":6,"usr":7716466916310020827,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["140:16-140:25|-1|1|4"]},{"id":7,"usr":17,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[4,5,6,7,12,13,14,16,17,18,20,22,23,24,25,28,31,35,40,42,43,46,48,50,53,55,57,58,59,63,65,66,67],"uses":[]},{"id":8,"usr":1412586585224299744,"detailed_name":"dsp","short_name_offset":0,"short_name_size":3,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[8],"uses":["210:21-210:24|-1|1|4"]},{"id":9,"usr":7752526380943074086,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["227:23-227:38|-1|1|4"]},{"id":10,"usr":3,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[11],"uses":[]},{"id":11,"usr":13,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[15,26,30,32,38,45,47,49,51,52,54],"uses":[]},{"id":12,"usr":10,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[19,33,36,39,41,44],"uses":[]},{"id":13,"usr":22,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[21],"uses":[]},{"id":14,"usr":21,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[27,29,34,37,56,60,61,62,64,68,69,70],"uses":[]}],"funcs":[{"id":0,"usr":17078189568409052251,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["122:22-122:30|-1|1|292"],"callees":[]},{"id":1,"usr":7192831957859543961,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["123:16-123:29|-1|1|292"],"callees":[]},{"id":2,"usr":11684694716026855312,"detailed_name":"DspFaust::DspFaust()","short_name_offset":0,"short_name_size":8,"kind":9,"storage":1,"hover":"","comments":"--------------`DspFaust()`----------------\n Default constructor, to be used wih audio drivers\n/ that impose their sample rate and buffer size\n (like JACK and JUCE)\n\n----","declarations":[],"spell":"125:11-125:19|4|2|2","extent":"125:1-143:2|-1|1|0","declaring_type":4,"bases":[],"derived":[],"vars":[2],"uses":[],"callees":["139:15-139:17|3|3|36","140:11-140:27|4|3|292","142:5-142:9|5|3|36"]},{"id":3,"usr":16653654825786392098,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["139:15-139:17|2|3|36"],"callees":[]},{"id":4,"usr":7068909993607030569,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["140:11-140:27|2|3|292"],"callees":[]},{"id":5,"usr":6599136265164977173,"detailed_name":"void DspFaust::init(dsp *mono_dsp, audio *driver)","short_name_offset":15,"short_name_size":4,"kind":6,"storage":1,"hover":"","comments":"","declarations":[],"spell":"210:16-210:20|4|2|2","extent":"210:1-266:2|-1|1|0","declaring_type":4,"bases":[],"derived":[],"vars":[8,9],"uses":["142:5-142:9|2|3|36","147:5-147:9|6|3|36"],"callees":["227:23-227:56|8|3|292"]},{"id":6,"usr":15823415009364064670,"detailed_name":"DspFaust::DspFaust(int sample_rate, int buffer_size)","short_name_offset":0,"short_name_size":8,"kind":9,"storage":1,"hover":"","comments":"--------------`DspFaust(int SR, int BS)`----------------\n Constructor.\n\n #### Arguments\n\n * `SR`: sampling rate\n * `BS`: buffer size\n--------------------------------------------------------","declarations":[],"spell":"145:11-145:19|4|2|2","extent":"145:1-148:2|-1|1|0","declaring_type":4,"bases":[],"derived":[],"vars":[4,5],"uses":[],"callees":["147:5-147:9|5|3|36","147:16-147:28|7|3|36"]},{"id":7,"usr":4847363252295094368,"detailed_name":"audio *DspFaust::createDriver(int sample_rate, int buffer_size)","short_name_offset":17,"short_name_size":12,"kind":6,"storage":1,"hover":"","comments":"","declarations":[],"spell":"176:18-176:30|4|2|2","extent":"176:1-208:2|-1|1|0","declaring_type":4,"bases":[],"derived":[],"vars":[6,7],"uses":["147:16-147:28|6|3|36"],"callees":[]},{"id":8,"usr":2701617180827926076,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["227:23-227:56|5|3|292"],"callees":[]},{"id":9,"usr":2589300918931720192,"detailed_name":"DspFaust::~DspFaust() noexcept","short_name_offset":10,"short_name_size":9,"kind":6,"storage":1,"hover":"","comments":"No virtual destructor since DspFaust does not have any virtual methods and is not supposed to be subclassed","declarations":[],"spell":"268:11-268:20|4|2|2","extent":"268:1-283:2|-1|1|0","declaring_type":4,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":10,"usr":4356706849868435105,"detailed_name":"bool DspFaust::start()","short_name_offset":15,"short_name_size":5,"kind":6,"storage":1,"hover":"","comments":"---------------------`bool start()`---------------------\n Start the audio processing.\n\n Returns `true` if successful and `false` if not.\n--------------------------------------------------------","declarations":[],"spell":"285:16-285:21|4|2|2","extent":"285:1-296:2|-1|1|0","declaring_type":4,"bases":[],"derived":[],"vars":[],"uses":[],"callees":["295:22-295:27|11|3|36"]},{"id":11,"usr":6320125157230802227,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["295:22-295:27|10|3|36"],"callees":[]},{"id":12,"usr":5094520133552742199,"detailed_name":"void DspFaust::stop()","short_name_offset":15,"short_name_size":4,"kind":6,"storage":1,"hover":"","comments":"-----------------`void stop()`--------------------------\n Stop the audio processing. \n--------------------------------------------------------","declarations":[],"spell":"298:16-298:20|4|2|2","extent":"298:1-307:2|-1|1|0","declaring_type":4,"bases":[],"derived":[],"vars":[],"uses":[],"callees":["306:15-306:19|13|3|36"]},{"id":13,"usr":14142611379164557551,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["306:15-306:19|12|3|36"],"callees":[]},{"id":14,"usr":15689197430560538924,"detailed_name":"bool DspFaust::configureOSC(bool xmit, int inport, int outport, int errport, const char *address)","short_name_offset":15,"short_name_size":12,"kind":6,"storage":1,"hover":"","comments":"----`void configureOSC(bool xmit, int inport, int outport, int errport, const char* address)`---------------\n Change the OSC configuration\n\n #### Arguments\n\n * `xmit`: the xmit state (on/off)\n * `inport`: the input port number\n * `outport`: the output port number\n * `errport`: the error port number\n * `address`: the destination IP address\n--------------------------------------------------------","declarations":[],"spell":"309:16-309:28|4|2|2","extent":"309:1-330:2|-1|1|0","declaring_type":4,"bases":[],"derived":[],"vars":[11,12,13,14,15],"uses":[],"callees":[]},{"id":15,"usr":17104438810090010394,"detailed_name":"bool DspFaust::isRunning()","short_name_offset":15,"short_name_size":9,"kind":6,"storage":1,"hover":"","comments":"---------------------`bool isRunning()`-----------------\n Returns `true` if audio is running.\n--------------------------------------------------------","declarations":[],"spell":"332:16-332:25|4|2|2","extent":"332:1-335:2|-1|1|0","declaring_type":4,"bases":[],"derived":[],"vars":[],"uses":[],"callees":["334:22-334:31|16|3|36"]},{"id":16,"usr":13334497246946271144,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["334:22-334:31|15|3|36"],"callees":[]},{"id":17,"usr":3551852365125404255,"detailed_name":"unsigned long DspFaust::keyOn(int pitch, int velocity)","short_name_offset":24,"short_name_size":5,"kind":6,"storage":1,"hover":"","comments":"--------`long keyOn(int pitch, int velocity)`-----------\n Instantiate a new polyphonic voice. This method can\n only be used if the `[style:poly]` metadata is used in\n the Faust code or if the `-polyvoices` flag has been\n provided before compilation.\n\n `keyOn` will return 0 if the Faust object is not\n polyphonic or the address to the allocated voice as\n a `long` otherwise. This value can be used later with\n [`setVoiceParamValue`](#setvoiceparamvalue) or\n [`getVoiceParamValue`](#getvoiceparamvalue) to access\n the parameters of a specific voice.\n\n #### Arguments\n\n * `pitch`: MIDI note number (0-127)\n * `velocity`: MIDI velocity (0-127)\n--------------------------------------------------------","declarations":[],"spell":"337:25-337:30|4|2|2","extent":"337:1-340:2|-1|1|0","declaring_type":4,"bases":[],"derived":[],"vars":[16,17],"uses":[],"callees":["339:37-339:42|18|3|36"]},{"id":18,"usr":6598212169156484695,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["339:37-339:42|17|3|36"],"callees":[]},{"id":19,"usr":12808877263687393086,"detailed_name":"int DspFaust::keyOff(int pitch)","short_name_offset":14,"short_name_size":6,"kind":6,"storage":1,"hover":"","comments":"----------------`int keyOff(int pitch)`-----------------\n De-instantiate a polyphonic voice. This method can\n only be used if the `[style:poly]` metadata is used in\n the Faust code or if the `-nvoices` flag has been\n provided before compilation.\n\n `keyOff` will return 0 if the object is not polyphonic\n and 1 otherwise.\n\n #### Arguments\n\n * `pitch`: MIDI note number (0-127), should be the same\n as the one used for `keyOn`\n--------------------------------------------------------","declarations":[],"spell":"342:15-342:21|4|2|2","extent":"342:1-345:2|-1|1|0","declaring_type":4,"bases":[],"derived":[],"vars":[18],"uses":[],"callees":["344:22-344:28|20|3|36"]},{"id":20,"usr":4675260666419841262,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["344:22-344:28|19|3|36"],"callees":[]},{"id":21,"usr":10135871274029775907,"detailed_name":"unsigned long DspFaust::newVoice()","short_name_offset":24,"short_name_size":8,"kind":6,"storage":1,"hover":"","comments":"-------------------`long newVoice()`--------------------\n Instantiate a new polyphonic voice. This method can\n only be used if the `[style:poly]` metadata is used in\n the Faust code or if `-nvoices` flag has been\n provided before compilation.\n\n `newVoice` will return 0 if the Faust object is not\n polyphonic or the address to the allocated voice as\n a `long` otherwise. This value can be used later with\n `setVoiceParamValue`, `getVoiceParamValue` or\n `deleteVoice` to access the parameters of a specific\n voice.\n--------------------------------------------------------","declarations":[],"spell":"347:25-347:33|4|2|2","extent":"347:1-350:2|-1|1|0","declaring_type":4,"bases":[],"derived":[],"vars":[],"uses":[],"callees":["349:37-349:45|22|3|36"]},{"id":22,"usr":1566774319541387007,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["349:37-349:45|21|3|36"],"callees":[]},{"id":23,"usr":2265949224941444670,"detailed_name":"int DspFaust::deleteVoice(unsigned long voice)","short_name_offset":14,"short_name_size":11,"kind":6,"storage":1,"hover":"","comments":"---------`int deleteVoice(long voice)`------------------\n De-instantiate a polyphonic voice. This method can\n only be used if the `[style:poly]` metadata is used in\n the Faust code or if `-polyvoices` flag has been\n provided before compilation.\n\n `deleteVoice` will return 0 if the object is not polyphonic\n and 1 otherwise.\n\n #### Arguments\n\n * `voice`: the address of the voice given by `newVoice`\n--------------------------------------------------------","declarations":[],"spell":"352:15-352:26|4|2|2","extent":"352:1-355:2|-1|1|0","declaring_type":4,"bases":[],"derived":[],"vars":[19],"uses":[],"callees":["354:22-354:33|24|3|36"]},{"id":24,"usr":5798973897838371516,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["354:22-354:33|23|3|36"],"callees":[]},{"id":25,"usr":18419305604847959953,"detailed_name":"void DspFaust::allNotesOff()","short_name_offset":15,"short_name_size":11,"kind":6,"storage":1,"hover":"","comments":"-----------------`void allNotesOff()`----------------\n Gently terminates all the active voices. \n--------------------------------------------------------","declarations":[],"spell":"357:16-357:27|4|2|2","extent":"357:1-360:2|-1|1|0","declaring_type":4,"bases":[],"derived":[],"vars":[],"uses":[],"callees":["359:18-359:29|26|3|36"]},{"id":26,"usr":6148118840037343071,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["359:18-359:29|25|3|36"],"callees":[]},{"id":27,"usr":14082261526327254895,"detailed_name":"void DspFaust::propagateMidi(int count, double time, int type, int channel, int data1, int data2)","short_name_offset":15,"short_name_size":13,"kind":6,"storage":1,"hover":"","comments":"-------`void propagateMidi(int count, double time, int type, int channel, int data1, int data2)`--------\n Take a raw MIDI message and propagate it to the Faust\n DSP object. This method can be used concurrently with\n [`keyOn`](#keyOn) and [`keyOff`](#keyOff).\n\n `propagateMidi` can\n only be used if the `[style:poly]` metadata is used in\n the Faust code or if `-polyvoices` flag has been\n provided before compilation.\n\n #### Arguments\n\n * `count`: size of the message (1-3)\n * `time`: time stamp\n * `type`: message type (byte)\n * `channel`: channel number\n * `data1`: first data byte (should be `null` if `count<2`)\n * `data2`: second data byte (should be `null` if `count<3`)\n--------------------------------------------------------","declarations":[],"spell":"362:16-362:29|4|2|2","extent":"362:1-365:2|-1|1|0","declaring_type":4,"bases":[],"derived":[],"vars":[20,21,22,23,24,25],"uses":[],"callees":["364:18-364:31|28|3|36"]},{"id":28,"usr":10802542785999597160,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["364:18-364:31|27|3|36"],"callees":[]},{"id":29,"usr":9655077807872238993,"detailed_name":"const char *DspFaust::getJSONUI()","short_name_offset":22,"short_name_size":9,"kind":6,"storage":1,"hover":"","comments":"-----------------`const char* getJSONUI()`----------------\n Returns the JSON description of the UI of the Faust object. \n--------------------------------------------------------","declarations":[],"spell":"367:23-367:32|4|2|2","extent":"367:1-370:2|-1|1|0","declaring_type":4,"bases":[],"derived":[],"vars":[],"uses":[],"callees":["369:22-369:31|30|3|36"]},{"id":30,"usr":14357582927782405235,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["369:22-369:31|29|3|36"],"callees":[]},{"id":31,"usr":8287386567392890107,"detailed_name":"const char *DspFaust::getJSONMeta()","short_name_offset":22,"short_name_size":11,"kind":6,"storage":1,"hover":"","comments":"-----------------`const char* getJSONMeta()`----------------\n Returns the JSON description of the metadata of the Faust object. \n--------------------------------------------------------","declarations":[],"spell":"372:23-372:34|4|2|2","extent":"372:1-375:2|-1|1|0","declaring_type":4,"bases":[],"derived":[],"vars":[],"uses":[],"callees":["374:22-374:33|32|3|36"]},{"id":32,"usr":5640496965179094331,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["374:22-374:33|31|3|36"],"callees":[]},{"id":33,"usr":14213332142671981527,"detailed_name":"int DspFaust::getParamsCount()","short_name_offset":14,"short_name_size":14,"kind":6,"storage":1,"hover":"","comments":"-----------------`int getParamsCount()`-----------------\n Returns the number of parameters of the Faust object. \n--------------------------------------------------------","declarations":[],"spell":"377:15-377:29|4|2|2","extent":"377:1-380:2|-1|1|0","declaring_type":4,"bases":[],"derived":[],"vars":[],"uses":[],"callees":["379:22-379:36|34|3|36"]},{"id":34,"usr":4664149607156927446,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["379:22-379:36|33|3|36"],"callees":[]},{"id":35,"usr":14424907317889581164,"detailed_name":"void DspFaust::setParamValue(const char *address, float value)","short_name_offset":15,"short_name_size":13,"kind":6,"storage":1,"hover":"","comments":"----`void setParamValue(const char* address, float value)`------\n Set the value of one of the parameters of the Faust\n object in function of its address (path).\n\n #### Arguments\n\n * `address`: address (path) of the parameter\n * `value`: value of the parameter\n--------------------------------------------------------","declarations":[],"spell":"382:16-382:29|4|2|2","extent":"382:1-385:2|-1|1|0","declaring_type":4,"bases":[],"derived":[],"vars":[26,27],"uses":[],"callees":["384:15-384:28|36|3|36"]},{"id":36,"usr":10627634931210519316,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["384:15-384:28|35|3|36"],"callees":[]},{"id":37,"usr":17775290647325297093,"detailed_name":"void DspFaust::setParamValue(int id, float value)","short_name_offset":15,"short_name_size":13,"kind":6,"storage":1,"hover":"","comments":"----`void setParamValue(int id, float value)`---\n Set the value of one of the parameters of the Faust\n object in function of its id.\n\n #### Arguments\n\n * `id`: id of the parameter\n * `value`: value of the parameter\n--------------------------------------------------------","declarations":[],"spell":"387:16-387:29|4|2|2","extent":"387:1-390:2|-1|1|0","declaring_type":4,"bases":[],"derived":[],"vars":[28,29],"uses":[],"callees":["389:15-389:28|38|3|36"]},{"id":38,"usr":17680638269512864699,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["389:15-389:28|37|3|36"],"callees":[]},{"id":39,"usr":3566039854478759457,"detailed_name":"float DspFaust::getParamValue(const char *address)","short_name_offset":16,"short_name_size":13,"kind":6,"storage":1,"hover":"","comments":"----`float getParamValue(const char* address)`----------\n Returns the value of a parameter in function of its\n address (path).\n\n #### Arguments\n\n * `address`: address (path) of the parameter\n--------------------------------------------------------","declarations":[],"spell":"392:17-392:30|4|2|2","extent":"392:1-395:2|-1|1|0","declaring_type":4,"bases":[],"derived":[],"vars":[30],"uses":[],"callees":["394:22-394:35|40|3|36"]},{"id":40,"usr":12424516429873436059,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["394:22-394:35|39|3|36"],"callees":[]},{"id":41,"usr":16512579664151443258,"detailed_name":"float DspFaust::getParamValue(int id)","short_name_offset":16,"short_name_size":13,"kind":6,"storage":1,"hover":"","comments":"---------`float getParamValue(int id)`----------\n Returns the value of a parameter in function of its\n id.\n\n #### Arguments\n\n * `id`: id of the parameter\n--------------------------------------------------------","declarations":[],"spell":"397:17-397:30|4|2|2","extent":"397:1-400:2|-1|1|0","declaring_type":4,"bases":[],"derived":[],"vars":[31],"uses":[],"callees":["399:22-399:35|42|3|36"]},{"id":42,"usr":12730114984565493578,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["399:22-399:35|41|3|36"],"callees":[]},{"id":43,"usr":3801538726817130384,"detailed_name":"void DspFaust::setVoiceParamValue(const char *address, unsigned long voice, float value)","short_name_offset":15,"short_name_size":18,"kind":6,"storage":1,"hover":"","comments":"----`void setVoiceParamValue(const char* address, long voice, float value)`-----\n Set the value of one of the parameters of the Faust\n object in function of its address (path) for a\n specific voice.\n\n #### Arguments\n\n * `address`: address (path) of the parameter\n * `voice`: address of the polyphonic voice (retrieved\n from `keyOn`\n * `value`: value of the parameter\n--------------------------------------------------------","declarations":[],"spell":"402:16-402:34|4|2|2","extent":"402:1-405:2|-1|1|0","declaring_type":4,"bases":[],"derived":[],"vars":[32,33,34],"uses":[],"callees":["404:15-404:33|44|3|36"]},{"id":44,"usr":1524790229055694345,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["404:15-404:33|43|3|36"],"callees":[]},{"id":45,"usr":5141702227655582892,"detailed_name":"void DspFaust::setVoiceParamValue(int id, unsigned long voice, float value)","short_name_offset":15,"short_name_size":18,"kind":6,"storage":1,"hover":"","comments":"----`void setVoiceValue(int id, long voice, float value)`-----\n Set the value of one of the parameters of the Faust\n object in function of its id for a\n specific voice.\n\n #### Arguments\n\n * `id`: id of the parameter\n * `voice`: address of the polyphonic voice (retrieved\n from `keyOn`\n * `value`: value of the parameter\n--------------------------------------------------------","declarations":[],"spell":"407:16-407:34|4|2|2","extent":"407:1-410:2|-1|1|0","declaring_type":4,"bases":[],"derived":[],"vars":[35,36,37],"uses":[],"callees":["409:15-409:33|46|3|36"]},{"id":46,"usr":8438671528449021928,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["409:15-409:33|45|3|36"],"callees":[]},{"id":47,"usr":10504137551521887312,"detailed_name":"float DspFaust::getVoiceParamValue(const char *address, unsigned long voice)","short_name_offset":16,"short_name_size":18,"kind":6,"storage":1,"hover":"","comments":"----`float getVoiceParamValue(const char* address, long voice)`----\n Returns the value of a parameter in function of its\n address (path) for a specific voice.\n\n #### Arguments\n\n * `address`: address (path) of the parameter\n * `voice`: address of the polyphonic voice (retrieved\n from `keyOn`)\n--------------------------------------------------------","declarations":[],"spell":"412:17-412:35|4|2|2","extent":"412:1-415:2|-1|1|0","declaring_type":4,"bases":[],"derived":[],"vars":[38,39],"uses":[],"callees":["414:22-414:40|48|3|36"]},{"id":48,"usr":2903623308758302779,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["414:22-414:40|47|3|36"],"callees":[]},{"id":49,"usr":16003052809737857853,"detailed_name":"float DspFaust::getVoiceParamValue(int id, unsigned long voice)","short_name_offset":16,"short_name_size":18,"kind":6,"storage":1,"hover":"","comments":"----`float getVoiceParamValue(int id, long voice)`----\n Returns the value of a parameter in function of its\n id for a specific voice.\n\n #### Arguments\n\n * `id`: id of the parameter\n * `voice`: address of the polyphonic voice (retrieved\n from `keyOn`)\n--------------------------------------------------------","declarations":[],"spell":"417:17-417:35|4|2|2","extent":"417:1-420:2|-1|1|0","declaring_type":4,"bases":[],"derived":[],"vars":[40,41],"uses":[],"callees":["419:22-419:40|50|3|36"]},{"id":50,"usr":2802310289458504707,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["419:22-419:40|49|3|36"],"callees":[]},{"id":51,"usr":11285399896050014524,"detailed_name":"const char *DspFaust::getParamAddress(int id)","short_name_offset":22,"short_name_size":15,"kind":6,"storage":1,"hover":"","comments":"----`const char* getParamAddress(int id)`---------------\n Returns the address (path) of a parameter in function\n of its ID.\n\n #### Arguments\n\n * `id`: id of the parameter\n--------------------------------------------------------","declarations":[],"spell":"422:23-422:38|4|2|2","extent":"422:1-425:2|-1|1|0","declaring_type":4,"bases":[],"derived":[],"vars":[42],"uses":[],"callees":["424:22-424:37|52|3|36"]},{"id":52,"usr":14335846691523833441,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["424:22-424:37|51|3|36"],"callees":[]},{"id":53,"usr":7980138491792488761,"detailed_name":"const char *DspFaust::getVoiceParamAddress(int id, unsigned long voice)","short_name_offset":22,"short_name_size":20,"kind":6,"storage":1,"hover":"","comments":"----`const char* getVoiceParamAddress(int id, long voice)`-----\n Returns the address (path) of a parameter in function\n of its ID.\n\n #### Arguments\n\n * `id`: id of the parameter\n * `voice`: address of the polyphonic voice (retrieved\n from `keyOn`)\n--------------------------------------------------------","declarations":[],"spell":"427:23-427:43|4|2|2","extent":"427:1-430:2|-1|1|0","declaring_type":4,"bases":[],"derived":[],"vars":[43,44],"uses":[],"callees":["429:22-429:42|54|3|36"]},{"id":54,"usr":2015967478930775602,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["429:22-429:42|53|3|36"],"callees":[]},{"id":55,"usr":16985608303911073106,"detailed_name":"float DspFaust::getParamMin(const char *address)","short_name_offset":16,"short_name_size":11,"kind":6,"storage":1,"hover":"","comments":"-------`float getParamMin(const char* address)`---------\n Returns the minimum value of a parameter in function of\n its address (path).\n\n #### Arguments\n\n * `address`: address (path) of the parameter\n--------------------------------------------------------","declarations":[],"spell":"432:17-432:28|4|2|2","extent":"432:1-435:2|-1|1|0","declaring_type":4,"bases":[],"derived":[],"vars":[45],"uses":[],"callees":["434:25-434:36|56|3|36"]},{"id":56,"usr":13520250656785196217,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["434:25-434:36|55|3|36"],"callees":[]},{"id":57,"usr":1841993077468540601,"detailed_name":"float DspFaust::getParamMin(int id)","short_name_offset":16,"short_name_size":11,"kind":6,"storage":1,"hover":"","comments":"--------------`float getParamMin(int id)`---------------\n Returns the minimum value of a parameter in function\n of its ID.\n\n #### Arguments\n\n * `id`: id of the parameter\n--------------------------------------------------------","declarations":[],"spell":"437:17-437:28|4|2|2","extent":"437:1-440:2|-1|1|0","declaring_type":4,"bases":[],"derived":[],"vars":[46],"uses":[],"callees":["439:25-439:36|58|3|36"]},{"id":58,"usr":3002515325271096459,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["439:25-439:36|57|3|36"],"callees":[]},{"id":59,"usr":8010101898450333615,"detailed_name":"float DspFaust::getParamMax(const char *address)","short_name_offset":16,"short_name_size":11,"kind":6,"storage":1,"hover":"","comments":"-------`float getParamMax(const char* address)`---------\n Returns the maximum value of a parameter in function of\n its address (path).\n\n #### Arguments\n\n * `address`: address (path) of the parameter\n--------------------------------------------------------","declarations":[],"spell":"442:17-442:28|4|2|2","extent":"442:1-445:2|-1|1|0","declaring_type":4,"bases":[],"derived":[],"vars":[47],"uses":[],"callees":["444:25-444:36|60|3|36"]},{"id":60,"usr":3480877215862722472,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["444:25-444:36|59|3|36"],"callees":[]},{"id":61,"usr":17879729141377729203,"detailed_name":"float DspFaust::getParamMax(int id)","short_name_offset":16,"short_name_size":11,"kind":6,"storage":1,"hover":"","comments":"--------------`float getParamMax(int id)`---------------\n Returns the maximum value of a parameter in function\n of its ID.\n\n #### Arguments\n\n * `id`: id of the parameter\n--------------------------------------------------------","declarations":[],"spell":"447:17-447:28|4|2|2","extent":"447:1-450:2|-1|1|0","declaring_type":4,"bases":[],"derived":[],"vars":[48],"uses":[],"callees":["449:25-449:36|62|3|36"]},{"id":62,"usr":3242851111945865355,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["449:25-449:36|61|3|36"],"callees":[]},{"id":63,"usr":8920543821154356272,"detailed_name":"float DspFaust::getParamInit(const char *address)","short_name_offset":16,"short_name_size":12,"kind":6,"storage":1,"hover":"","comments":"-------`float getParamInit(const char* address)`---------\n Returns the default value of a parameter in function of\n its address (path).\n\n #### Arguments\n\n * `address`: address (path) of the parameter\n--------------------------------------------------------","declarations":[],"spell":"452:17-452:29|4|2|2","extent":"452:1-455:2|-1|1|0","declaring_type":4,"bases":[],"derived":[],"vars":[49],"uses":[],"callees":["454:25-454:37|64|3|36"]},{"id":64,"usr":17954731320411601279,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["454:25-454:37|63|3|36"],"callees":[]},{"id":65,"usr":18135688059416739918,"detailed_name":"float DspFaust::getParamInit(int id)","short_name_offset":16,"short_name_size":12,"kind":6,"storage":1,"hover":"","comments":"--------------`float getParamInit(int id)`---------------\n Returns the default value of a parameter in function\n of its ID.\n\n #### Arguments\n\n * `id`: id of the parameter\n--------------------------------------------------------","declarations":[],"spell":"457:17-457:29|4|2|2","extent":"457:1-460:2|-1|1|0","declaring_type":4,"bases":[],"derived":[],"vars":[50],"uses":[],"callees":["459:25-459:37|66|3|36"]},{"id":66,"usr":7142499393677663494,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["459:25-459:37|65|3|36"],"callees":[]},{"id":67,"usr":10029553523030747588,"detailed_name":"const char *DspFaust::getMetadata(const char *address, const char *key)","short_name_offset":22,"short_name_size":11,"kind":6,"storage":1,"hover":"","comments":"-----`const char* getMetadata(const char* address, const char* key)`-----\n Returns the metadataof a parameter in function of\n its address (path) and the metadata key.\n\n #### Arguments\n\n * `address`: address (path) of the parameter\n--------------------------------------------------------","declarations":[],"spell":"462:23-462:34|4|2|2","extent":"462:1-465:2|-1|1|0","declaring_type":4,"bases":[],"derived":[],"vars":[51,52],"uses":[],"callees":["464:25-464:36|68|3|36"]},{"id":68,"usr":10813667096361807287,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["464:25-464:36|67|3|36"],"callees":[]},{"id":69,"usr":2227322470727409152,"detailed_name":"const char *DspFaust::getMetadata(int id, const char *key)","short_name_offset":22,"short_name_size":11,"kind":6,"storage":1,"hover":"","comments":"----`const char* getMetadata(int id, const char* key)`---------------\n Returns the metadataof a parameter in function of\n its iD and the metadata key.\n\n #### Arguments\n\n * `id`: id of the parameter\n--------------------------------------------------------","declarations":[],"spell":"467:23-467:34|4|2|2","extent":"467:1-470:2|-1|1|0","declaring_type":4,"bases":[],"derived":[],"vars":[53,54],"uses":[],"callees":["469:25-469:36|70|3|36"]},{"id":70,"usr":17237143554553590125,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["469:25-469:36|69|3|36"],"callees":[]},{"id":71,"usr":1294548869213717654,"detailed_name":"void DspFaust::propagateAcc(int acc, float v)","short_name_offset":15,"short_name_size":12,"kind":6,"storage":1,"hover":"","comments":"----`void propagateAcc(int acc, float v)`---------------\n Propagate the RAW value of a specific accelerometer\n axis to the Faust object.\n\n #### Arguments\n\n * `acc`: the accelerometer axis (**0**: x, **1**: y, **2**: z)\n * `v`: the RAW acceleromter value in m/s\n--------------------------------------------------------","declarations":[],"spell":"472:16-472:28|4|2|2","extent":"472:1-475:2|-1|1|0","declaring_type":4,"bases":[],"derived":[],"vars":[55,56],"uses":[],"callees":["474:15-474:27|72|3|36"]},{"id":72,"usr":9999629982124930996,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["474:15-474:27|71|3|36"],"callees":[]},{"id":73,"usr":13120471104531362033,"detailed_name":"void DspFaust::setAccConverter(int p, int acc, int curve, float amin, float amid, float amax)","short_name_offset":15,"short_name_size":15,"kind":6,"storage":1,"hover":"","comments":"----`void setAccConverter(int p, int acc, int curve, float amin, float amid, float amax)`-----\n Set the conversion curve for the accelerometer.\n\n #### Arguments\n\n * `p`: the UI parameter id\n * `acc`: the accelerometer axis (**0**: x, **1**: y, **2**: z)\n * `curve`: the curve (**0**: up, **1**: down, **2**: up and down)\n * `amin`: mapping min point\n * `amid`: mapping middle point\n * `amax`: mapping max point\n--------------------------------------------------------\n TODO: eventually should add a link to tutorials on this in the doc","declarations":[],"spell":"477:16-477:31|4|2|2","extent":"477:1-480:2|-1|1|0","declaring_type":4,"bases":[],"derived":[],"vars":[57,58,59,60,61,62],"uses":[],"callees":["479:15-479:30|74|3|36"]},{"id":74,"usr":15324223175258761162,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["479:15-479:30|73|3|36"],"callees":[]},{"id":75,"usr":1819263375236306631,"detailed_name":"void DspFaust::propagateGyr(int acc, float v)","short_name_offset":15,"short_name_size":12,"kind":6,"storage":1,"hover":"","comments":"----`void propagateGyr(int gyr, float v)`---------------\n Propagate the RAW value of a specific gyroscope\n axis to the Faust object.\n\n #### Arguments\n\n * `gyr`: the gyroscope axis (**0**: x, **1**: y, **2**: z)\n * `v`: the RAW acceleromter value in m/s\n--------------------------------------------------------","declarations":[],"spell":"482:16-482:28|4|2|2","extent":"482:1-485:2|-1|1|0","declaring_type":4,"bases":[],"derived":[],"vars":[63,64],"uses":[],"callees":["484:15-484:27|76|3|36"]},{"id":76,"usr":2877066299841426776,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["484:15-484:27|75|3|36"],"callees":[]},{"id":77,"usr":6484316745910300332,"detailed_name":"void DspFaust::setGyrConverter(int p, int gyr, int curve, float amin, float amid, float amax)","short_name_offset":15,"short_name_size":15,"kind":6,"storage":1,"hover":"","comments":"----`void setGyrConverter(int p, int gyr, int curve, float amin, float amid, float amax)`-----\n Set the conversion curve for the gyroscope.\n\n #### Arguments\n\n * `p`: the UI parameter id\n * `gyr`: the gyroscope axis (**0**: x, **1**: y, **2**: z)\n * `curve`: the curve (**0**: up, **1**: down, **2**: up and down)\n * `amin`: mapping min point\n * `amid`: mapping middle point\n * `amax`: mapping max point\n--------------------------------------------------------\n TODO: eventually should add a link to tutorials on this in the doc","declarations":[],"spell":"487:16-487:31|4|2|2","extent":"487:1-490:2|-1|1|0","declaring_type":4,"bases":[],"derived":[],"vars":[65,66,67,68,69,70],"uses":[],"callees":["489:15-489:30|78|3|36"]},{"id":78,"usr":1135412521341528002,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["489:15-489:30|77|3|36"],"callees":[]},{"id":79,"usr":16257322715545329296,"detailed_name":"float DspFaust::getCPULoad()","short_name_offset":16,"short_name_size":10,"kind":6,"storage":1,"hover":"","comments":"------------------`float getCPULoad()`------------------\n Returns the CPU load.\n--------------------------------------------------------","declarations":[],"spell":"492:17-492:27|4|2|2","extent":"492:1-495:2|-1|1|0","declaring_type":4,"bases":[],"derived":[],"vars":[],"uses":[],"callees":["494:22-494:32|80|3|36"]},{"id":80,"usr":18135359181434428188,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["494:22-494:32|79|3|36"],"callees":[]},{"id":81,"usr":17502800949937025587,"detailed_name":"int DspFaust::getScreenColor()","short_name_offset":14,"short_name_size":14,"kind":6,"storage":1,"hover":"","comments":"","declarations":[],"spell":"497:15-497:29|4|2|2","extent":"497:1-500:2|-1|1|0","declaring_type":4,"bases":[],"derived":[],"vars":[],"uses":[],"callees":["499:22-499:36|82|3|36"]},{"id":82,"usr":12912510526935406984,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["499:22-499:36|81|3|36"],"callees":[]}],"vars":[{"id":0,"usr":2776914594435925635,"detailed_name":"std::list<GUI *> GUI::fGuiList","short_name_offset":22,"short_name_size":8,"hover":"","comments":"","declarations":[],"spell":"122:22-122:30|0|2|2","extent":"122:1-122:30|-1|1|0","uses":[],"kind":8,"storage":1},{"id":1,"usr":6968203087632816609,"detailed_name":"ztimedmap GUI::gTimedZoneMap","short_name_offset":15,"short_name_size":13,"hover":"","comments":"","declarations":[],"spell":"123:16-123:29|0|2|2","extent":"123:1-123:29|-1|1|0","uses":[],"kind":8,"storage":1},{"id":2,"usr":4436466711688078629,"detailed_name":"audio *driver","short_name_offset":7,"short_name_size":6,"hover":"audio *driver = 0","comments":"","declarations":[],"spell":"127:12-127:18|2|3|2","extent":"127:5-127:22|2|3|0","type":5,"uses":["142:16-142:22|2|3|12"],"kind":13,"storage":1},{"id":3,"usr":17375545165413019582,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["139:10-139:14|2|3|4"],"kind":0,"storage":0},{"id":4,"usr":7739974257970471547,"detailed_name":"int sample_rate","short_name_offset":4,"short_name_size":11,"hover":"","comments":"","declarations":[],"spell":"145:24-145:35|6|3|2","extent":"145:20-145:35|6|3|0","type":7,"uses":["147:29-147:40|6|3|12"],"kind":253,"storage":1},{"id":5,"usr":11006969433619549946,"detailed_name":"int buffer_size","short_name_offset":4,"short_name_size":11,"hover":"","comments":"","declarations":[],"spell":"145:41-145:52|6|3|2","extent":"145:37-145:52|6|3|0","type":7,"uses":["147:42-147:53|6|3|12"],"kind":253,"storage":1},{"id":6,"usr":12364052480381545506,"detailed_name":"int sample_rate","short_name_offset":4,"short_name_size":11,"hover":"","comments":"","declarations":[],"spell":"176:35-176:46|7|3|2","extent":"176:31-176:46|7|3|0","type":7,"uses":[],"kind":253,"storage":1},{"id":7,"usr":12437785953656710097,"detailed_name":"int buffer_size","short_name_offset":4,"short_name_size":11,"hover":"","comments":"","declarations":[],"spell":"176:52-176:63|7|3|2","extent":"176:48-176:63|7|3|0","type":7,"uses":[],"kind":253,"storage":1},{"id":8,"usr":18396287324734483459,"detailed_name":"dsp *mono_dsp","short_name_offset":5,"short_name_size":8,"hover":"","comments":"","declarations":[],"spell":"210:26-210:34|5|3|2","extent":"210:21-210:34|5|3|0","type":8,"uses":["227:39-227:47|5|3|12"],"kind":253,"storage":1},{"id":9,"usr":4009584668928857674,"detailed_name":"audio *driver","short_name_offset":7,"short_name_size":6,"hover":"","comments":"","declarations":[],"spell":"210:43-210:49|5|3|2","extent":"210:36-210:49|5|3|0","type":5,"uses":["227:49-227:55|5|3|12"],"kind":253,"storage":1},{"id":10,"usr":6880241205312834053,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["227:5-227:16|5|3|20","279:12-279:23|9|3|12","295:9-295:20|10|3|12","306:2-306:13|12|3|12","334:9-334:20|15|3|12","339:24-339:35|17|3|12","344:9-344:20|19|3|12","349:24-349:35|21|3|12","354:9-354:20|23|3|12","359:5-359:16|25|3|12","364:5-364:16|27|3|12","369:9-369:20|29|3|12","374:9-374:20|31|3|12","379:9-379:20|33|3|12","384:2-384:13|35|3|12","389:2-389:13|37|3|12","394:9-394:20|39|3|12","399:9-399:20|41|3|12","404:2-404:13|43|3|12","409:2-409:13|45|3|12","414:9-414:20|47|3|12","419:9-419:20|49|3|12","424:9-424:20|51|3|12","429:9-429:20|53|3|12","434:12-434:23|55|3|12","439:12-439:23|57|3|12","444:12-444:23|59|3|12","449:12-449:23|61|3|12","454:12-454:23|63|3|12","459:12-459:23|65|3|12","464:12-464:23|67|3|12","469:12-469:23|69|3|12","474:2-474:13|71|3|12","479:2-479:13|73|3|12","484:2-484:13|75|3|12","489:2-489:13|77|3|12","494:9-494:20|79|3|12","499:9-499:20|81|3|12"],"kind":0,"storage":0},{"id":11,"usr":15504823983894616578,"detailed_name":"bool xmit","short_name_offset":5,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"309:34-309:38|14|3|2","extent":"309:29-309:38|14|3|0","type":10,"uses":[],"kind":253,"storage":1},{"id":12,"usr":16250943525140554637,"detailed_name":"int inport","short_name_offset":4,"short_name_size":6,"hover":"","comments":"","declarations":[],"spell":"309:44-309:50|14|3|2","extent":"309:40-309:50|14|3|0","type":7,"uses":[],"kind":253,"storage":1},{"id":13,"usr":3176411734341550542,"detailed_name":"int outport","short_name_offset":4,"short_name_size":7,"hover":"","comments":"","declarations":[],"spell":"309:56-309:63|14|3|2","extent":"309:52-309:63|14|3|0","type":7,"uses":[],"kind":253,"storage":1},{"id":14,"usr":1875845776737015767,"detailed_name":"int errport","short_name_offset":4,"short_name_size":7,"hover":"","comments":"","declarations":[],"spell":"309:69-309:76|14|3|2","extent":"309:65-309:76|14|3|0","type":7,"uses":[],"kind":253,"storage":1},{"id":15,"usr":14615778960488021907,"detailed_name":"const char *address","short_name_offset":12,"short_name_size":7,"hover":"","comments":"","declarations":[],"spell":"309:90-309:97|14|3|2","extent":"309:78-309:97|14|3|0","type":11,"uses":[],"kind":253,"storage":1},{"id":16,"usr":11194730923092095890,"detailed_name":"int pitch","short_name_offset":4,"short_name_size":5,"hover":"","comments":"","declarations":[],"spell":"337:35-337:40|17|3|2","extent":"337:31-337:40|17|3|0","type":7,"uses":["339:43-339:48|17|3|12"],"kind":253,"storage":1},{"id":17,"usr":240289665877106093,"detailed_name":"int velocity","short_name_offset":4,"short_name_size":8,"hover":"","comments":"","declarations":[],"spell":"337:46-337:54|17|3|2","extent":"337:42-337:54|17|3|0","type":7,"uses":["339:50-339:58|17|3|12"],"kind":253,"storage":1},{"id":18,"usr":12299038319945685685,"detailed_name":"int pitch","short_name_offset":4,"short_name_size":5,"hover":"","comments":"","declarations":[],"spell":"342:26-342:31|19|3|2","extent":"342:22-342:31|19|3|0","type":7,"uses":["344:29-344:34|19|3|12"],"kind":253,"storage":1},{"id":19,"usr":5769867575343280412,"detailed_name":"unsigned long voice","short_name_offset":14,"short_name_size":5,"hover":"","comments":"","declarations":[],"spell":"352:41-352:46|23|3|2","extent":"352:27-352:46|23|3|0","type":12,"uses":["354:34-354:39|23|3|12"],"kind":253,"storage":1},{"id":20,"usr":7995225505247699515,"detailed_name":"int count","short_name_offset":4,"short_name_size":5,"hover":"","comments":"","declarations":[],"spell":"362:34-362:39|27|3|2","extent":"362:30-362:39|27|3|0","type":7,"uses":["364:32-364:37|27|3|12"],"kind":253,"storage":1},{"id":21,"usr":5239441805981686,"detailed_name":"double time","short_name_offset":7,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"362:48-362:52|27|3|2","extent":"362:41-362:52|27|3|0","type":13,"uses":["364:39-364:43|27|3|12"],"kind":253,"storage":1},{"id":22,"usr":1139918645623544612,"detailed_name":"int type","short_name_offset":4,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"362:58-362:62|27|3|2","extent":"362:54-362:62|27|3|0","type":7,"uses":["364:45-364:49|27|3|12"],"kind":253,"storage":1},{"id":23,"usr":13260090423400318485,"detailed_name":"int channel","short_name_offset":4,"short_name_size":7,"hover":"","comments":"","declarations":[],"spell":"362:68-362:75|27|3|2","extent":"362:64-362:75|27|3|0","type":7,"uses":["364:51-364:58|27|3|12"],"kind":253,"storage":1},{"id":24,"usr":1306895941434412262,"detailed_name":"int data1","short_name_offset":4,"short_name_size":5,"hover":"","comments":"","declarations":[],"spell":"362:81-362:86|27|3|2","extent":"362:77-362:86|27|3|0","type":7,"uses":["364:60-364:65|27|3|12"],"kind":253,"storage":1},{"id":25,"usr":12748775662301161664,"detailed_name":"int data2","short_name_offset":4,"short_name_size":5,"hover":"","comments":"","declarations":[],"spell":"362:92-362:97|27|3|2","extent":"362:88-362:97|27|3|0","type":7,"uses":["364:67-364:72|27|3|12"],"kind":253,"storage":1},{"id":26,"usr":15906597079769072106,"detailed_name":"const char *address","short_name_offset":12,"short_name_size":7,"hover":"","comments":"","declarations":[],"spell":"382:42-382:49|35|3|2","extent":"382:30-382:49|35|3|0","type":11,"uses":["384:29-384:36|35|3|12"],"kind":253,"storage":1},{"id":27,"usr":14938012138266165995,"detailed_name":"float value","short_name_offset":6,"short_name_size":5,"hover":"","comments":"","declarations":[],"spell":"382:57-382:62|35|3|2","extent":"382:51-382:62|35|3|0","type":14,"uses":["384:38-384:43|35|3|12"],"kind":253,"storage":1},{"id":28,"usr":15910363702455406975,"detailed_name":"int id","short_name_offset":4,"short_name_size":2,"hover":"","comments":"","declarations":[],"spell":"387:34-387:36|37|3|2","extent":"387:30-387:36|37|3|0","type":7,"uses":["389:29-389:31|37|3|12"],"kind":253,"storage":1},{"id":29,"usr":15450887586028189016,"detailed_name":"float value","short_name_offset":6,"short_name_size":5,"hover":"","comments":"","declarations":[],"spell":"387:44-387:49|37|3|2","extent":"387:38-387:49|37|3|0","type":14,"uses":["389:33-389:38|37|3|12"],"kind":253,"storage":1},{"id":30,"usr":1930404412714499827,"detailed_name":"const char *address","short_name_offset":12,"short_name_size":7,"hover":"","comments":"","declarations":[],"spell":"392:43-392:50|39|3|2","extent":"392:31-392:50|39|3|0","type":11,"uses":["394:36-394:43|39|3|12"],"kind":253,"storage":1},{"id":31,"usr":3649401692847109777,"detailed_name":"int id","short_name_offset":4,"short_name_size":2,"hover":"","comments":"","declarations":[],"spell":"397:35-397:37|41|3|2","extent":"397:31-397:37|41|3|0","type":7,"uses":["399:36-399:38|41|3|12"],"kind":253,"storage":1},{"id":32,"usr":6524789770621014804,"detailed_name":"const char *address","short_name_offset":12,"short_name_size":7,"hover":"","comments":"","declarations":[],"spell":"402:47-402:54|43|3|2","extent":"402:35-402:54|43|3|0","type":11,"uses":["404:34-404:41|43|3|12"],"kind":253,"storage":1},{"id":33,"usr":416934747189303259,"detailed_name":"unsigned long voice","short_name_offset":14,"short_name_size":5,"hover":"","comments":"","declarations":[],"spell":"402:70-402:75|43|3|2","extent":"402:56-402:75|43|3|0","type":12,"uses":["404:43-404:48|43|3|12"],"kind":253,"storage":1},{"id":34,"usr":844682591277952379,"detailed_name":"float value","short_name_offset":6,"short_name_size":5,"hover":"","comments":"","declarations":[],"spell":"402:83-402:88|43|3|2","extent":"402:77-402:88|43|3|0","type":14,"uses":["404:50-404:55|43|3|12"],"kind":253,"storage":1},{"id":35,"usr":8167825193922574389,"detailed_name":"int id","short_name_offset":4,"short_name_size":2,"hover":"","comments":"","declarations":[],"spell":"407:39-407:41|45|3|2","extent":"407:35-407:41|45|3|0","type":7,"uses":["409:34-409:36|45|3|12"],"kind":253,"storage":1},{"id":36,"usr":2507223878091053342,"detailed_name":"unsigned long voice","short_name_offset":14,"short_name_size":5,"hover":"","comments":"","declarations":[],"spell":"407:57-407:62|45|3|2","extent":"407:43-407:62|45|3|0","type":12,"uses":["409:38-409:43|45|3|12"],"kind":253,"storage":1},{"id":37,"usr":2068073314380265837,"detailed_name":"float value","short_name_offset":6,"short_name_size":5,"hover":"","comments":"","declarations":[],"spell":"407:70-407:75|45|3|2","extent":"407:64-407:75|45|3|0","type":14,"uses":["409:45-409:50|45|3|12"],"kind":253,"storage":1},{"id":38,"usr":4405214351975298195,"detailed_name":"const char *address","short_name_offset":12,"short_name_size":7,"hover":"","comments":"","declarations":[],"spell":"412:48-412:55|47|3|2","extent":"412:36-412:55|47|3|0","type":11,"uses":["414:41-414:48|47|3|12"],"kind":253,"storage":1},{"id":39,"usr":16263865427472346408,"detailed_name":"unsigned long voice","short_name_offset":14,"short_name_size":5,"hover":"","comments":"","declarations":[],"spell":"412:71-412:76|47|3|2","extent":"412:57-412:76|47|3|0","type":12,"uses":["414:50-414:55|47|3|12"],"kind":253,"storage":1},{"id":40,"usr":511280511324654018,"detailed_name":"int id","short_name_offset":4,"short_name_size":2,"hover":"","comments":"","declarations":[],"spell":"417:40-417:42|49|3|2","extent":"417:36-417:42|49|3|0","type":7,"uses":["419:41-419:43|49|3|12"],"kind":253,"storage":1},{"id":41,"usr":2722634197985356764,"detailed_name":"unsigned long voice","short_name_offset":14,"short_name_size":5,"hover":"","comments":"","declarations":[],"spell":"417:58-417:63|49|3|2","extent":"417:44-417:63|49|3|0","type":12,"uses":["419:45-419:50|49|3|12"],"kind":253,"storage":1},{"id":42,"usr":9171417607497937678,"detailed_name":"int id","short_name_offset":4,"short_name_size":2,"hover":"","comments":"","declarations":[],"spell":"422:43-422:45|51|3|2","extent":"422:39-422:45|51|3|0","type":7,"uses":["424:38-424:40|51|3|12"],"kind":253,"storage":1},{"id":43,"usr":6792589531246055937,"detailed_name":"int id","short_name_offset":4,"short_name_size":2,"hover":"","comments":"","declarations":[],"spell":"427:48-427:50|53|3|2","extent":"427:44-427:50|53|3|0","type":7,"uses":["429:43-429:45|53|3|12"],"kind":253,"storage":1},{"id":44,"usr":3600761144117786897,"detailed_name":"unsigned long voice","short_name_offset":14,"short_name_size":5,"hover":"","comments":"","declarations":[],"spell":"427:66-427:71|53|3|2","extent":"427:52-427:71|53|3|0","type":12,"uses":["429:47-429:52|53|3|12"],"kind":253,"storage":1},{"id":45,"usr":2279099311951390892,"detailed_name":"const char *address","short_name_offset":12,"short_name_size":7,"hover":"","comments":"","declarations":[],"spell":"432:41-432:48|55|3|2","extent":"432:29-432:48|55|3|0","type":11,"uses":["434:37-434:44|55|3|12"],"kind":253,"storage":1},{"id":46,"usr":16177182615162068936,"detailed_name":"int id","short_name_offset":4,"short_name_size":2,"hover":"","comments":"","declarations":[],"spell":"437:33-437:35|57|3|2","extent":"437:29-437:35|57|3|0","type":7,"uses":["439:37-439:39|57|3|12"],"kind":253,"storage":1},{"id":47,"usr":2960668978539485566,"detailed_name":"const char *address","short_name_offset":12,"short_name_size":7,"hover":"","comments":"","declarations":[],"spell":"442:41-442:48|59|3|2","extent":"442:29-442:48|59|3|0","type":11,"uses":["444:37-444:44|59|3|12"],"kind":253,"storage":1},{"id":48,"usr":17587446290570754673,"detailed_name":"int id","short_name_offset":4,"short_name_size":2,"hover":"","comments":"","declarations":[],"spell":"447:33-447:35|61|3|2","extent":"447:29-447:35|61|3|0","type":7,"uses":["449:37-449:39|61|3|12"],"kind":253,"storage":1},{"id":49,"usr":15178619828577177546,"detailed_name":"const char *address","short_name_offset":12,"short_name_size":7,"hover":"","comments":"","declarations":[],"spell":"452:42-452:49|63|3|2","extent":"452:30-452:49|63|3|0","type":11,"uses":["454:38-454:45|63|3|12"],"kind":253,"storage":1},{"id":50,"usr":15317725981473988789,"detailed_name":"int id","short_name_offset":4,"short_name_size":2,"hover":"","comments":"","declarations":[],"spell":"457:34-457:36|65|3|2","extent":"457:30-457:36|65|3|0","type":7,"uses":["459:38-459:40|65|3|12"],"kind":253,"storage":1},{"id":51,"usr":4931873536442522551,"detailed_name":"const char *address","short_name_offset":12,"short_name_size":7,"hover":"","comments":"","declarations":[],"spell":"462:47-462:54|67|3|2","extent":"462:35-462:54|67|3|0","type":11,"uses":["464:37-464:44|67|3|12"],"kind":253,"storage":1},{"id":52,"usr":8029608656765601052,"detailed_name":"const char *key","short_name_offset":12,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"462:68-462:71|67|3|2","extent":"462:56-462:71|67|3|0","type":11,"uses":["464:46-464:49|67|3|12"],"kind":253,"storage":1},{"id":53,"usr":6472330631173742175,"detailed_name":"int id","short_name_offset":4,"short_name_size":2,"hover":"","comments":"","declarations":[],"spell":"467:39-467:41|69|3|2","extent":"467:35-467:41|69|3|0","type":7,"uses":["469:37-469:39|69|3|12"],"kind":253,"storage":1},{"id":54,"usr":16951647316622640905,"detailed_name":"const char *key","short_name_offset":12,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"467:55-467:58|69|3|2","extent":"467:43-467:58|69|3|0","type":11,"uses":["469:41-469:44|69|3|12"],"kind":253,"storage":1},{"id":55,"usr":3336469956155313540,"detailed_name":"int acc","short_name_offset":4,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"472:33-472:36|71|3|2","extent":"472:29-472:36|71|3|0","type":7,"uses":["474:28-474:31|71|3|12"],"kind":253,"storage":1},{"id":56,"usr":12509482948620219228,"detailed_name":"float v","short_name_offset":6,"short_name_size":1,"hover":"","comments":"","declarations":[],"spell":"472:44-472:45|71|3|2","extent":"472:38-472:45|71|3|0","type":14,"uses":["474:33-474:34|71|3|12"],"kind":253,"storage":1},{"id":57,"usr":10968698256641181888,"detailed_name":"int p","short_name_offset":4,"short_name_size":1,"hover":"","comments":"","declarations":[],"spell":"477:36-477:37|73|3|2","extent":"477:32-477:37|73|3|0","type":7,"uses":["479:31-479:32|73|3|12"],"kind":253,"storage":1},{"id":58,"usr":4257406774859928192,"detailed_name":"int acc","short_name_offset":4,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"477:43-477:46|73|3|2","extent":"477:39-477:46|73|3|0","type":7,"uses":["479:34-479:37|73|3|12"],"kind":253,"storage":1},{"id":59,"usr":15045434178021371518,"detailed_name":"int curve","short_name_offset":4,"short_name_size":5,"hover":"","comments":"","declarations":[],"spell":"477:52-477:57|73|3|2","extent":"477:48-477:57|73|3|0","type":7,"uses":["479:39-479:44|73|3|12"],"kind":253,"storage":1},{"id":60,"usr":9655292012806120766,"detailed_name":"float amin","short_name_offset":6,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"477:65-477:69|73|3|2","extent":"477:59-477:69|73|3|0","type":14,"uses":["479:46-479:50|73|3|12"],"kind":253,"storage":1},{"id":61,"usr":1126460414946974961,"detailed_name":"float amid","short_name_offset":6,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"477:77-477:81|73|3|2","extent":"477:71-477:81|73|3|0","type":14,"uses":["479:52-479:56|73|3|12"],"kind":253,"storage":1},{"id":62,"usr":8449821871849151986,"detailed_name":"float amax","short_name_offset":6,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"477:89-477:93|73|3|2","extent":"477:83-477:93|73|3|0","type":14,"uses":["479:58-479:62|73|3|12"],"kind":253,"storage":1},{"id":63,"usr":9839111547029009175,"detailed_name":"int acc","short_name_offset":4,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"482:33-482:36|75|3|2","extent":"482:29-482:36|75|3|0","type":7,"uses":["484:28-484:31|75|3|12"],"kind":253,"storage":1},{"id":64,"usr":57708113117544129,"detailed_name":"float v","short_name_offset":6,"short_name_size":1,"hover":"","comments":"","declarations":[],"spell":"482:44-482:45|75|3|2","extent":"482:38-482:45|75|3|0","type":14,"uses":["484:33-484:34|75|3|12"],"kind":253,"storage":1},{"id":65,"usr":5824471693827471042,"detailed_name":"int p","short_name_offset":4,"short_name_size":1,"hover":"","comments":"","declarations":[],"spell":"487:36-487:37|77|3|2","extent":"487:32-487:37|77|3|0","type":7,"uses":["489:31-489:32|77|3|12"],"kind":253,"storage":1},{"id":66,"usr":2184084662125815177,"detailed_name":"int gyr","short_name_offset":4,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"487:43-487:46|77|3|2","extent":"487:39-487:46|77|3|0","type":7,"uses":["489:34-489:37|77|3|12"],"kind":253,"storage":1},{"id":67,"usr":10045373745838793546,"detailed_name":"int curve","short_name_offset":4,"short_name_size":5,"hover":"","comments":"","declarations":[],"spell":"487:52-487:57|77|3|2","extent":"487:48-487:57|77|3|0","type":7,"uses":["489:39-489:44|77|3|12"],"kind":253,"storage":1},{"id":68,"usr":3262243907833040734,"detailed_name":"float amin","short_name_offset":6,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"487:65-487:69|77|3|2","extent":"487:59-487:69|77|3|0","type":14,"uses":["489:46-489:50|77|3|12"],"kind":253,"storage":1},{"id":69,"usr":11339494339797724693,"detailed_name":"float amid","short_name_offset":6,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"487:77-487:81|77|3|2","extent":"487:71-487:81|77|3|0","type":14,"uses":["489:52-489:56|77|3|12"],"kind":253,"storage":1},{"id":70,"usr":4847614943629722951,"detailed_name":"float amax","short_name_offset":6,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"487:89-487:93|77|3|2","extent":"487:83-487:93|77|3|0","type":14,"uses":["489:58-489:62|77|3|12"],"kind":253,"storage":1},{"id":71,"usr":2123489525815210324,"detailed_name":"OSC_IP_ADDRESS","short_name_offset":0,"short_name_size":14,"hover":"#define OSC_IP_ADDRESS  \"192.168.1.112\"","comments":"","declarations":[],"spell":"44:9-44:23|-1|1|2","extent":"44:9-44:40|-1|1|0","uses":[],"kind":255,"storage":0},{"id":72,"usr":3955176444050297157,"detailed_name":"OSC_IN_PORT","short_name_offset":0,"short_name_size":11,"hover":"#define OSC_IN_PORT     \"5510\"","comments":"","declarations":[],"spell":"45:9-45:20|-1|1|2","extent":"45:9-45:31|-1|1|0","uses":[],"kind":255,"storage":0},{"id":73,"usr":790474496814240510,"detailed_name":"OSC_OUT_PORT","short_name_offset":0,"short_name_size":12,"hover":"#define OSC_OUT_PORT    \"5511\"","comments":"","declarations":[],"spell":"46:9-46:21|-1|1|2","extent":"46:9-46:31|-1|1|0","uses":[],"kind":255,"storage":0},{"id":74,"usr":291038054068649371,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["142:10-142:14|-1|1|4","147:10-147:14|-1|1|4"],"kind":0,"storage":0}]}