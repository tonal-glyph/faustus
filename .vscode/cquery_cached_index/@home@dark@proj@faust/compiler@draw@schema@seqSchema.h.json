15
{"last_modification_time":1548168586,"language":2,"import_file":"/home/dark/proj/faust/compiler/draw/schema/seqSchema.cpp","args":["clang++","-working-directory=/home/dark/proj/faust/","/home/dark/proj/faust/compiler/draw/schema/seqSchema.cpp","-resource-dir=/usr/lib/clang/7.0.1","-Wno-unknown-warning-option","-fparse-all-comments","-isystem/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/8.2.1/../../../../include/c++/8.2.1","-isystem/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/8.2.1/../../../../include/c++/8.2.1/x86_64-pc-linux-gnu","-isystem/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/8.2.1/../../../../include/c++/8.2.1/backward","-isystem/usr/local/include","-isystem/usr/lib/clang/7.0.1/include","-isystem/usr/include"],"includes":[{"line":24,"resolved_path":"/home/dark/proj/faust/compiler/draw/schema/schema.h"}],"dependencies":["/home/dark/proj/faust/compiler/draw/schema/seqSchema.cpp","/home/dark/proj/faust/compiler/draw/schema/schema.h"],"skipped_by_preprocessor":[],"types":[{"id":0,"usr":17660862479792700112,"detailed_name":"seqSchema","short_name_offset":0,"short_name_size":9,"kind":5,"hover":"","comments":"\nSequential composition. Place and connect two diagrams in sequence.\nThe constructor is private because one should use the makeSeqSchema\nfunction instead.","declarations":["48:5-48:14|-1|1|4"],"spell":"33:7-33:16|-1|1|2","extent":"33:1-51:2|-1|1|0","bases":[1],"derived":[],"types":[],"funcs":[1,3,4,6,8,10,11,12],"vars":[0,1,2],"instances":[],"uses":["48:5-48:14|0|2|4"]},{"id":1,"usr":4822374124537768293,"detailed_name":"schema","short_name_offset":0,"short_name_size":6,"kind":0,"hover":"","comments":"","declarations":["33:26-33:32|-1|1|4"],"bases":[],"derived":[0],"types":[],"funcs":[],"vars":[],"instances":[0,1],"uses":["33:26-33:32|-1|1|4","34:5-34:11|-1|1|4","35:5-35:11|-1|1|4","39:12-39:18|-1|1|4","39:34-39:40|-1|1|4","39:46-39:52|-1|1|4","48:15-48:21|-1|1|4","48:27-48:33|-1|1|4"]},{"id":2,"usr":22,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[2],"uses":[]},{"id":3,"usr":15913884751799646255,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["43:13-43:18|-1|1|4","44:13-44:18|-1|1|4"]},{"id":4,"usr":14479868071171638353,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["45:33-45:42|-1|1|4","50:31-50:40|-1|1|4"]}],"funcs":[{"id":0,"usr":8101755135787738832,"detailed_name":"schema *makeSeqSchema(schema *s1, schema *s2)","short_name_offset":8,"short_name_size":13,"kind":12,"storage":1,"hover":"","comments":"\nMake a sequential schema. May add cables to ensure the internal\nconnections are between the same number of outputs and inputs.\nCompute an horizontal gap based on the number of upward and\ndownward connections.","declarations":[{"spell":"39:20-39:33|0|2|1","param_spellings":["39:42-39:44","39:54-39:56"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":1,"usr":17120949523522119564,"detailed_name":"virtual void seqSchema::place(double ox, double oy, int orientation)","short_name_offset":24,"short_name_size":5,"kind":6,"storage":1,"hover":"","comments":"\nPlace the two components horizontally with enough space\nfor the connections","declarations":[{"spell":"41:19-41:24|0|2|1","param_spellings":["41:32-41:34","41:43-41:45","41:51-41:62"]}],"declaring_type":0,"bases":[2],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":2,"usr":14630238518546662397,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[1],"vars":[],"uses":[],"callees":[]},{"id":3,"usr":6246010045079648305,"detailed_name":"virtual void seqSchema::draw(int &dev)","short_name_offset":24,"short_name_size":4,"kind":6,"storage":1,"hover":"","comments":"","declarations":[{"spell":"42:19-42:23|0|2|1","param_spellings":["42:32-42:35"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":4,"usr":11976592762347521434,"detailed_name":"virtual point seqSchema::inputPoint(unsigned int i) const","short_name_offset":25,"short_name_size":10,"kind":6,"storage":1,"hover":"","comments":"\nThe input points are the input points of the first component","declarations":[{"spell":"43:19-43:29|0|2|1","param_spellings":["43:43-43:44"]}],"declaring_type":0,"bases":[5],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":5,"usr":9640228143897578906,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[4],"vars":[],"uses":[],"callees":[]},{"id":6,"usr":10154904360817037093,"detailed_name":"virtual point seqSchema::outputPoint(unsigned int i) const","short_name_offset":25,"short_name_size":11,"kind":6,"storage":1,"hover":"","comments":"\nThe output points are the output points of the second component","declarations":[{"spell":"44:19-44:30|0|2|1","param_spellings":["44:44-44:45"]}],"declaring_type":0,"bases":[7],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":7,"usr":2841643199297492359,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[6],"vars":[],"uses":[],"callees":[]},{"id":8,"usr":8619612248352603780,"detailed_name":"virtual void seqSchema::collectTraits(collector &c)","short_name_offset":24,"short_name_size":13,"kind":6,"storage":1,"hover":"","comments":"\nDraw the two components as well as the internal wires","declarations":[{"spell":"45:19-45:32|0|2|1","param_spellings":["45:44-45:45"]}],"declaring_type":0,"bases":[9],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":9,"usr":7362085076166035115,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[8],"vars":[],"uses":[],"callees":[]},{"id":10,"usr":16978790922122978252,"detailed_name":"seqSchema::seqSchema(schema *s1, schema *s2, double hgap)","short_name_offset":0,"short_name_size":9,"kind":9,"storage":1,"hover":"","comments":"\nConstructor for a sequential schema (s1:s2). The components s1 and s2\nare supposed to be \"compatible\" (s1 : n->m and s2 : m->q)","declarations":[{"spell":"48:5-48:14|0|2|1","param_spellings":["48:23-48:25","48:35-48:37","48:46-48:50"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":11,"usr":17727292830972574761,"detailed_name":"void seqSchema::drawInternalWires(int &dev)","short_name_offset":16,"short_name_size":17,"kind":6,"storage":1,"hover":"","comments":"","declarations":[{"spell":"49:10-49:27|0|2|1","param_spellings":["49:36-49:39"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":12,"usr":15353298298593817925,"detailed_name":"void seqSchema::collectInternalWires(collector &c)","short_name_offset":16,"short_name_size":20,"kind":6,"storage":1,"hover":"","comments":"\nDraw the internal wires aligning the vertical segments in\na symetric way when possible.","declarations":[{"spell":"50:10-50:30|0|2|1","param_spellings":["50:42-50:43"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]}],"vars":[{"id":0,"usr":1480162418127494624,"detailed_name":"schema *seqSchema::fSchema1","short_name_offset":19,"short_name_size":8,"hover":"","comments":"","declarations":[],"spell":"34:13-34:21|0|2|2","extent":"34:5-34:21|0|2|0","type":1,"uses":[],"kind":8,"storage":0},{"id":1,"usr":11359521635091911876,"detailed_name":"schema *seqSchema::fSchema2","short_name_offset":19,"short_name_size":8,"hover":"","comments":"","declarations":[],"spell":"35:13-35:21|0|2|2","extent":"35:5-35:21|0|2|0","type":1,"uses":[],"kind":8,"storage":0},{"id":2,"usr":1577598867834851974,"detailed_name":"double seqSchema::fHorzGap","short_name_offset":18,"short_name_size":8,"hover":"","comments":"","declarations":[],"spell":"36:13-36:21|0|2|2","extent":"36:5-36:21|0|2|0","type":2,"uses":[],"kind":8,"storage":0},{"id":3,"usr":13636786315511669638,"detailed_name":"__SEQSCHEMA__","short_name_offset":0,"short_name_size":13,"hover":"#define __SEQSCHEMA__","comments":"","declarations":[],"spell":"23:9-23:22|-1|1|2","extent":"23:9-23:22|-1|1|0","uses":[],"kind":255,"storage":0}]}