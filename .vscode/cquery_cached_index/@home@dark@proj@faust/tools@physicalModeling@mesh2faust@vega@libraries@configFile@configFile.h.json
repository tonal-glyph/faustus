15
{"last_modification_time":1548168587,"language":2,"import_file":"/home/dark/proj/faust/tools/physicalModeling/mesh2faust/vega/libraries/configFile/configFile.cpp","args":["clang++","-working-directory=/home/dark/proj/faust/","/home/dark/proj/faust/tools/physicalModeling/mesh2faust/vega/libraries/configFile/configFile.cpp","-resource-dir=/usr/lib/clang/7.0.1","-Wno-unknown-warning-option","-fparse-all-comments","-isystem/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/8.2.1/../../../../include/c++/8.2.1","-isystem/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/8.2.1/../../../../include/c++/8.2.1/x86_64-pc-linux-gnu","-isystem/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/8.2.1/../../../../include/c++/8.2.1/backward","-isystem/usr/local/include","-isystem/usr/lib/clang/7.0.1/include","-isystem/usr/include"],"includes":[{"line":84,"resolved_path":"/usr/include/c++/8.2.1/vector"},{"line":85,"resolved_path":"/usr/include/c++/8.2.1/string"}],"dependencies":["/home/dark/proj/faust/tools/physicalModeling/mesh2faust/vega/libraries/configFile/configFile.cpp","/usr/include/c++/8.2.1/string","/usr/include/c++/8.2.1/x86_64-pc-linux-gnu/bits/c++config.h","/usr/include/c++/8.2.1/x86_64-pc-linux-gnu/bits/os_defines.h","/usr/include/features.h","/usr/include/sys/cdefs.h","/usr/include/gnu/stubs.h","/usr/include/c++/8.2.1/bits/stringfwd.h","/usr/include/c++/8.2.1/bits/memoryfwd.h","/usr/include/c++/8.2.1/bits/char_traits.h","/usr/include/c++/8.2.1/bits/stl_algobase.h","/usr/include/c++/8.2.1/bits/functexcept.h","/usr/include/c++/8.2.1/bits/cpp_type_traits.h","/usr/include/c++/8.2.1/ext/type_traits.h","/usr/include/c++/8.2.1/ext/numeric_traits.h","/usr/include/c++/8.2.1/bits/stl_pair.h","/usr/include/c++/8.2.1/bits/move.h","/usr/include/c++/8.2.1/bits/concept_check.h","/usr/include/c++/8.2.1/type_traits","/usr/include/c++/8.2.1/bits/stl_iterator_base_types.h","/usr/include/c++/8.2.1/bits/stl_iterator_base_funcs.h","/usr/include/c++/8.2.1/bits/stl_iterator.h","/usr/include/c++/8.2.1/bits/ptr_traits.h","/usr/include/c++/8.2.1/debug/debug.h","/usr/include/c++/8.2.1/bits/postypes.h","/usr/include/c++/8.2.1/cwchar","/usr/include/wchar.h","/usr/include/bits/libc-header-start.h","/usr/include/bits/floatn.h","/usr/include/bits/floatn-common.h","/usr/include/bits/types/mbstate_t.h","/usr/include/bits/types/locale_t.h","/usr/include/c++/8.2.1/cstdint","/usr/lib/clang/7.0.1/include/stdint.h","/usr/include/stdint.h","/usr/include/bits/types.h","/usr/include/bits/stdint-intn.h","/usr/include/bits/stdint-uintn.h","/usr/include/c++/8.2.1/bits/allocator.h","/usr/include/c++/8.2.1/x86_64-pc-linux-gnu/bits/c++allocator.h","/usr/include/c++/8.2.1/ext/new_allocator.h","/usr/include/c++/8.2.1/new","/usr/include/c++/8.2.1/exception","/usr/include/c++/8.2.1/bits/exception.h","/usr/include/c++/8.2.1/bits/exception_ptr.h","/usr/include/c++/8.2.1/bits/cxxabi_init_exception.h","/usr/lib/clang/7.0.1/include/stddef.h","/usr/include/c++/8.2.1/typeinfo","/usr/include/c++/8.2.1/bits/hash_bytes.h","/usr/include/c++/8.2.1/bits/nested_exception.h","/usr/include/c++/8.2.1/bits/localefwd.h","/usr/include/c++/8.2.1/x86_64-pc-linux-gnu/bits/c++locale.h","/usr/include/c++/8.2.1/clocale","/usr/include/locale.h","/usr/include/c++/8.2.1/iosfwd","/usr/include/c++/8.2.1/cctype","/usr/include/ctype.h","/usr/include/endian.h","/usr/include/bits/byteswap.h","/usr/include/bits/uintn-identity.h","/usr/include/c++/8.2.1/bits/ostream_insert.h","/usr/include/c++/8.2.1/bits/stl_function.h","/usr/include/c++/8.2.1/bits/range_access.h","/usr/include/c++/8.2.1/initializer_list","/usr/include/c++/8.2.1/bits/basic_string.h","/usr/include/c++/8.2.1/ext/atomicity.h","/usr/include/c++/8.2.1/x86_64-pc-linux-gnu/bits/gthr.h","/usr/include/c++/8.2.1/x86_64-pc-linux-gnu/bits/gthr-default.h","/usr/include/pthread.h","/usr/include/sched.h","/usr/include/bits/types/time_t.h","/usr/include/bits/types/struct_timespec.h","/usr/include/bits/sched.h","/usr/include/time.h","/usr/include/bits/time.h","/usr/include/bits/timex.h","/usr/include/bits/types/struct_timeval.h","/usr/include/bits/types/clock_t.h","/usr/include/bits/types/struct_tm.h","/usr/include/bits/types/clockid_t.h","/usr/include/bits/types/timer_t.h","/usr/include/bits/types/struct_itimerspec.h","/usr/include/bits/pthreadtypes.h","/usr/include/bits/thread-shared-types.h","/usr/include/bits/pthreadtypes-arch.h","/usr/include/bits/setjmp.h","/usr/include/c++/8.2.1/ext/alloc_traits.h","/usr/include/c++/8.2.1/bits/alloc_traits.h","/usr/include/c++/8.2.1/ext/string_conversions.h","/usr/include/c++/8.2.1/cstdlib","/usr/include/stdlib.h","/usr/include/sys/types.h","/usr/include/sys/select.h","/usr/include/bits/select.h","/usr/include/bits/types/sigset_t.h","/usr/include/alloca.h","/usr/include/c++/8.2.1/bits/std_abs.h","/usr/include/c++/8.2.1/cstdio","/usr/include/stdio.h","/usr/include/bits/types/__fpos_t.h","/usr/include/bits/types/__fpos64_t.h","/usr/include/bits/types/struct_FILE.h","/usr/include/bits/types/cookie_io_functions_t.h","/usr/include/c++/8.2.1/cerrno","/usr/include/errno.h","/usr/include/bits/errno.h","/usr/include/linux/errno.h","/usr/include/asm/errno.h","/usr/include/asm-generic/errno.h","/usr/include/c++/8.2.1/bits/functional_hash.h","/usr/include/c++/8.2.1/bits/basic_string.tcc","/usr/include/string.h","/usr/include/strings.h","/usr/include/c++/8.2.1/stdlib.h","/usr/include/c++/8.2.1/iostream","/usr/include/c++/8.2.1/ostream","/usr/include/c++/8.2.1/ios","/usr/include/c++/8.2.1/bits/ios_base.h","/usr/include/c++/8.2.1/bits/locale_classes.h","/usr/include/c++/8.2.1/system_error","/usr/include/c++/8.2.1/x86_64-pc-linux-gnu/bits/error_constants.h","/usr/include/c++/8.2.1/stdexcept","/usr/include/c++/8.2.1/streambuf","/usr/include/c++/8.2.1/bits/basic_ios.h","/usr/include/c++/8.2.1/bits/locale_facets.h","/usr/include/c++/8.2.1/cwctype","/usr/include/wctype.h","/usr/include/bits/wctype-wchar.h","/usr/include/c++/8.2.1/bits/streambuf_iterator.h","/usr/include/c++/8.2.1/bits/ostream.tcc","/usr/include/c++/8.2.1/istream","/usr/include/c++/8.2.1/bits/istream.tcc","/usr/include/c++/8.2.1/fstream","/usr/include/c++/8.2.1/x86_64-pc-linux-gnu/bits/basic_file.h","/usr/include/c++/8.2.1/x86_64-pc-linux-gnu/bits/c++io.h","/usr/include/c++/8.2.1/bits/fstream.tcc","/usr/include/c++/8.2.1/cassert","/usr/include/assert.h","/usr/include/c++/8.2.1/sstream","/usr/include/c++/8.2.1/vector","/usr/include/c++/8.2.1/bits/stl_construct.h","/usr/include/c++/8.2.1/bits/stl_uninitialized.h","/usr/include/c++/8.2.1/bits/stl_vector.h","/usr/include/c++/8.2.1/bits/stl_bvector.h","/usr/include/c++/8.2.1/bits/predefined_ops.h","/usr/lib/clang/7.0.1/include/stdarg.h","/usr/include/bits/types/wint_t.h","/usr/include/bits/types/__mbstate_t.h","/usr/include/bits/types/__FILE.h","/usr/include/bits/types/FILE.h","/usr/include/bits/types/__locale_t.h","/usr/lib/clang/7.0.1/include/__stddef_max_align_t.h","/usr/include/c++/8.2.1/bits/cxxabi_forced.h","/usr/include/c++/8.2.1/backward/binders.h","/usr/include/bits/types/struct_sched_param.h","/usr/include/bits/cpu-set.h","/usr/include/c++/8.2.1/x86_64-pc-linux-gnu/bits/atomic_word.h","/usr/include/bits/types/__sigset_t.h","/usr/include/bits/sys_errlist.h","/usr/include/bits/types/error_t.h","/usr/include/c++/8.2.1/bits/locale_classes.tcc","/usr/include/c++/8.2.1/bits/streambuf.tcc","/usr/include/c++/8.2.1/x86_64-pc-linux-gnu/bits/ctype_base.h","/usr/include/c++/8.2.1/x86_64-pc-linux-gnu/bits/ctype_inline.h","/usr/include/c++/8.2.1/bits/locale_facets.tcc","/usr/include/c++/8.2.1/bits/basic_ios.tcc","/usr/include/c++/8.2.1/bits/codecvt.h","/usr/include/c++/8.2.1/bits/sstream.tcc","/usr/include/c++/8.2.1/bits/vector.tcc","/usr/include/stdc-predef.h","/usr/include/bits/wordsize.h","/usr/include/gnu/stubs-64.h","/usr/include/c++/8.2.1/x86_64-pc-linux-gnu/bits/cpu_defines.h","/usr/include/c++/8.2.1/bits/exception_defines.h","/usr/include/c++/8.2.1/debug/assertions.h","/usr/include/bits/wchar.h","/usr/include/bits/typesizes.h","/usr/include/bits/locale.h","/usr/include/bits/endian.h","/usr/include/bits/waitflags.h","/usr/include/bits/waitstatus.h","/usr/include/bits/stdlib-float.h","/usr/include/bits/stdio_lim.h","/usr/include/asm-generic/errno-base.h"],"skipped_by_preprocessor":[],"types":[{"id":0,"usr":13329300451238523594,"detailed_name":"ConfigFile","short_name_offset":0,"short_name_size":10,"kind":5,"hover":"","comments":"","declarations":["92:3-92:13|-1|1|4","93:12-93:22|-1|1|4"],"spell":"89:7-89:17|-1|1|2","extent":"89:1-177:2|-1|1|0","bases":[],"derived":[],"types":[],"funcs":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24],"vars":[5,6,7,8,4,9],"instances":[],"uses":["92:3-92:13|0|2|4"]},{"id":1,"usr":5401847601697785946,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["108:42-108:45|0|2|4","121:20-121:23|0|2|4","134:5-134:8|6|2|4","135:5-135:8|6|2|4","143:20-143:23|0|2|4","171:21-171:24|0|2|4"]},{"id":2,"usr":4160338041907786,"detailed_name":"std::__cxx11::string","short_name_offset":14,"short_name_size":6,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[0,1],"uses":["108:47-108:53|-1|1|4","134:10-134:16|-1|1|4","135:10-135:16|-1|1|4","171:26-171:32|-1|1|4"]},{"id":3,"usr":10413710731398360207,"detailed_name":"T","short_name_offset":0,"short_name_size":1,"kind":26,"hover":"","comments":"","declarations":[],"spell":"113:18-113:19|8|3|2","extent":"113:12-113:19|8|3|0","bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["114:50-114:51|-1|1|4","114:74-114:75|-1|1|4"]},{"id":4,"usr":312154532968870815,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["121:25-121:32|-1|1|4","143:25-143:32|-1|1|4"]},{"id":5,"usr":17530214843340823407,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["122:20-122:24|-1|1|4"]},{"id":6,"usr":7598859511745204140,"detailed_name":"ConfigFile::Entry","short_name_offset":12,"short_name_size":5,"kind":23,"hover":"","comments":"following routines allow recursive parsing. first convert config file to a vector of entries (<option name>, <option value>)\nthen in each level, a ConfigFile object parses the entry vector, assigns the correct options that the object knows, \nand passes the unrecognized entries to the next level","declarations":["137:5-137:10|-1|1|4"],"spell":"132:10-132:15|0|2|2","extent":"132:3-138:4|0|2|0","bases":[],"derived":[],"types":[],"funcs":[14],"vars":[0,1,2],"instances":[],"uses":["137:5-137:10|6|2|4"]},{"id":7,"usr":17,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[2,3,4,5,6,7,8,4],"uses":[]},{"id":8,"usr":10632925277399531852,"detailed_name":"ConfigFile::Entries","short_name_offset":12,"short_name_size":7,"kind":252,"hover":"typedef std::vector<Entry> ConfigFile::Entries","comments":"","declarations":[],"spell":"139:30-139:37|0|2|2","extent":"139:3-139:37|0|2|0","alias_of":7,"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["139:30-139:37|0|2|4","142:43-142:50|-1|1|4","143:39-143:46|-1|1|4","146:26-146:33|-1|1|4","146:45-146:52|-1|1|4"]},{"id":9,"usr":4456883852940446557,"detailed_name":"T","short_name_offset":0,"short_name_size":1,"kind":26,"hover":"","comments":"","declarations":[],"spell":"166:18-166:19|21|3|2","extent":"166:12-166:19|21|3|0","bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["167:48-167:49|-1|1|4"]},{"id":10,"usr":13,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[9],"uses":[]}],"funcs":[{"id":0,"usr":6825722097409129427,"detailed_name":"ConfigFile::ConfigFile()","short_name_offset":0,"short_name_size":10,"kind":9,"storage":1,"hover":"","comments":"","declarations":[{"spell":"92:3-92:13|0|2|1","param_spellings":[]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":1,"usr":16600510484957114555,"detailed_name":"virtual ConfigFile::~ConfigFile() noexcept","short_name_offset":20,"short_name_size":11,"kind":6,"storage":1,"hover":"","comments":"","declarations":[{"spell":"93:11-93:22|0|2|1","param_spellings":[]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":2,"usr":14056151096243060796,"detailed_name":"int ConfigFile::addOption(const char *optionName, int *destLocation)","short_name_offset":16,"short_name_size":9,"kind":6,"storage":1,"hover":"","comments":"","declarations":[{"spell":"102:7-102:16|0|2|1","param_spellings":["102:30-102:40","102:48-102:60"]},{"spell":"106:7-106:16|0|2|1","param_spellings":["106:30-106:40","106:50-106:62"]},{"spell":"109:7-109:16|0|2|1","param_spellings":["109:30-109:40","109:69-109:81"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":3,"usr":7365051120988780970,"detailed_name":"int ConfigFile::addOption(const char *optionName, bool *destLocation)","short_name_offset":16,"short_name_size":9,"kind":6,"storage":1,"hover":"","comments":"","declarations":[{"spell":"103:7-103:16|0|2|1","param_spellings":["103:30-103:40","103:49-103:61"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":4,"usr":20949830539444710,"detailed_name":"int ConfigFile::addOption(const char *optionName, float *destLocation)","short_name_offset":16,"short_name_size":9,"kind":6,"storage":1,"hover":"","comments":"","declarations":[{"spell":"104:7-104:16|0|2|1","param_spellings":["104:30-104:40","104:50-104:62"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":5,"usr":14209971039694359108,"detailed_name":"int ConfigFile::addOption(const char *optionName, double *destLocation)","short_name_offset":16,"short_name_size":9,"kind":6,"storage":1,"hover":"","comments":"","declarations":[{"spell":"105:7-105:16|0|2|1","param_spellings":["105:30-105:40","105:51-105:63"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":6,"usr":18172106856136934654,"detailed_name":"int ConfigFile::addOption(const char *optionName, char *destLocation)","short_name_offset":16,"short_name_size":9,"kind":6,"storage":1,"hover":"","comments":"","declarations":[{"spell":"107:7-107:16|0|2|1","param_spellings":["107:30-107:40","107:49-107:61"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":7,"usr":2641461472304687505,"detailed_name":"int ConfigFile::addOption(const char *optionName, std::string *destLocation)","short_name_offset":16,"short_name_size":9,"kind":6,"storage":1,"hover":"","comments":"","declarations":[{"spell":"108:7-108:16|0|2|1","param_spellings":["108:30-108:40","108:56-108:68"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":8,"usr":8491279745064644056,"detailed_name":"int ConfigFile::addOptionOptional(const char *optionName, T *destLocation, const T &defaultValue)","short_name_offset":16,"short_name_size":17,"kind":6,"storage":1,"hover":"","comments":"routines to specify option entries that are optional\nif not specified in a particular config file, the value will default to the given default value","declarations":[{"spell":"114:7-114:24|0|2|1","param_spellings":["114:38-114:48","114:54-114:66","114:78-114:90"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":9,"usr":2199666147144404422,"detailed_name":"int ConfigFile::addOptionOptional(const char *optionName, char *destLocation, const char *defaultValue)","short_name_offset":16,"short_name_size":17,"kind":6,"storage":1,"hover":"","comments":"","declarations":[{"spell":"115:7-115:24|0|2|1","param_spellings":["115:38-115:48","115:57-115:69","115:84-115:96"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":10,"usr":10680383588132041368,"detailed_name":"int ConfigFile::parseOptions(const char *filename, int verbose = 1)","short_name_offset":16,"short_name_size":12,"kind":6,"storage":1,"hover":"","comments":"=== routines to parse config files ===\nafter you have specified your option entries with addOption and/or addOptionOptional, \ncall \"parseOptions\" to open a particular configuration file and load the option values to their destination locations.","declarations":[{"spell":"120:7-120:19|0|2|1","param_spellings":["120:33-120:41","120:47-120:54"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":11,"usr":6026364647807868771,"detailed_name":"int ConfigFile::parseOptions(std::istream &in, int verbose = 1)","short_name_offset":16,"short_name_size":12,"kind":6,"storage":1,"hover":"","comments":"","declarations":[{"spell":"121:7-121:19|0|2|1","param_spellings":["121:35-121:37","121:43-121:50"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":12,"usr":17087347962586852076,"detailed_name":"int ConfigFile::parseOptions(FILE *fin, int verbose = 1)","short_name_offset":16,"short_name_size":12,"kind":6,"storage":1,"hover":"","comments":"","declarations":[{"spell":"122:7-122:19|0|2|1","param_spellings":["122:27-122:30","122:36-122:43"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":13,"usr":9587796897927221044,"detailed_name":"void ConfigFile::printOptions() const","short_name_offset":17,"short_name_size":12,"kind":6,"storage":1,"hover":"","comments":"after calling \"parseOptions\", you can print out the values of all options, to see the values that were read from the configuration file","declarations":[{"spell":"125:8-125:20|0|2|1","param_spellings":[]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":14,"usr":5843349212357473997,"detailed_name":"ConfigFile::Entry::Entry()","short_name_offset":12,"short_name_size":5,"kind":9,"storage":1,"hover":"","comments":"","declarations":[],"spell":"137:5-137:10|6|2|2","extent":"137:5-137:31|6|2|0","declaring_type":6,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":15,"usr":17964187641048810056,"detailed_name":"static int ConfigFile::parse(const char *filename, ConfigFile::Entries &entries, const char *stoppingString = \"**EOF\", int verbose = 1)","short_name_offset":23,"short_name_size":5,"kind":254,"storage":3,"hover":"","comments":"parse a file and return its config entries","declarations":[{"spell":"142:14-142:19|0|2|1","param_spellings":["142:33-142:41","142:53-142:60","142:75-142:89","142:105-142:112"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":16,"usr":4780063338219586647,"detailed_name":"static int ConfigFile::parse(std::istream &in, ConfigFile::Entries &entries, const char *stoppingString = \"**EOF\", int verbose = 1)","short_name_offset":23,"short_name_size":5,"kind":254,"storage":3,"hover":"","comments":"parse a file and return its config entries","declarations":[{"spell":"143:14-143:19|0|2|1","param_spellings":["143:35-143:37","143:49-143:56","143:71-143:85","143:101-143:108"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":17,"usr":11798945110786688359,"detailed_name":"int ConfigFile::parseOptions(const ConfigFile::Entries &entries, ConfigFile::Entries *remainingEntries = __null, int verbose = 1)","short_name_offset":16,"short_name_size":12,"kind":6,"storage":1,"hover":"","comments":"parse option from entries. If remainingEntries is provided, those entries that are not recognized are pushed into remainingEntries","declarations":[{"spell":"146:7-146:19|0|2|1","param_spellings":["146:36-146:43","146:55-146:71","146:84-146:91"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":18,"usr":9287833865439732155,"detailed_name":"void ConfigFile::setStoppingString(const char *stoppingString)","short_name_offset":17,"short_name_size":17,"kind":6,"storage":1,"hover":"","comments":"(optional) set a stopping string (when it is encountered in a file, parsing will stop); default: **EOF\nif the stopping string does not appear in a file, it will be parsed to the end","declarations":[{"spell":"152:8-152:25|0|2|1","param_spellings":["152:39-152:53"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":19,"usr":10655178635149055437,"detailed_name":"void ConfigFile::suppressWarnings(int suppressWarnings_)","short_name_offset":17,"short_name_size":16,"kind":6,"storage":1,"hover":"","comments":"you can disable printing out warnings (default: enabled)","declarations":[],"spell":"155:8-155:24|0|2|2","extent":"155:3-155:96|0|2|0","declaring_type":0,"bases":[],"derived":[],"vars":[3],"uses":[],"callees":[]},{"id":20,"usr":11677140154863954341,"detailed_name":"int ConfigFile::seekOption(const char *optionName)","short_name_offset":16,"short_name_size":10,"kind":6,"storage":1,"hover":"","comments":"finds a particular option name among all specified options","declarations":[{"spell":"164:7-164:17|0|2|1","param_spellings":["164:31-164:41"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":21,"usr":8050357525511503202,"detailed_name":"int ConfigFile::addOptionHelper(const char *optionName, T *destLocation)","short_name_offset":16,"short_name_size":15,"kind":6,"storage":1,"hover":"","comments":"a generic routine to add a new option entry to the list of all options","declarations":[{"spell":"167:7-167:22|0|2|1","param_spellings":["167:36-167:46","167:52-167:64"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":22,"usr":5429528294811393348,"detailed_name":"int ConfigFile::parseNumber(int type, const char *line, void *dest, int optionIndex, int verbose)","short_name_offset":16,"short_name_size":11,"kind":6,"storage":1,"hover":"","comments":"","declarations":[{"spell":"169:7-169:18|0|2|1","param_spellings":["169:23-169:27","169:42-169:46","169:55-169:59","169:65-169:76","169:82-169:89"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":23,"usr":4196143412325082827,"detailed_name":"static void ConfigFile::strip(std::string &s)","short_name_offset":24,"short_name_size":5,"kind":254,"storage":3,"hover":"","comments":"","declarations":[{"spell":"171:15-171:20|0|2|1","param_spellings":["171:35-171:36"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":24,"usr":890705896254189622,"detailed_name":"static void ConfigFile::upperCase(char *s)","short_name_offset":24,"short_name_size":9,"kind":254,"storage":3,"hover":"","comments":"convert string to uppercase","declarations":[{"spell":"172:15-172:24|0|2|1","param_spellings":["172:32-172:33"]}],"declaring_type":0,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]}],"vars":[{"id":0,"usr":281020345534617756,"detailed_name":"std::string ConfigFile::Entry::option","short_name_offset":31,"short_name_size":6,"hover":"","comments":"","declarations":[],"spell":"134:17-134:23|6|2|2","extent":"134:5-134:23|6|2|0","type":2,"uses":[],"kind":8,"storage":0},{"id":1,"usr":8831812859477956500,"detailed_name":"std::string ConfigFile::Entry::value","short_name_offset":31,"short_name_size":5,"hover":"","comments":"","declarations":[],"spell":"135:17-135:22|6|2|2","extent":"135:5-135:22|6|2|0","type":2,"uses":[],"kind":8,"storage":0},{"id":2,"usr":13814493919923638646,"detailed_name":"int ConfigFile::Entry::lineCount","short_name_offset":23,"short_name_size":9,"hover":"","comments":"","declarations":[],"spell":"136:9-136:18|6|2|2","extent":"136:5-136:18|6|2|0","type":7,"uses":["137:15-137:24|14|3|20"],"kind":8,"storage":0},{"id":3,"usr":1176980834457949064,"detailed_name":"int suppressWarnings_","short_name_offset":4,"short_name_size":17,"hover":"","comments":"","declarations":[],"spell":"155:29-155:46|19|3|2","extent":"155:25-155:46|19|3|0","type":7,"uses":["155:76-155:93|19|3|12"],"kind":253,"storage":1},{"id":4,"usr":15357356467546115465,"detailed_name":"int ConfigFile::suppressWarnings_","short_name_offset":16,"short_name_size":17,"hover":"","comments":"","declarations":[],"spell":"174:7-174:24|0|2|2","extent":"174:3-174:24|0|2|0","type":7,"uses":["155:56-155:73|19|3|20"],"kind":8,"storage":0},{"id":5,"usr":2244519838615914031,"detailed_name":"int ConfigFile::optionNames","short_name_offset":16,"short_name_size":11,"hover":"","comments":"","declarations":[],"spell":"158:28-158:39|0|2|2","extent":"158:3-158:39|0|2|0","type":7,"uses":[],"kind":8,"storage":0},{"id":6,"usr":4510708992505874125,"detailed_name":"int ConfigFile::optionTypes","short_name_offset":16,"short_name_size":11,"hover":"","comments":"","declarations":[],"spell":"159:20-159:31|0|2|2","extent":"159:3-159:31|0|2|0","type":7,"uses":[],"kind":8,"storage":0},{"id":7,"usr":5142628020140745,"detailed_name":"int ConfigFile::destLocations","short_name_offset":16,"short_name_size":13,"hover":"","comments":"","declarations":[],"spell":"160:22-160:35|0|2|2","extent":"160:3-160:35|0|2|0","type":7,"uses":[],"kind":8,"storage":0},{"id":8,"usr":15184707921989214584,"detailed_name":"int ConfigFile::optionSet","short_name_offset":16,"short_name_size":9,"hover":"","comments":"","declarations":[],"spell":"162:21-162:30|0|2|2","extent":"162:3-162:30|0|2|0","type":7,"uses":[],"kind":8,"storage":0},{"id":9,"usr":16883194394810475839,"detailed_name":"char [32] ConfigFile::stoppingString","short_name_offset":22,"short_name_size":14,"hover":"","comments":"","declarations":[],"spell":"176:8-176:22|0|2|2","extent":"176:3-176:26|0|2|0","type":10,"uses":[],"kind":8,"storage":0},{"id":10,"usr":15610821138869039687,"detailed_name":"_CONFIGFILE_H_","short_name_offset":0,"short_name_size":14,"hover":"#define _CONFIGFILE_H_","comments":"","declarations":[],"spell":"2:9-2:23|-1|1|2","extent":"2:9-2:23|-1|1|0","uses":[],"kind":255,"storage":0},{"id":11,"usr":291038054068649371,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["146:74-146:78|-1|1|4"],"kind":0,"storage":0}]}