15
{"last_modification_time":1548168587,"language":1,"import_file":"/home/dark/proj/faust/embedded/faustremote/dns_avahi/avahi-common/simple-watch.c","args":["clang","-working-directory=/home/dark/proj/faust/","/home/dark/proj/faust/embedded/faustremote/dns_avahi/avahi-common/simple-watch.c","-resource-dir=/usr/lib/clang/7.0.1","-Wno-unknown-warning-option","-fparse-all-comments","-isystem/usr/local/include","-isystem/usr/lib/clang/7.0.1/include","-isystem/usr/include"],"includes":[{"line":24,"resolved_path":"/usr/lib/clang/7.0.1/include/inttypes.h"},{"line":25,"resolved_path":"/usr/include/sys/time.h"},{"line":27,"resolved_path":"/home/dark/proj/faust/embedded/faustremote/dns_avahi/avahi-common/cdecl.h"}],"dependencies":["/home/dark/proj/faust/embedded/faustremote/dns_avahi/avahi-common/simple-watch.c","/usr/include/sys/poll.h","/usr/include/features.h","/usr/include/sys/cdefs.h","/usr/include/gnu/stubs.h","/usr/include/assert.h","/usr/include/string.h","/usr/include/bits/libc-header-start.h","/usr/include/bits/types/locale_t.h","/usr/include/strings.h","/usr/include/errno.h","/usr/include/bits/errno.h","/usr/include/linux/errno.h","/usr/include/asm/errno.h","/usr/include/asm-generic/errno.h","/usr/include/unistd.h","/usr/include/bits/environments.h","/usr/include/bits/types.h","/usr/include/bits/getopt_posix.h","/usr/include/fcntl.h","/usr/include/bits/fcntl.h","/usr/include/bits/types/struct_timespec.h","/usr/include/stdio.h","/usr/include/bits/types/__fpos_t.h","/usr/include/bits/types/__fpos64_t.h","/usr/include/bits/types/struct_FILE.h","/home/dark/proj/faust/embedded/faustremote/dns_avahi/avahi-common/llist.h","/home/dark/proj/faust/embedded/faustremote/dns_avahi/avahi-common/malloc.h","/usr/include/sys/types.h","/usr/include/bits/types/clock_t.h","/usr/include/bits/types/clockid_t.h","/usr/include/bits/types/time_t.h","/usr/include/bits/types/timer_t.h","/usr/include/bits/stdint-intn.h","/usr/include/endian.h","/usr/include/bits/byteswap.h","/usr/include/bits/uintn-identity.h","/usr/include/sys/select.h","/usr/include/bits/select.h","/usr/include/bits/types/sigset_t.h","/usr/include/bits/types/struct_timeval.h","/usr/include/bits/pthreadtypes.h","/usr/include/bits/thread-shared-types.h","/usr/include/bits/pthreadtypes-arch.h","/usr/lib/clang/7.0.1/include/limits.h","/usr/include/limits.h","/usr/include/bits/posix1_lim.h","/usr/include/bits/local_lim.h","/home/dark/proj/faust/embedded/faustremote/dns_avahi/avahi-common/gccmacro.h","/usr/lib/clang/7.0.1/include/inttypes.h","/usr/include/inttypes.h","/usr/lib/clang/7.0.1/include/stdint.h","/usr/include/stdint.h","/usr/include/bits/stdint-uintn.h","/usr/include/sys/time.h","/home/dark/proj/faust/embedded/faustremote/dns_avahi/avahi-common/simple-watch.h","/home/dark/proj/faust/embedded/faustremote/dns_avahi/avahi-common/watch.h","/usr/lib/clang/7.0.1/include/stddef.h","/usr/include/bits/types/__locale_t.h","/usr/include/bits/confname.h","/usr/include/bits/getopt_core.h","/usr/include/bits/stat.h","/usr/lib/clang/7.0.1/include/stdarg.h","/usr/include/bits/types/__mbstate_t.h","/usr/include/bits/types/__FILE.h","/usr/include/bits/types/FILE.h","/usr/include/bits/sys_errlist.h","/usr/include/bits/types/__sigset_t.h","/usr/include/stdc-predef.h","/usr/include/bits/wordsize.h","/usr/include/gnu/stubs-64.h","/usr/include/bits/poll.h","/usr/include/asm-generic/errno-base.h","/usr/include/bits/posix_opt.h","/usr/include/bits/typesizes.h","/usr/include/bits/fcntl-linux.h","/usr/include/bits/stdio_lim.h","/home/dark/proj/faust/embedded/faustremote/dns_avahi/avahi-common/cdecl.h","/usr/include/bits/endian.h","/usr/include/linux/limits.h","/usr/include/bits/posix2_lim.h","/usr/include/bits/wchar.h"],"skipped_by_preprocessor":[],"types":[{"id":0,"usr":11502421298173137922,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["33:9-33:16|-1|1|4"]},{"id":1,"usr":1452476557329956789,"detailed_name":"AvahiUsec","short_name_offset":0,"short_name_size":9,"kind":252,"hover":"typedef int64_t AvahiUsec","comments":"A numeric data type for storing microsecond values. (signed 64bit integer)","declarations":[],"spell":"33:17-33:26|-1|1|2","extent":"33:1-33:26|-1|1|0","alias_of":0,"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["33:17-33:26|-1|1|4","39:1-39:10|-1|1|4","42:54-42:63|-1|1|4","45:1-45:10|-1|1|4"]},{"id":2,"usr":9845685975729767257,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["36:40-36:47|-1|1|4","36:65-36:72|-1|1|4","39:43-39:50|-1|1|4","39:68-39:75|-1|1|4","42:8-42:15|-1|1|4","42:42-42:49|-1|1|4","45:34-45:41|-1|1|4","50:8-50:15|-1|1|4","50:42-50:49|-1|1|4"]}],"funcs":[{"id":0,"usr":18347464699487543805,"detailed_name":"int avahi_timeval_compare(const struct timeval *a, const struct timeval *b)","short_name_offset":4,"short_name_size":21,"kind":12,"storage":1,"hover":"","comments":"Compare two timeval structures and return a negative value when a < b, 0 when a == b and a positive value otherwise","declarations":[{"spell":"36:5-36:26|-1|1|1","param_spellings":["36:49-36:50","36:74-36:75"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":1,"usr":16730310122365402808,"detailed_name":"AvahiUsec avahi_timeval_diff(const struct timeval *a, const struct timeval *b)","short_name_offset":10,"short_name_size":18,"kind":12,"storage":1,"hover":"","comments":"Calculate the difference between two timeval structures as microsecond value","declarations":[{"spell":"39:11-39:29|-1|1|1","param_spellings":["39:52-39:53","39:77-39:78"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":2,"usr":8529343948428056751,"detailed_name":"struct timeval *avahi_timeval_add(struct timeval *a, AvahiUsec usec)","short_name_offset":16,"short_name_size":17,"kind":12,"storage":1,"hover":"","comments":"Add a number of microseconds to the specified timeval structure and return it. *a is modified.","declarations":[{"spell":"42:17-42:34|-1|1|1","param_spellings":["42:51-42:52","42:64-42:68"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":3,"usr":17896548290369520520,"detailed_name":"AvahiUsec avahi_age(const struct timeval *a)","short_name_offset":10,"short_name_size":9,"kind":12,"storage":1,"hover":"","comments":"Return the difference between the current time and *a. Positive if *a was earlier","declarations":[{"spell":"45:11-45:20|-1|1|1","param_spellings":["45:43-45:44"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":4,"usr":7348519801042737485,"detailed_name":"struct timeval *avahi_elapse_time(struct timeval *tv, unsigned int ms, unsigned int j)","short_name_offset":16,"short_name_size":17,"kind":12,"storage":1,"hover":"","comments":"Fill *tv with the current time plus \"ms\" milliseconds plus an\nextra jitter of \"j\" milliseconds. Pass 0 for j if you don't want\nthe jitter","declarations":[{"spell":"50:17-50:34|-1|1|1","param_spellings":["50:51-50:53","50:64-50:66","50:77-50:78"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]}],"vars":[{"id":0,"usr":15814285931186372709,"detailed_name":"footimevalhfoo","short_name_offset":0,"short_name_size":14,"hover":"#define footimevalhfoo","comments":"","declarations":[],"spell":"2:9-2:23|-1|1|2","extent":"2:9-2:23|-1|1|0","uses":[],"kind":255,"storage":0},{"id":1,"usr":13934000849307764093,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["30:1-30:19|-1|1|4"],"kind":0,"storage":0},{"id":2,"usr":5853952557760378306,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["52:1-52:17|-1|1|4"],"kind":0,"storage":0}]}