15
{"last_modification_time":1548168587,"language":1,"import_file":"/home/dark/proj/faust/embedded/faustremote/dns_avahi/avahi-common/domain.c","args":["clang","-working-directory=/home/dark/proj/faust/","/home/dark/proj/faust/embedded/faustremote/dns_avahi/avahi-common/domain.c","-resource-dir=/usr/lib/clang/7.0.1","-Wno-unknown-warning-option","-fparse-all-comments","-isystem/usr/local/include","-isystem/usr/lib/clang/7.0.1/include","-isystem/usr/include"],"includes":[{"line":24,"resolved_path":"/usr/lib/clang/7.0.1/include/inttypes.h"},{"line":25,"resolved_path":"/usr/include/sys/types.h"},{"line":27,"resolved_path":"/home/dark/proj/faust/embedded/faustremote/dns_avahi/avahi-common/cdecl.h"}],"dependencies":["/home/dark/proj/faust/embedded/faustremote/dns_avahi/avahi-common/domain.c","/usr/include/string.h","/usr/include/bits/libc-header-start.h","/usr/include/features.h","/usr/include/sys/cdefs.h","/usr/include/gnu/stubs.h","/usr/include/bits/types/locale_t.h","/usr/include/strings.h","/usr/include/unistd.h","/usr/include/bits/environments.h","/usr/include/bits/types.h","/usr/include/bits/getopt_posix.h","/usr/include/fcntl.h","/usr/include/bits/fcntl.h","/usr/include/bits/types/struct_timespec.h","/usr/include/errno.h","/usr/include/bits/errno.h","/usr/include/linux/errno.h","/usr/include/asm/errno.h","/usr/include/asm-generic/errno.h","/usr/lib/clang/7.0.1/include/limits.h","/usr/include/limits.h","/usr/include/bits/posix1_lim.h","/usr/include/bits/local_lim.h","/usr/include/stdio.h","/usr/include/bits/types/__fpos_t.h","/usr/include/bits/types/__fpos64_t.h","/usr/include/bits/types/struct_FILE.h","/usr/include/ctype.h","/usr/include/endian.h","/usr/include/bits/byteswap.h","/usr/include/bits/uintn-identity.h","/usr/include/stdlib.h","/usr/include/bits/floatn.h","/usr/include/bits/floatn-common.h","/usr/include/sys/types.h","/usr/include/bits/types/clock_t.h","/usr/include/bits/types/clockid_t.h","/usr/include/bits/types/time_t.h","/usr/include/bits/types/timer_t.h","/usr/include/bits/stdint-intn.h","/usr/include/sys/select.h","/usr/include/bits/select.h","/usr/include/bits/types/sigset_t.h","/usr/include/bits/types/struct_timeval.h","/usr/include/bits/pthreadtypes.h","/usr/include/bits/thread-shared-types.h","/usr/include/bits/pthreadtypes-arch.h","/usr/include/alloca.h","/usr/include/assert.h","/usr/lib/clang/7.0.1/include/inttypes.h","/usr/include/inttypes.h","/usr/lib/clang/7.0.1/include/stdint.h","/usr/include/stdint.h","/usr/include/bits/stdint-uintn.h","/home/dark/proj/faust/embedded/faustremote/dns_avahi/avahi-common/malloc.h","/home/dark/proj/faust/embedded/faustremote/dns_avahi/avahi-common/gccmacro.h","/home/dark/proj/faust/embedded/faustremote/dns_avahi/avahi-common/error.h","/home/dark/proj/faust/embedded/faustremote/dns_avahi/avahi-common/address.h","/home/dark/proj/faust/embedded/faustremote/dns_avahi/avahi-common/utf8.h","/usr/lib/clang/7.0.1/include/stddef.h","/usr/include/bits/types/__locale_t.h","/usr/include/bits/confname.h","/usr/include/bits/getopt_core.h","/usr/include/bits/stat.h","/usr/lib/clang/7.0.1/include/stdarg.h","/usr/include/bits/types/__mbstate_t.h","/usr/include/bits/types/__FILE.h","/usr/include/bits/types/FILE.h","/usr/include/bits/sys_errlist.h","/usr/include/bits/types/__sigset_t.h","/usr/include/stdc-predef.h","/usr/include/bits/wordsize.h","/usr/include/gnu/stubs-64.h","/usr/include/bits/posix_opt.h","/usr/include/bits/typesizes.h","/usr/include/bits/fcntl-linux.h","/usr/include/asm-generic/errno-base.h","/usr/include/linux/limits.h","/usr/include/bits/posix2_lim.h","/usr/include/bits/stdio_lim.h","/usr/include/bits/endian.h","/usr/include/bits/waitflags.h","/usr/include/bits/waitstatus.h","/usr/include/bits/stdlib-float.h","/usr/include/bits/wchar.h","/home/dark/proj/faust/embedded/faustremote/dns_avahi/avahi-common/cdecl.h"],"skipped_by_preprocessor":[],"types":[{"id":0,"usr":5778908825573379114,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["50:56-50:62|-1|1|4","73:59-73:65|-1|1|4","76:43-76:49|-1|1|4","76:79-76:85|-1|1|4","113:38-113:44|-1|1|4","116:57-116:63|-1|1|4","116:87-116:93|-1|1|4","116:119-116:125|-1|1|4"]}],"funcs":[{"id":0,"usr":5864807402733087939,"detailed_name":"char *avahi_normalize_name(const char *s, char *ret_s, size_t size)","short_name_offset":6,"short_name_size":20,"kind":12,"storage":1,"hover":"","comments":"Normalize a domain name into canonical form. This drops trailing\ndots and removes useless backslash escapes.","declarations":[{"spell":"50:7-50:27|-1|1|1","param_spellings":["50:40-50:41","50:49-50:54","50:63-50:67"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":1,"usr":14622463815457709665,"detailed_name":"char *avahi_normalize_name_strdup(const char *s)","short_name_offset":6,"short_name_size":27,"kind":12,"storage":1,"hover":"","comments":"Normalize a domain name into canonical form. This drops trailing\ndots and removes useless backslash escapes. avahi_free() the\nresult!","declarations":[{"spell":"55:7-55:34|-1|1|1","param_spellings":["55:47-55:48"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":2,"usr":13994664704487280920,"detailed_name":"int avahi_domain_equal(const char *a, const char *b)","short_name_offset":4,"short_name_size":18,"kind":12,"storage":1,"hover":"","comments":"Return 1 when the specified domain names are equal, 0 otherwise","declarations":[{"spell":"62:5-62:23|-1|1|1","param_spellings":["62:36-62:37","62:51-62:52"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":3,"usr":2058744761249276377,"detailed_name":"unsigned int avahi_domain_hash(const char *name)","short_name_offset":13,"short_name_size":17,"kind":12,"storage":1,"hover":"","comments":"Return some kind of hash value for the domain, useful for using domains as hash table keys.","declarations":[{"spell":"65:10-65:27|-1|1|1","param_spellings":["65:40-65:44"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":4,"usr":12091769341673311005,"detailed_name":"char *avahi_unescape_label(const char **name, char *dest, size_t size)","short_name_offset":6,"short_name_size":20,"kind":12,"storage":1,"hover":"","comments":"Read the first label from the textual domain name *name, unescape\nit and write it to dest, *name is changed to point to the next label","declarations":[{"spell":"73:7-73:27|-1|1|1","param_spellings":["73:41-73:45","73:53-73:57","73:66-73:70"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":5,"usr":8233953615121253861,"detailed_name":"char *avahi_escape_label(const char *src, size_t src_length, char **ret_name, size_t *ret_size)","short_name_offset":6,"short_name_size":18,"kind":12,"storage":1,"hover":"","comments":"Escape the domain name in *src and write it to *ret_name","declarations":[{"spell":"76:7-76:25|-1|1|1","param_spellings":["76:38-76:41","76:50-76:60","76:69-76:77","76:87-76:95"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":6,"usr":11726308409575316567,"detailed_name":"int avahi_is_valid_service_type_generic(const char *t)","short_name_offset":4,"short_name_size":35,"kind":12,"storage":1,"hover":"","comments":"Return 1 when the specified string contains a valid generic DNS-SD\nservice type (i.e. a series of words starting with \"_\"), 0\notherwise","declarations":[{"spell":"85:5-85:40|-1|1|1","param_spellings":["85:53-85:54"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":7,"usr":15709768304908275598,"detailed_name":"int avahi_is_valid_service_type_strict(const char *t)","short_name_offset":4,"short_name_size":34,"kind":12,"storage":1,"hover":"","comments":"Return 1 when the specified string contains a valid strict DNS-SD\nservice type (i.e. consisting of only two words, the latter being\neither _udp or _tcp), 0 otherwise","declarations":[{"spell":"90:5-90:39|-1|1|1","param_spellings":["90:52-90:53"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":8,"usr":16968018863407279041,"detailed_name":"int avahi_is_valid_service_subtype(const char *t)","short_name_offset":4,"short_name_size":30,"kind":12,"storage":1,"hover":"","comments":"Return 1 when the specified string contains a valid DNS-SD service\nsubtype, 0 otherwise","declarations":[{"spell":"94:5-94:35|-1|1|1","param_spellings":["94:48-94:49"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":9,"usr":14137896849899389128,"detailed_name":"int avahi_is_valid_domain_name(const char *t)","short_name_offset":4,"short_name_size":26,"kind":12,"storage":1,"hover":"","comments":"Return 1 when the specified string contains a valid domain name, 0 otherwise","declarations":[{"spell":"97:5-97:31|-1|1|1","param_spellings":["97:44-97:45"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":10,"usr":14484565483419400462,"detailed_name":"int avahi_is_valid_service_name(const char *t)","short_name_offset":4,"short_name_size":27,"kind":12,"storage":1,"hover":"","comments":"Return 1 when the specified string contains a valid DNS-SD service name, 0 otherwise","declarations":[{"spell":"100:5-100:32|-1|1|1","param_spellings":["100:45-100:46"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":11,"usr":9586482626282477064,"detailed_name":"int avahi_is_valid_host_name(const char *t)","short_name_offset":4,"short_name_size":24,"kind":12,"storage":1,"hover":"","comments":"Return 1 when the specified string contains a valid non-FQDN host name (i.e. without dots), 0 otherwise","declarations":[{"spell":"103:5-103:29|-1|1|1","param_spellings":["103:42-103:43"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":12,"usr":17666692930433822568,"detailed_name":"int avahi_is_valid_fqdn(const char *t)","short_name_offset":4,"short_name_size":19,"kind":12,"storage":1,"hover":"","comments":"Return 1 when the specified string contains a valid FQDN host name (i.e. with more than one label and non-numerical), 0 otherwise. \\since 0.6.9","declarations":[{"spell":"106:5-106:24|-1|1|1","param_spellings":["106:37-106:38"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":13,"usr":5049672978878337594,"detailed_name":"int avahi_service_name_join(char *p, size_t size, const char *name, const char *type, const char *domain)","short_name_offset":4,"short_name_size":23,"kind":12,"storage":1,"hover":"","comments":"Construct a valid complete DNS-SD service name from a name, a type and a domain","declarations":[{"spell":"113:5-113:28|-1|1|1","param_spellings":["113:35-113:36","113:45-113:49","113:63-113:67","113:81-113:85","113:99-113:105"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":14,"usr":2770086798469438561,"detailed_name":"int avahi_service_name_split(const char *p, char *name, size_t name_size, char *type, size_t type_size, char *domain, size_t domain_size)","short_name_offset":4,"short_name_size":24,"kind":12,"storage":1,"hover":"","comments":"Split a full service name into name, type and domain","declarations":[{"spell":"116:5-116:29|-1|1|1","param_spellings":["116:42-116:43","116:51-116:55","116:64-116:73","116:81-116:85","116:94-116:103","116:111-116:117","116:126-116:137"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":15,"usr":8391887600668711347,"detailed_name":"const char *avahi_get_type_from_subtype(const char *t)","short_name_offset":12,"short_name_size":27,"kind":12,"storage":1,"hover":"","comments":"Return a pointer to the type section of a subtype i.e. _foo._sub._bar._tcp => _bar._tcp","declarations":[{"spell":"123:13-123:40|-1|1|1","param_spellings":["123:53-123:54"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]}],"vars":[{"id":0,"usr":16904377626898393255,"detailed_name":"foodomainhfoo","short_name_offset":0,"short_name_size":13,"hover":"#define foodomainhfoo","comments":"","declarations":[],"spell":"2:9-2:22|-1|1|2","extent":"2:9-2:22|-1|1|0","uses":[],"kind":255,"storage":0},{"id":1,"usr":13934000849307764093,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["30:1-30:19|-1|1|4"],"kind":0,"storage":0},{"id":2,"usr":8831583217539597284,"detailed_name":"AVAHI_DOMAIN_NAME_MAX","short_name_offset":0,"short_name_size":21,"hover":"#define AVAHI_DOMAIN_NAME_MAX 1014","comments":"","declarations":[],"spell":"41:9-41:30|-1|1|2","extent":"41:9-41:35|-1|1|0","uses":[],"kind":255,"storage":0},{"id":3,"usr":5463444000861639222,"detailed_name":"AVAHI_LABEL_MAX","short_name_offset":0,"short_name_size":15,"hover":"#define AVAHI_LABEL_MAX 64","comments":"","declarations":[],"spell":"44:9-44:24|-1|1|2","extent":"44:9-44:27|-1|1|0","uses":[],"kind":255,"storage":0},{"id":4,"usr":5853952557760378306,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["127:1-127:17|-1|1|4"],"kind":0,"storage":0}]}