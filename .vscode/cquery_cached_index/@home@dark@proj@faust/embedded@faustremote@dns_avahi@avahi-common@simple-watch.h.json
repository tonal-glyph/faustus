15
{"last_modification_time":1548168587,"language":1,"import_file":"/home/dark/proj/faust/embedded/faustremote/dns_avahi/avahi-common/simple-watch.c","args":["clang","-working-directory=/home/dark/proj/faust/","/home/dark/proj/faust/embedded/faustremote/dns_avahi/avahi-common/simple-watch.c","-resource-dir=/usr/lib/clang/7.0.1","-Wno-unknown-warning-option","-fparse-all-comments","-isystem/usr/local/include","-isystem/usr/lib/clang/7.0.1/include","-isystem/usr/include"],"includes":[{"line":24,"resolved_path":"/usr/include/sys/poll.h"},{"line":25,"resolved_path":"/home/dark/proj/faust/embedded/faustremote/dns_avahi/avahi-common/cdecl.h"},{"line":26,"resolved_path":"/home/dark/proj/faust/embedded/faustremote/dns_avahi/avahi-common/watch.h"}],"dependencies":["/home/dark/proj/faust/embedded/faustremote/dns_avahi/avahi-common/simple-watch.c","/usr/include/sys/poll.h","/usr/include/features.h","/usr/include/sys/cdefs.h","/usr/include/gnu/stubs.h","/usr/include/assert.h","/usr/include/string.h","/usr/include/bits/libc-header-start.h","/usr/include/bits/types/locale_t.h","/usr/include/strings.h","/usr/include/errno.h","/usr/include/bits/errno.h","/usr/include/linux/errno.h","/usr/include/asm/errno.h","/usr/include/asm-generic/errno.h","/usr/include/unistd.h","/usr/include/bits/environments.h","/usr/include/bits/types.h","/usr/include/bits/getopt_posix.h","/usr/include/fcntl.h","/usr/include/bits/fcntl.h","/usr/include/bits/types/struct_timespec.h","/usr/include/stdio.h","/usr/include/bits/types/__fpos_t.h","/usr/include/bits/types/__fpos64_t.h","/usr/include/bits/types/struct_FILE.h","/home/dark/proj/faust/embedded/faustremote/dns_avahi/avahi-common/llist.h","/home/dark/proj/faust/embedded/faustremote/dns_avahi/avahi-common/malloc.h","/usr/include/sys/types.h","/usr/include/bits/types/clock_t.h","/usr/include/bits/types/clockid_t.h","/usr/include/bits/types/time_t.h","/usr/include/bits/types/timer_t.h","/usr/include/bits/stdint-intn.h","/usr/include/endian.h","/usr/include/bits/byteswap.h","/usr/include/bits/uintn-identity.h","/usr/include/sys/select.h","/usr/include/bits/select.h","/usr/include/bits/types/sigset_t.h","/usr/include/bits/types/struct_timeval.h","/usr/include/bits/pthreadtypes.h","/usr/include/bits/thread-shared-types.h","/usr/include/bits/pthreadtypes-arch.h","/usr/lib/clang/7.0.1/include/limits.h","/usr/include/limits.h","/usr/include/bits/posix1_lim.h","/usr/include/bits/local_lim.h","/home/dark/proj/faust/embedded/faustremote/dns_avahi/avahi-common/gccmacro.h","/home/dark/proj/faust/embedded/faustremote/dns_avahi/avahi-common/timeval.h","/usr/lib/clang/7.0.1/include/inttypes.h","/usr/include/inttypes.h","/usr/lib/clang/7.0.1/include/stdint.h","/usr/include/stdint.h","/usr/include/bits/stdint-uintn.h","/usr/include/sys/time.h","/home/dark/proj/faust/embedded/faustremote/dns_avahi/avahi-common/watch.h","/usr/lib/clang/7.0.1/include/stddef.h","/usr/include/bits/types/__locale_t.h","/usr/include/bits/confname.h","/usr/include/bits/getopt_core.h","/usr/include/bits/stat.h","/usr/lib/clang/7.0.1/include/stdarg.h","/usr/include/bits/types/__mbstate_t.h","/usr/include/bits/types/__FILE.h","/usr/include/bits/types/FILE.h","/usr/include/bits/sys_errlist.h","/usr/include/bits/types/__sigset_t.h","/usr/include/stdc-predef.h","/usr/include/bits/wordsize.h","/usr/include/gnu/stubs-64.h","/usr/include/bits/poll.h","/usr/include/asm-generic/errno-base.h","/usr/include/bits/posix_opt.h","/usr/include/bits/typesizes.h","/usr/include/bits/fcntl-linux.h","/usr/include/bits/stdio_lim.h","/home/dark/proj/faust/embedded/faustremote/dns_avahi/avahi-common/cdecl.h","/usr/include/bits/endian.h","/usr/include/linux/limits.h","/usr/include/bits/posix2_lim.h","/usr/include/bits/wchar.h"],"skipped_by_preprocessor":[],"types":[{"id":0,"usr":14680488235600995450,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["34:16-34:31|-1|1|4"]},{"id":1,"usr":11740339223203227336,"detailed_name":"AvahiSimplePoll","short_name_offset":0,"short_name_size":15,"kind":252,"hover":"typedef struct AvahiSimplePoll AvahiSimplePoll","comments":"A main loop object. Main loops of this type aren't very flexible\nsince they only support a single wakeup type. Nevertheless it\nshould suffice for small test and example applications.","declarations":[],"spell":"34:32-34:47|-1|1|2","extent":"34:1-34:47|-1|1|0","alias_of":0,"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["34:32-34:47|-1|1|4","37:1-37:16|-1|1|4","40:29-40:44|-1|1|4","45:40-45:55|-1|1|4","56:31-56:46|-1|1|4","60:29-60:44|-1|1|4","66:33-66:48|-1|1|4","69:31-69:46|-1|1|4","72:27-72:42|-1|1|4","75:32-75:47|-1|1|4","78:28-78:43|-1|1|4","81:31-81:46|-1|1|4"]},{"id":2,"usr":6706779819942363667,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["45:7-45:16|-1|1|4"]},{"id":3,"usr":13838176792705659279,"detailed_name":"<fundamental>","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":[]},{"id":4,"usr":1513142363549378078,"detailed_name":"AvahiPollFunc","short_name_offset":0,"short_name_size":13,"kind":252,"hover":"typedef int (*AvahiPollFunc)(struct pollfd *ufds, unsigned int nfds, int timeout, void *userdata)","comments":"Prototype for a poll() type function","declarations":[],"spell":"63:15-63:28|-1|1|2","extent":"63:1-63:98|-1|1|0","alias_of":3,"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["63:15-63:28|-1|1|4","66:53-66:66|-1|1|4"]},{"id":5,"usr":10664022291928924013,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["63:37-63:43|-1|1|4"]}],"funcs":[{"id":0,"usr":11094223523967688968,"detailed_name":"AvahiSimplePoll *avahi_simple_poll_new()","short_name_offset":17,"short_name_size":21,"kind":12,"storage":1,"hover":"","comments":"Create a new main loop object","declarations":[{"spell":"37:18-37:39|-1|1|1","param_spellings":[]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":1,"usr":15383475324763697372,"detailed_name":"void avahi_simple_poll_free(AvahiSimplePoll *s)","short_name_offset":5,"short_name_size":22,"kind":12,"storage":1,"hover":"","comments":"Free a main loop object","declarations":[{"spell":"40:6-40:28|-1|1|1","param_spellings":["40:46-40:47"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":2,"usr":10507132229927788032,"detailed_name":"const AvahiPoll *avahi_simple_poll_get(AvahiSimplePoll *s)","short_name_offset":17,"short_name_size":21,"kind":12,"storage":1,"hover":"","comments":"Return the abstracted poll API object for this main loop\nobject. The is will return the same pointer each time it is\ncalled.","declarations":[{"spell":"45:18-45:39|-1|1|1","param_spellings":["45:57-45:58"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":3,"usr":2348967528933274714,"detailed_name":"int avahi_simple_poll_iterate(AvahiSimplePoll *s, int sleep_time)","short_name_offset":4,"short_name_size":25,"kind":12,"storage":1,"hover":"","comments":"Run a single main loop iteration of this main loop. If sleep_time\nis < 0 this will block until any of the registered events happens,\nthen it will execute the attached callback function. If sleep_time is\n0 the routine just checks if any event is pending. If yes the attached\ncallback function is called, otherwise the function returns\nimmediately. If sleep_time > 0 the function will block for at most the\nspecified time in msecs. Returns -1 on error, 0 on success and 1 if a\nquit request has been scheduled. Usually this function should be called\nin a loop until it returns a non-zero value","declarations":[{"spell":"56:5-56:30|-1|1|1","param_spellings":["56:48-56:49","56:55-56:65"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":4,"usr":6060071888812594352,"detailed_name":"void avahi_simple_poll_quit(AvahiSimplePoll *s)","short_name_offset":5,"short_name_size":22,"kind":12,"storage":1,"hover":"","comments":"Request that the main loop quits. If this is called the next\ncall to avahi_simple_poll_iterate() will return 1","declarations":[{"spell":"60:6-60:28|-1|1|1","param_spellings":["60:46-60:47"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":5,"usr":3389642910262750323,"detailed_name":"void avahi_simple_poll_set_func(AvahiSimplePoll *s, AvahiPollFunc func, void *userdata)","short_name_offset":5,"short_name_size":26,"kind":12,"storage":1,"hover":"","comments":"Replace the internally used poll() function. By default the system's poll() will be used","declarations":[{"spell":"66:6-66:32|-1|1|1","param_spellings":["66:50-66:51","66:67-66:71","66:79-66:87"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":6,"usr":8473846904407018205,"detailed_name":"int avahi_simple_poll_prepare(AvahiSimplePoll *s, int timeout)","short_name_offset":4,"short_name_size":25,"kind":12,"storage":1,"hover":"","comments":"The first stage of avahi_simple_poll_iterate(), use this function only if you know what you do","declarations":[{"spell":"69:5-69:30|-1|1|1","param_spellings":["69:48-69:49","69:55-69:62"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":7,"usr":11814768687721937626,"detailed_name":"int avahi_simple_poll_run(AvahiSimplePoll *s)","short_name_offset":4,"short_name_size":21,"kind":12,"storage":1,"hover":"","comments":"The second stage of avahi_simple_poll_iterate(), use this function only if you know what you do","declarations":[{"spell":"72:5-72:26|-1|1|1","param_spellings":["72:44-72:45"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":8,"usr":11550974786634694151,"detailed_name":"int avahi_simple_poll_dispatch(AvahiSimplePoll *s)","short_name_offset":4,"short_name_size":26,"kind":12,"storage":1,"hover":"","comments":"The third and final stage of avahi_simple_poll_iterate(), use this function only if you know what you do","declarations":[{"spell":"75:5-75:31|-1|1|1","param_spellings":["75:49-75:50"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":9,"usr":14266072316919441980,"detailed_name":"int avahi_simple_poll_loop(AvahiSimplePoll *s)","short_name_offset":4,"short_name_size":22,"kind":12,"storage":1,"hover":"","comments":"Call avahi_simple_poll_iterate() in a loop and return if it returns non-zero","declarations":[{"spell":"78:5-78:27|-1|1|1","param_spellings":["78:45-78:46"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":10,"usr":7762761968154542977,"detailed_name":"void avahi_simple_poll_wakeup(AvahiSimplePoll *s)","short_name_offset":5,"short_name_size":24,"kind":12,"storage":1,"hover":"","comments":"Wakeup the main loop. (for threaded environments)","declarations":[{"spell":"81:6-81:30|-1|1|1","param_spellings":["81:48-81:49"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]}],"vars":[{"id":0,"usr":11935334277008023160,"detailed_name":"foosimplewatchhfoo","short_name_offset":0,"short_name_size":18,"hover":"#define foosimplewatchhfoo","comments":"","declarations":[],"spell":"2:9-2:27|-1|1|2","extent":"2:9-2:27|-1|1|0","uses":[],"kind":255,"storage":0},{"id":1,"usr":13934000849307764093,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["29:1-29:19|-1|1|4"],"kind":0,"storage":0},{"id":2,"usr":5853952557760378306,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["83:1-83:17|-1|1|4"],"kind":0,"storage":0}]}