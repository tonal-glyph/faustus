/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.dsp_faust;

public class dsp_faust {
  public static boolean init(int arg0, int arg1) {
    return dsp_faustJNI.init(arg0, arg1);
  }

  public static boolean start() {
    return dsp_faustJNI.start();
  }

  public static void stop() {
    dsp_faustJNI.stop();
  }

  public static void destroy() {
    dsp_faustJNI.destroy();
  }

  public static boolean isRunning() {
    return dsp_faustJNI.isRunning();
  }

  public static int keyOn(int arg0, int arg1) {
    return dsp_faustJNI.keyOn(arg0, arg1);
  }

  public static int keyOff(int arg0) {
    return dsp_faustJNI.keyOff(arg0);
  }

  public static String getJSON() {
    return dsp_faustJNI.getJSON();
  }

  public static int getParamsCount() {
    return dsp_faustJNI.getParamsCount();
  }

  public static void setParamValue(String arg0, float arg1) {
    dsp_faustJNI.setParamValue(arg0, arg1);
  }

  public static float getParamValue(String arg0) {
    return dsp_faustJNI.getParamValue(arg0);
  }

  public static void setVoiceParamValue(String arg0, int arg1, float arg2) {
    dsp_faustJNI.setVoiceParamValue(arg0, arg1, arg2);
  }

  public static float getVoiceParamValue(String arg0, int arg1) {
    return dsp_faustJNI.getVoiceParamValue(arg0, arg1);
  }

  public static String getParamAddress(int arg0) {
    return dsp_faustJNI.getParamAddress(arg0);
  }

  public static void propagateAcc(int acc, float v) {
    dsp_faustJNI.propagateAcc(acc, v);
  }

  public static void setAccConverter(int p, int acc, int curve, float amin, float amid, float amax) {
    dsp_faustJNI.setAccConverter(p, acc, curve, amin, amid, amax);
  }

  public static void propagateGyr(int acc, float v) {
    dsp_faustJNI.propagateGyr(acc, v);
  }

  public static void setGyrConverter(int p, int gyr, int curve, float amin, float amid, float amax) {
    dsp_faustJNI.setGyrConverter(p, gyr, curve, amin, amid, amax);
  }

  public static void propagateMidi(int count, double time, int type, int channel, int data1, int data2) {
    dsp_faustJNI.propagateMidi(count, time, type, channel, data1, data2);
  }

  public static float getCPULoad() {
    return dsp_faustJNI.getCPULoad();
  }

  public static int getScreenColor() {
    return dsp_faustJNI.getScreenColor();
  }

}
